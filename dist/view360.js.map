{"version":3,"file":"view360.js","sources":["../src/utils/browser.ts","../src/utils/browserFeature.ts","../src/utils/math-util.ts","../src/YawPitchControl/utils.ts","../src/YawPitchControl/input/lib/webvr-polyfill/math-util.js","../src/YawPitchControl/input/lib/webvr-polyfill/util.js","../src/YawPitchControl/input/lib/webvr-polyfill/pose-predictor.js","../src/YawPitchControl/consts.ts","../src/YawPitchControl/input/DeviceMotion.ts","../src/YawPitchControl/input/lib/webvr-polyfill/sensor-sample.js","../src/YawPitchControl/input/lib/webvr-polyfill/complementary-filter.js","../src/YawPitchControl/input/ComplementaryFilter.ts","../src/YawPitchControl/input/FusionPoseSensor.ts","../src/YawPitchControl/input/TiltMotionInput.ts","../src/YawPitchControl/ScreenRotationAngle.ts","../src/YawPitchControl/input/RotationPanInput.ts","../src/YawPitchControl/DeviceQuaternion.ts","../src/version.ts","../src/YawPitchControl/YawPitchControl.ts","../src/PanoImageRenderer/ImageLoader.ts","../src/PanoImageRenderer/VideoLoader.ts","../src/PanoImageRenderer/WebGLUtils.ts","../src/PanoImageRenderer/renderer/Renderer.ts","../src/PanoImageRenderer/renderer/CubeRenderer.ts","../src/PanoImageRenderer/renderer/CubeStripRenderer.ts","../src/PanoViewer/consts.ts","../src/PanoImageRenderer/renderer/SphereRenderer.ts","../src/PanoImageRenderer/renderer/CylinderRenderer.ts","../src/PanoImageRenderer/vr/VRManager.ts","../src/utils/utils.ts","../src/PanoImageRenderer/vr/XRManager.ts","../src/PanoImageRenderer/WebGLAnimator.ts","../src/PanoImageRenderer/PanoImageRenderer.ts","../src/PanoViewer/PanoViewer.ts","../src/SpinViewer/SpriteImage.ts","../src/SpinViewer/SpinViewer.ts","../src/index.umd.ts"],"sourcesContent":["/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport getAgent from \"@egjs/agent\";\n\n/* eslint-disable no-new-func, no-nested-ternary */\nconst win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nconst doc = win.document;\nconst agent = getAgent();\nconst osName = agent.os.name;\nconst browserName = agent.browser.name;\nconst IS_IOS = osName === \"ios\";\nconst IS_SAFARI_ON_DESKTOP = osName === \"mac\" && browserName === \"safari\";\nconst IS_SAMSUNG_BROWSER = browserName === \"samsung internet\";\n\nexport {\n\twin as window,\n\tdoc as document,\n\tIS_IOS,\n\tIS_SAFARI_ON_DESKTOP,\n\tIS_SAMSUNG_BROWSER\n};\n","/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { window as win, document as doc } from \"./browser\";\n\nwin.Float32Array = (typeof win.Float32Array !== \"undefined\") ? win.Float32Array : win.Array;\n\nconst Float32Array = win.Float32Array;\nconst getComputedStyle = win.getComputedStyle;\nconst userAgent = win.navigator.userAgent;\nconst SUPPORT_TOUCH = \"ontouchstart\" in win;\nconst SUPPORT_DEVICEMOTION = \"ondevicemotion\" in win;\nconst DeviceMotionEvent = win.DeviceMotionEvent;\nconst devicePixelRatio = win.devicePixelRatio;\n\nconst TRANSFORM = (() => {\n\tconst docStyle = doc.documentElement.style;\n\tconst target = [\"transform\", \"webkitTransform\", \"msTransform\", \"mozTransform\"];\n\n\tfor (let i = 0, len = target.length; i < len; i++) {\n\t\tif (target[i] in docStyle) {\n\t\t\treturn target[i];\n\t\t}\n\t}\n\treturn \"\";\n})();\n\n// check for will-change support\nconst SUPPORT_WILLCHANGE = win.CSS && win.CSS.supports &&\n\twin.CSS.supports(\"will-change\", \"transform\");\n\nlet WEBXR_SUPPORTED = false;\n\nconst checkXRSupport = () => {\n  const navigator = window.navigator as any;\n\n\tif (!navigator.xr) {\n\t\treturn;\n\t}\n\n\tif (navigator.xr.isSessionSupported) {\n\t\tnavigator.xr.isSessionSupported(\"immersive-vr\").then(res => {\n\t\t\tWEBXR_SUPPORTED = res;\n\t\t}).catch(() => {}); // tslint:disable-line no-empty\n\t} else if (navigator.xr.supportsSession) {\n\t\tnavigator.xr.supportsSession(\"immersive-vr\").then(res => {\n\t\t\tWEBXR_SUPPORTED = res;\n\t\t}).catch(() => {}); // tslint:disable-line no-empty\n\t}\n}\n\nexport {\n\tFloat32Array,\n\tgetComputedStyle,\n\tuserAgent,\n\tTRANSFORM,\n\tSUPPORT_TOUCH,\n\tSUPPORT_DEVICEMOTION,\n\tSUPPORT_WILLCHANGE,\n\tcheckXRSupport,\n\tWEBXR_SUPPORTED,\n\tDeviceMotionEvent,\n\tdevicePixelRatio\n};\n\n","/**\n * Original Code\n * https://github.com/toji/gl-matrix/blob/v2.3.2/src/gl-matrix.js\n * Math Util\n * modified by egjs\n */\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n// Some minimal math functionality borrowed from gl-Matrix and stripped down\n// for the purposes of this library.\n\nimport { vec2, vec3, quat } from \"gl-matrix\";\nimport { ValueOf } from \"../types\";\n\nfunction quatToVec3(quaternion: quat) {\n  const baseV = vec3.fromValues(0, 0, 1);\n\n  vec3.transformQuat(baseV, baseV, quaternion);\n  return baseV;\n}\n\nfunction toDegree(a: number) {\n  return a * 180 / Math.PI;\n}\n\nconst util: any = {};\n\nutil.isPowerOfTwo = (n: number) => {\n  return n && (n & (n - 1)) === 0;\n};\n\nutil.extractPitchFromQuat = (quaternion: quat) => {\n  const baseV = quatToVec3(quaternion);\n\n  return -1 * Math.atan2(\n    baseV[1],\n    Math.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n};\n\nutil.hypot = Math.hypot || ((x: number, y : number) => {\n  return Math.sqrt(x * x + y * y);\n});\n\n// implement reference\n// the general equation of a plane : http://www.gisdeveloper.co.kr/entry/평면의-공식\n// calculating angle between two vectors : http://darkpgmr.tistory.com/121\nconst ROTATE_CONSTANT: {\n  PITCH_DELTA: 1,\n  YAW_DELTA_BY_ROLL: 2,\n  YAW_DELTA_BY_YAW: 3,\n} = {\n  PITCH_DELTA: 1,\n  YAW_DELTA_BY_ROLL: 2,\n  YAW_DELTA_BY_YAW: 3,\n};\n\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [0, 0, 1],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [1, 0, 0],\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n  targetAxis: [1, 0, 0],\n  meshPoint: [0, 0, 1],\n};\n\nfunction getRotationDelta(prevQ: quat, curQ: quat, rotateKind: ValueOf<typeof ROTATE_CONSTANT>) {\n  const targetAxis = vec3.fromValues(\n    ROTATE_CONSTANT[rotateKind].targetAxis[0],\n    ROTATE_CONSTANT[rotateKind].targetAxis[1],\n    ROTATE_CONSTANT[rotateKind].targetAxis[2]\n  );\n  const meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n\n  const prevQuaternion = quat.clone(prevQ);\n  const curQuaternion = quat.clone(curQ);\n\n  quat.normalize(prevQuaternion, prevQuaternion);\n  quat.normalize(curQuaternion, curQuaternion);\n\n  let prevPoint = vec3.fromValues(0, 0, 1);\n  let curPoint = vec3.fromValues(0, 0, 1);\n\n  vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n  vec3.transformQuat(curPoint, curPoint, curQuaternion);\n  vec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n\n  const rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n  const rotateDirection = rotateDistance > 0 ? 1 : -1;\n\n  // when counter clock wise, use vec3.fromValues(0,1,0)\n  // when clock wise, use vec3.fromValues(0,-1,0)\n  // const meshPoint1 = vec3.fromValues(0, 0, 0);\n  const meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\n  let meshPoint3;\n\n  if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n    meshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n  } else {\n    meshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n  }\n\n  vec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n  vec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n\n  const vecU = meshPoint2;\n  const vecV = meshPoint3;\n  const vecN = vec3.create();\n\n  vec3.cross(vecN, vecU, vecV);\n  vec3.normalize(vecN, vecN);\n\n  const coefficientA = vecN[0];\n  const coefficientB = vecN[1];\n  const coefficientC = vecN[2];\n  // const coefficientD = -1 * vec3.dot(vecN, meshPoint1);\n\n  // a point on the plane\n  curPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n  vec3.transformQuat(curPoint, curPoint, curQuaternion);\n\n  // a point should project on the plane\n  prevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n  vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\n  // distance between prevPoint and the plane\n  let distance = Math.abs(\n    prevPoint[0] * coefficientA +\n    prevPoint[1] * coefficientB +\n    prevPoint[2] * coefficientC\n  );\n\n  const projectedPrevPoint = vec3.create();\n\n  vec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n\n  let trigonometricRatio =\n    (projectedPrevPoint[0] * curPoint[0] +\n    projectedPrevPoint[1] * curPoint[1] +\n    projectedPrevPoint[2] * curPoint[2]) /\n    (vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n\n  // defensive block\n  if (trigonometricRatio > 1) {\n    trigonometricRatio = 1;\n  }\n\n  const theta = Math.acos(trigonometricRatio);\n\n  const crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n\n  distance =\n    coefficientA * crossVec[0] +\n    coefficientB * crossVec[1] +\n    coefficientC * crossVec[2];\n\n  let thetaDirection;\n\n  if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n    thetaDirection = distance > 0 ? 1 : -1;\n  } else {\n    thetaDirection = distance < 0 ? 1 : -1;\n  }\n\n  const deltaRadian = theta * thetaDirection * rotateDirection;\n\n  return toDegree(deltaRadian);\n}\n\nfunction angleBetweenVec2(v1: vec2, v2: vec2) {\n  const det = v1[0] * v2[1] - v2[0] * v1[1];\n  const theta = -Math.atan2(det, vec2.dot(v1, v2));\n  return theta;\n}\n\nutil.yawOffsetBetween = (viewDir: number, targetDir: number) => {\n  const viewDirXZ = vec2.fromValues(viewDir[0], viewDir[2]);\n  const targetDirXZ = vec2.fromValues(targetDir[0], targetDir[2]);\n\n  vec2.normalize(viewDirXZ, viewDirXZ);\n  vec2.normalize(targetDirXZ, targetDirXZ);\n\n  const theta = -angleBetweenVec2(viewDirXZ, targetDirXZ);\n\n  return theta;\n}\n\nutil.toDegree = toDegree;\nutil.getRotationDelta = getRotationDelta;\nutil.angleBetweenVec2 = angleBetweenVec2;\n\nexport {\n  util,\n  ROTATE_CONSTANT,\n};\n","import { quat } from \"gl-matrix\";\nimport {\n  util as mathUtil,\n  ROTATE_CONSTANT,\n} from \"../utils/math-util\";\n\nexport function toAxis(source, offset) {\n  return offset.reduce((acc, v, i) => {\n    if (source[i]) {\n      acc[source[i]] = v;\n    }\n    return acc;\n  }, {});\n}\n\nexport function getDeltaYaw(prvQ: quat, curQ: quat) {\n  const yawDeltaByYaw = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n  const yawDeltaByRoll = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) *\n    Math.sin(mathUtil.extractPitchFromQuat(curQ));\n\n  return yawDeltaByRoll + yawDeltaByYaw;\n}\n\nexport function getDeltaPitch(prvQ: quat, curQ: quat) {\n  const pitchDelta = mathUtil.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n\n  return pitchDelta;\n}\n","/*\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar MathUtil = window.MathUtil || {};\n\nMathUtil.degToRad = Math.PI / 180;\nMathUtil.radToDeg = 180 / Math.PI;\n\n// Some minimal math functionality borrowed from THREE.Math and stripped down\n// for the purposes of this library.\n\n\nMathUtil.Vector2 = function ( x, y ) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nMathUtil.Vector2.prototype = {\n  constructor: MathUtil.Vector2,\n\n  set: function ( x, y ) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  },\n\n  subVectors: function ( a, b ) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  },\n};\n\nMathUtil.Vector3 = function ( x, y, z ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nMathUtil.Vector3.prototype = {\n  constructor: MathUtil.Vector3,\n\n  set: function ( x, y, z ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  },\n\n  copy: function ( v ) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  },\n\n  length: function () {\n    return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n  },\n\n  normalize: function () {\n    var scalar = this.length();\n\n    if ( scalar !== 0 ) {\n      var invScalar = 1 / scalar;\n\n      this.multiplyScalar(invScalar);\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n\n  multiplyScalar: function ( scalar ) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n  },\n\n  applyQuaternion: function ( q ) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // calculate quat * vector\n    var ix =  qw * x + qy * z - qz * y;\n    var iy =  qw * y + qz * x - qx * z;\n    var iz =  qw * z + qx * y - qy * x;\n    var iw = - qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n    return this;\n  },\n\n  dot: function ( v ) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n\n  crossVectors: function ( a, b ) {\n    var ax = a.x, ay = a.y, az = a.z;\n    var bx = b.x, by = b.y, bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  },\n};\n\nMathUtil.Quaternion = function ( x, y, z, w ) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = ( w !== undefined ) ? w : 1;\n};\n\nMathUtil.Quaternion.prototype = {\n  constructor: MathUtil.Quaternion,\n\n  set: function ( x, y, z, w ) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n  },\n\n  copy: function ( quaternion ) {\n    this.x = quaternion.x;\n    this.y = quaternion.y;\n    this.z = quaternion.z;\n    this.w = quaternion.w;\n\n    return this;\n  },\n\n  setFromEulerXYZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromEulerYXZ: function( x, y, z ) {\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    return this;\n  },\n\n  setFromAxisAngle: function ( axis, angle ) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n\n    var halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos( halfAngle );\n\n    return this;\n  },\n\n  multiply: function ( q ) {\n    return this.multiplyQuaternions( this, q );\n  },\n\n  multiplyQuaternions: function ( a, b ) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;\n    var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;\n\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    return this;\n  },\n\n  inverse: function () {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n\n    this.normalize();\n\n    return this;\n  },\n\n  normalize: function () {\n    var l = Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    if ( l === 0 ) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n\n      this.x = this.x * l;\n      this.y = this.y * l;\n      this.z = this.z * l;\n      this.w = this.w * l;\n    }\n\n    return this;\n  },\n\n  slerp: function ( qb, t ) {\n    if ( t === 0 ) return this;\n    if ( t === 1 ) return this.copy( qb );\n\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n\n    if ( cosHalfTheta < 0 ) {\n      this.w = - qb.w;\n      this.x = - qb.x;\n      this.y = - qb.y;\n      this.z = - qb.z;\n\n      cosHalfTheta = - cosHalfTheta;\n    } else {\n      this.copy( qb );\n    }\n\n    if ( cosHalfTheta >= 1.0 ) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n\n      return this;\n    }\n\n    var halfTheta = Math.acos( cosHalfTheta );\n    var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n    if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n      this.w = 0.5 * ( w + this.w );\n      this.x = 0.5 * ( x + this.x );\n      this.y = 0.5 * ( y + this.y );\n      this.z = 0.5 * ( z + this.z );\n\n      return this;\n    }\n\n    var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n    ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n    this.w = ( w * ratioA + this.w * ratioB );\n    this.x = ( x * ratioA + this.x * ratioB );\n    this.y = ( y * ratioA + this.y * ratioB );\n    this.z = ( z * ratioA + this.z * ratioB );\n\n    return this;\n  },\n\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n\n    var v1, r;\n    var EPS = 0.000001;\n\n    return function ( vFrom, vTo ) {\n      if ( v1 === undefined ) v1 = new MathUtil.Vector3();\n\n      r = vFrom.dot( vTo ) + 1;\n\n      if ( r < EPS ) {\n        r = 0;\n\n        if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n          v1.set( - vFrom.y, vFrom.x, 0 );\n        } else {\n          v1.set( 0, - vFrom.z, vFrom.y );\n        }\n      } else {\n        v1.crossVectors( vFrom, vTo );\n      }\n\n      this.x = v1.x;\n      this.y = v1.y;\n      this.z = v1.z;\n      this.w = r;\n\n      this.normalize();\n\n      return this;\n    }\n  }(),\n};\n\nmodule.exports = MathUtil;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Util = window.Util || {};\n\nUtil.MIN_TIMESTEP = 0.001;\nUtil.MAX_TIMESTEP = 1;\n\nUtil.base64 = function(mimeType, base64) {\n  return 'data:' + mimeType + ';base64,' + base64;\n};\n\nUtil.clamp = function(value, min, max) {\n  return Math.min(Math.max(min, value), max);\n};\n\nUtil.lerp = function(a, b, t) {\n  return a + ((b - a) * t);\n};\n\nUtil.isIOS = (function() {\n  var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  return function() {\n    return isIOS;\n  };\n})();\n\nUtil.isWebViewAndroid = (function() {\n  var isWebViewAndroid = navigator.userAgent.indexOf('Version') !== -1 &&\n      navigator.userAgent.indexOf('Android') !== -1 &&\n      navigator.userAgent.indexOf('Chrome') !== -1;\n  return function() {\n    return isWebViewAndroid;\n  };\n})();\n\nUtil.isSafari = (function() {\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return function() {\n    return isSafari;\n  };\n})();\n\nUtil.isFirefoxAndroid = (function() {\n  var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 &&\n      navigator.userAgent.indexOf('Android') !== -1;\n  return function() {\n    return isFirefoxAndroid;\n  };\n})();\n\nUtil.isR7 = (function() {\n  var isR7 = navigator.userAgent.indexOf('R7 Build') !== -1;\n  return function() {\n    return isR7;\n  };\n})();\n\nUtil.isLandscapeMode = function() {\n  var rtn = (window.orientation == 90 || window.orientation == -90);\n  return Util.isR7() ? !rtn : rtn;\n};\n\n// Helper method to validate the time steps of sensor timestamps.\nUtil.isTimestampDeltaValid = function(timestampDeltaS) {\n  if (isNaN(timestampDeltaS)) {\n    return false;\n  }\n  if (timestampDeltaS <= Util.MIN_TIMESTEP) {\n    return false;\n  }\n  if (timestampDeltaS > Util.MAX_TIMESTEP) {\n    return false;\n  }\n  return true;\n};\n\nUtil.getScreenWidth = function() {\n  return Math.max(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.getScreenHeight = function() {\n  return Math.min(window.screen.width, window.screen.height) *\n      window.devicePixelRatio;\n};\n\nUtil.requestFullscreen = function(element) {\n  if (Util.isWebViewAndroid()) {\n      return false;\n  }\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.exitFullscreen = function() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nUtil.getFullscreenElement = function() {\n  return document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n};\n\nUtil.linkProgram = function(gl, vertexSource, fragmentSource, attribLocationMap) {\n  // No error checking for brevity.\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexSource);\n  gl.compileShader(vertexShader);\n\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentSource);\n  gl.compileShader(fragmentShader);\n\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  for (var attribName in attribLocationMap)\n    gl.bindAttribLocation(program, attribLocationMap[attribName], attribName);\n\n  gl.linkProgram(program);\n\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  return program;\n};\n\nUtil.getProgramUniforms = function(gl, program) {\n  var uniforms = {};\n  var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformName = '';\n  for (var i = 0; i < uniformCount; i++) {\n    var uniformInfo = gl.getActiveUniform(program, i);\n    uniformName = uniformInfo.name.replace('[0]', '');\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n};\n\nUtil.orthoMatrix = function (out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};\n\nUtil.copyArray = function (source, dest) {\n  for (var i = 0, n = source.length; i < n; i++) {\n    dest[i] = source[i];\n  }\n};\n\nUtil.isMobile = function() {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nUtil.extend = function(dest, src) {\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n\n  return dest;\n}\n\nUtil.safariCssSizeWorkaround = function(canvas) {\n  // TODO(smus): Remove this workaround when Safari for iOS is fixed.\n  // iOS only workaround (for https://bugs.webkit.org/show_bug.cgi?id=152556).\n  //\n  // \"To the last I grapple with thee;\n  //  from hell's heart I stab at thee;\n  //  for hate's sake I spit my last breath at thee.\"\n  // -- Moby Dick, by Herman Melville\n  if (Util.isIOS()) {\n    var width = canvas.style.width;\n    var height = canvas.style.height;\n    canvas.style.width = (parseInt(width) + 1) + 'px';\n    canvas.style.height = (parseInt(height)) + 'px';\n    setTimeout(function() {\n      canvas.style.width = width;\n      canvas.style.height = height;\n    }, 100);\n  }\n\n  // Debug only.\n  window.Util = Util;\n  window.canvas = canvas;\n};\n\nUtil.isDebug = function() {\n  return Util.getQueryParameter('debug');\n};\n\nUtil.getQueryParameter = function(name) {\n  var name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n      results = regex.exec(location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nUtil.frameDataFromPose = (function() {\n  var piOver180 = Math.PI / 180.0;\n  var rad45 = Math.PI * 0.25;\n\n  // Borrowed from glMatrix.\n  function mat4_perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov ? (fov.upDegrees * piOver180) : rad45),\n    downTan = Math.tan(fov ? (fov.downDegrees * piOver180) : rad45),\n    leftTan = Math.tan(fov ? (fov.leftDegrees * piOver180) : rad45),\n    rightTan = Math.tan(fov ? (fov.rightDegrees * piOver180) : rad45),\n    xScale = 2.0 / (leftTan + rightTan),\n    yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n  }\n\n  function mat4_fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n  };\n\n  function mat4_translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n      a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n      a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n      out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n      out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n      out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n  };\n\n  function mat4_invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n      return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n  };\n\n  var defaultOrientation = new Float32Array([0, 0, 0, 1]);\n  var defaultPosition = new Float32Array([0, 0, 0]);\n\n  function updateEyeMatrices(projection, view, pose, parameters, vrDisplay) {\n    mat4_perspectiveFromFieldOfView(projection, parameters ? parameters.fieldOfView : null, vrDisplay.depthNear, vrDisplay.depthFar);\n\n    var orientation = pose.orientation || defaultOrientation;\n    var position = pose.position || defaultPosition;\n\n    mat4_fromRotationTranslation(view, orientation, position);\n    if (parameters)\n      mat4_translate(view, view, parameters.offset);\n    mat4_invert(view, view);\n  }\n\n  return function(frameData, pose, vrDisplay) {\n    if (!frameData || !pose)\n      return false;\n\n    frameData.pose = pose;\n    frameData.timestamp = pose.timestamp;\n\n    updateEyeMatrices(\n        frameData.leftProjectionMatrix, frameData.leftViewMatrix,\n        pose, vrDisplay.getEyeParameters(\"left\"), vrDisplay);\n    updateEyeMatrices(\n        frameData.rightProjectionMatrix, frameData.rightViewMatrix,\n        pose, vrDisplay.getEyeParameters(\"right\"), vrDisplay);\n\n    return true;\n  };\n})();\n\nUtil.isInsideCrossDomainIFrame = function() {\n  var isFramed = (window.self !== window.top);\n  var refDomain = Util.getDomainFromUrl(document.referrer);\n  var thisDomain = Util.getDomainFromUrl(window.location.href);\n\n  return isFramed && (refDomain !== thisDomain);\n};\n\n// From http://stackoverflow.com/a/23945027.\nUtil.getDomainFromUrl = function(url) {\n  var domain;\n  // Find & remove protocol (http, ftp, etc.) and get domain.\n  if (url.indexOf(\"://\") > -1) {\n    domain = url.split('/')[2];\n  }\n  else {\n    domain = url.split('/')[0];\n  }\n\n  //find & remove port number\n  domain = domain.split(':')[0];\n\n  return domain;\n}\n\nmodule.exports = Util;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MathUtil = require('./math-util');\nvar Util = require('./util');\n\n/**\n * Given an orientation and the gyroscope data, predicts the future orientation\n * of the head. This makes rendering appear faster.\n *\n * Also see: http://msl.cs.uiuc.edu/~lavalle/papers/LavYerKatAnt14.pdf\n *\n * @param {Number} predictionTimeS time from head movement to the appearance of\n * the corresponding image.\n */\nfunction PosePredictor(predictionTimeS) {\n  this.predictionTimeS = predictionTimeS;\n\n  // The quaternion corresponding to the previous state.\n  this.previousQ = new MathUtil.Quaternion();\n  // Previous time a prediction occurred.\n  this.previousTimestampS = null;\n\n  // The delta quaternion that adjusts the current pose.\n  this.deltaQ = new MathUtil.Quaternion();\n  // The output quaternion.\n  this.outQ = new MathUtil.Quaternion();\n}\n\nPosePredictor.prototype.getPrediction = function(currentQ, gyro, timestampS) {\n  if (!this.previousTimestampS) {\n    this.previousQ.copy(currentQ);\n    this.previousTimestampS = timestampS;\n    return currentQ;\n  }\n\n  // Calculate axis and angle based on gyroscope rotation rate data.\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n\n  var angularSpeed = gyro.length();\n\n  // If we're rotating slowly, don't do prediction.\n  if (angularSpeed < MathUtil.degToRad * 20) {\n    if (Util.isDebug()) {\n      console.log('Moving slowly, at %s deg/s: no prediction',\n                  (MathUtil.radToDeg * angularSpeed).toFixed(1));\n    }\n    this.outQ.copy(currentQ);\n    this.previousQ.copy(currentQ);\n    return this.outQ;\n  }\n\n  // Get the predicted angle based on the time delta and latency.\n  var deltaT = timestampS - this.previousTimestampS;\n  var predictAngle = angularSpeed * this.predictionTimeS;\n\n  this.deltaQ.setFromAxisAngle(axis, predictAngle);\n  this.outQ.copy(this.previousQ);\n  this.outQ.multiply(this.deltaQ);\n\n  this.previousQ.copy(currentQ);\n  this.previousTimestampS = timestampS;\n\n  return this.outQ;\n};\n\n\nmodule.exports = PosePredictor;\n","import { userAgent } from \"../utils/browserFeature\";\n/**\n * Returns a number value indiciating the version of Chrome being used,\n * or otherwise `null` if not on Chrome.\n *\n * Ref: https://github.com/immersive-web/cardboard-vr-display/pull/19\n */\n/**\n * In Chrome m65, `devicemotion` events are broken but subsequently fixed\n * in 65.0.3325.148. Since many browsers use Chromium, ensure that\n * we scope this detection by branch and build numbers to provide\n * a proper fallback.\n * https://github.com/immersive-web/webvr-polyfill/issues/307\n */\nlet version = -1; // It should not be null because it will be compared with number\nlet branch: string | null = null;\nlet build: string | null = null;\n\nconst match = /Chrome\\/([0-9]+)\\.(?:[0-9]*)\\.([0-9]*)\\.([0-9]*)/i.exec(userAgent);\n\nif (match) {\n\tversion = parseInt(match[1], 10);\n\tbranch = match[2];\n\tbuild = match[3];\n}\n\nconst CHROME_VERSION = version;\nconst IS_CHROME_WITHOUT_DEVICE_MOTION = version === 65 && branch === \"3325\" && parseInt(build!, 10) < 148;\nconst IS_ANDROID = /Android/i.test(userAgent);\n\nconst CONTROL_MODE_VR = 1;\nconst CONTROL_MODE_YAWPITCH = 2;\n\nconst TOUCH_DIRECTION_NONE = 1;\nconst TOUCH_DIRECTION_YAW = 2;\nconst TOUCH_DIRECTION_PITCH = 4;\nconst TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_YAW | TOUCH_DIRECTION_PITCH;\n\n/* Const for MovableCoord */\nconst MC_DECELERATION = 0.0014;\nconst MC_MAXIMUM_DURATION = 1000;\nconst MC_BIND_SCALE = [0.20, 0.20];\n\nconst MIN_FIELD_OF_VIEW = 20;\nconst MAX_FIELD_OF_VIEW = 110;\nconst PAN_SCALE = 320;\n\n// const DELTA_THRESHOLD = 0.015;\n// const DELTA_THRESHOLD = 0.09; // Note4\n// const DELTA_THRESHOLD = 0.0825;\n// const DELTA_THRESHOLD = 0.075;\n// const DELTA_THRESHOLD = 0.06;\n// const DELTA_THRESHOLD = 0.045;\nconst DELTA_THRESHOLD = 0.0375; // Note2\n\nconst YAW_RANGE_HALF = 180;\nconst PITCH_RANGE_HALF = 90;\nconst CIRCULAR_PITCH_RANGE_HALF = 180;\nconst PINCH_EVENTS = \"pinchstart pinchmove pinchend\";\n\nconst KEYMAP = {\n\tLEFT_ARROW: 37,\n\tA: 65,\n\tUP_ARROW: 38,\n\tW: 87,\n\tRIGHT_ARROW: 39,\n\tD: 68,\n\tDOWN_ARROW: 40,\n\tS: 83,\n};\n\nconst GYRO_MODE: {\n  NONE: \"none\";\n\tYAWPITCH: \"yawPitch\";\n\tVR: \"VR\";\n} = {\n\tNONE: \"none\",\n\tYAWPITCH: \"yawPitch\",\n\tVR: \"VR\"\n};\n\nexport {\n\tGYRO_MODE,\n\n\tCONTROL_MODE_VR,\n\tCONTROL_MODE_YAWPITCH,\n\n\tTOUCH_DIRECTION_NONE,\n\tTOUCH_DIRECTION_YAW,\n\tTOUCH_DIRECTION_PITCH,\n\tTOUCH_DIRECTION_ALL,\n\n\tMC_DECELERATION,\n\tMC_MAXIMUM_DURATION,\n\tMC_BIND_SCALE,\n\tMIN_FIELD_OF_VIEW,\n\tMAX_FIELD_OF_VIEW,\n\tPAN_SCALE,\n\tDELTA_THRESHOLD,\n\tYAW_RANGE_HALF,\n\tPITCH_RANGE_HALF,\n\tCIRCULAR_PITCH_RANGE_HALF,\n\tPINCH_EVENTS,\n\tKEYMAP,\n\n\tCHROME_VERSION,\n\tIS_CHROME_WITHOUT_DEVICE_MOTION,\n\tIS_ANDROID\n};\n","import Component from \"@egjs/component\";\nimport { vec3 } from \"gl-matrix\";\nimport { Mutable } from \"../../types\";\nimport { window } from \"../../utils/browser\";\nimport { IS_CHROME_WITHOUT_DEVICE_MOTION, IS_ANDROID } from \"../consts\";\n\nconst STILLNESS_THRESHOLD = 200; // millisecond\n\nexport default class DeviceMotion extends Component<{\n  devicemotion: {\n    inputEvent: DeviceMotionEvent | {\n      deviceorientation: {\n        alpha: number;\n        beta: number;\n        gamma: number;\n      }\n    }\n  },\n}> {\n  public readonly isWithoutDeviceMotion: boolean;\n  public readonly isAndroid: boolean;\n\n  public stillGyroVec: vec3;\n  public rawGyroVec: vec3;\n  public adjustedGyroVec: vec3\n  public lastDevicemotionTimestamp: number;\n\n  private _timer: number;\n  private _isEnabled: boolean;\n\n  constructor() {\n    super();\n    this._onDeviceMotion = this._onDeviceMotion.bind(this);\n    this._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n    this._onChromeWithoutDeviceMotion = this._onChromeWithoutDeviceMotion.bind(this);\n\n    this.isWithoutDeviceMotion = IS_CHROME_WITHOUT_DEVICE_MOTION;\n    this.isAndroid = IS_ANDROID;\n\n    this.stillGyroVec = vec3.create();\n    this.rawGyroVec = vec3.create();\n    this.adjustedGyroVec = vec3.create();\n\n    this._timer = -1;\n\n    this.lastDevicemotionTimestamp = 0;\n    this._isEnabled = false;\n    this.enable();\n  }\n\n  public enable() {\n    if (this.isAndroid) {\n      window.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n    }\n    if (this.isWithoutDeviceMotion) {\n      window.addEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n    } else {\n      window.addEventListener(\"devicemotion\", this._onDeviceMotion);\n    }\n    this._isEnabled = true;\n  }\n\n  public disable() {\n    window.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n    window.removeEventListener(\"deviceorientation\", this._onChromeWithoutDeviceMotion);\n    window.removeEventListener(\"devicemotion\", this._onDeviceMotion);\n    this._isEnabled = false;\n  }\n\n  private _onChromeWithoutDeviceMotion(e: DeviceOrientationEvent) {\n    let {alpha, beta, gamma} = e;\n\n    // There is deviceorientation event trigged with empty values\n    // on Headless Chrome.\n    if (alpha === null) {\n      return;\n    }\n\n    // convert to radian\n    alpha = (alpha || 0) * Math.PI / 180;\n    beta = (beta || 0) * Math.PI / 180;\n    gamma = (gamma || 0) * Math.PI / 180;\n\n    this.trigger(\"devicemotion\", {\n      inputEvent: {\n        deviceorientation: {\n          alpha,\n          beta,\n          gamma: -gamma\n        }\n      }\n    });\n  }\n\n  private _onDeviceOrientation() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n\n    this._timer = window.setTimeout(() => {\n      if ((new Date().getTime() - this.lastDevicemotionTimestamp) < STILLNESS_THRESHOLD) {\n        vec3.copy(this.stillGyroVec, this.rawGyroVec);\n      }\n    }, STILLNESS_THRESHOLD);\n  }\n\n  private _onDeviceMotion(e: DeviceMotionEvent) {\n    // desktop chrome triggers devicemotion event with empthy sensor values.\n    // Those events should ignored.\n    const isGyroSensorAvailable = !(e.rotationRate!.alpha == null);\n    const isGravitySensorAvailable = !(e.accelerationIncludingGravity!.x == null);\n\n    if (e.interval === 0 || !(isGyroSensorAvailable && isGravitySensorAvailable)) {\n      return;\n    }\n\n    const devicemotionEvent = {...e} as Mutable<DeviceMotionEvent>;\n\n    devicemotionEvent.interval = e.interval;\n    devicemotionEvent.timeStamp = e.timeStamp;\n    devicemotionEvent.type = e.type;\n    devicemotionEvent.rotationRate = {\n      alpha: e.rotationRate!.alpha,\n      beta: e.rotationRate!.beta,\n      gamma: e.rotationRate!.gamma,\n    };\n    devicemotionEvent.accelerationIncludingGravity = {\n      x: e.accelerationIncludingGravity!.x,\n      y: e.accelerationIncludingGravity!.y,\n      z: e.accelerationIncludingGravity!.z,\n    };\n    devicemotionEvent.acceleration = {\n      x: e.acceleration!.x,\n      y: e.acceleration!.y,\n      z: e.acceleration!.z,\n    };\n\n    if (this.isAndroid) {\n      vec3.set(\n        this.rawGyroVec,\n        e.rotationRate!.alpha || 0,\n        e.rotationRate!.beta || 0,\n        e.rotationRate!.gamma || 0);\n      vec3.subtract(this.adjustedGyroVec, this.rawGyroVec, this.stillGyroVec);\n      this.lastDevicemotionTimestamp = new Date().getTime();\n\n      (devicemotionEvent as any).adjustedRotationRate = {\n        alpha: this.adjustedGyroVec[0],\n        beta: this.adjustedGyroVec[1],\n        gamma: this.adjustedGyroVec[2]};\n    }\n\n    this.trigger(\"devicemotion\", {\n      inputEvent: devicemotionEvent\n    });\n  }\n}\n","function SensorSample(sample, timestampS) {\n  this.set(sample, timestampS);\n};\n\nSensorSample.prototype.set = function(sample, timestampS) {\n  this.sample = sample;\n  this.timestampS = timestampS;\n};\n\nSensorSample.prototype.copy = function(sensorSample) {\n  this.set(sensorSample.sample, sensorSample.timestampS);\n};\n\nmodule.exports = SensorSample;\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar SensorSample = require('./sensor-sample.js');\nvar MathUtil = require('./math-util.js');\nvar Util = require('./util.js');\n\n/**\n * An implementation of a simple complementary filter, which fuses gyroscope and\n * accelerometer data from the 'devicemotion' event.\n *\n * Accelerometer data is very noisy, but stable over the long term.\n * Gyroscope data is smooth, but tends to drift over the long term.\n *\n * This fusion is relatively simple:\n * 1. Get orientation estimates from accelerometer by applying a low-pass filter\n *    on that data.\n * 2. Get orientation estimates from gyroscope by integrating over time.\n * 3. Combine the two estimates, weighing (1) in the long term, but (2) for the\n *    short term.\n */\nfunction ComplementaryFilter(kFilter) {\n  this.kFilter = kFilter;\n\n  // Raw sensor measurements.\n  this.currentAccelMeasurement = new SensorSample();\n  this.currentGyroMeasurement = new SensorSample();\n  this.previousGyroMeasurement = new SensorSample();\n\n  // Set default look direction to be in the correct direction.\n  if (Util.isIOS()) {\n    this.filterQ = new MathUtil.Quaternion(-1, 0, 0, 1);\n  } else {\n    this.filterQ = new MathUtil.Quaternion(1, 0, 0, 1);\n  }\n  this.previousFilterQ = new MathUtil.Quaternion();\n  this.previousFilterQ.copy(this.filterQ);\n\n  // Orientation based on the accelerometer.\n  this.accelQ = new MathUtil.Quaternion();\n  // Whether or not the orientation has been initialized.\n  this.isOrientationInitialized = false;\n  // Running estimate of gravity based on the current orientation.\n  this.estimatedGravity = new MathUtil.Vector3();\n  // Measured gravity based on accelerometer.\n  this.measuredGravity = new MathUtil.Vector3();\n\n  // Debug only quaternion of gyro-based orientation.\n  this.gyroIntegralQ = new MathUtil.Quaternion();\n}\n\nComplementaryFilter.prototype.addAccelMeasurement = function(vector, timestampS) {\n  this.currentAccelMeasurement.set(vector, timestampS);\n};\n\nComplementaryFilter.prototype.addGyroMeasurement = function(vector, timestampS) {\n  this.currentGyroMeasurement.set(vector, timestampS);\n\n  var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n  if (Util.isTimestampDeltaValid(deltaT)) {\n    this.run_();\n  }\n\n  this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n};\n\nComplementaryFilter.prototype.run_ = function() {\n\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n\n  var deltaT = this.currentGyroMeasurement.timestampS -\n      this.previousGyroMeasurement.timestampS;\n\n  // Convert gyro rotation vector to a quaternion delta.\n  var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n\n  // filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n\n  // Calculate the delta between the current estimated gravity and the real\n  // gravity vector from accelerometer.\n  var invFilterQ = new MathUtil.Quaternion();\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n\n  // Compare estimated gravity with measured gravity, get the delta quaternion\n  // between the two.\n  var deltaQ = new MathUtil.Quaternion();\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n\n  if (Util.isDebug()) {\n    console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)',\n                MathUtil.radToDeg * Util.getQuaternionAngle(deltaQ),\n                (this.estimatedGravity.x).toFixed(1),\n                (this.estimatedGravity.y).toFixed(1),\n                (this.estimatedGravity.z).toFixed(1),\n                (this.measuredGravity.x).toFixed(1),\n                (this.measuredGravity.y).toFixed(1),\n                (this.measuredGravity.z).toFixed(1));\n  }\n\n  // Calculate the SLERP target: current orientation plus the measured-estimated\n  // quaternion delta.\n  var targetQ = new MathUtil.Quaternion();\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n\n  // SLERP factor: 0 is pure gyro, 1 is pure accel.\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n  this.previousFilterQ.copy(this.filterQ);\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n  return this.filterQ;\n};\n\nComplementaryFilter.prototype.accelToQuaternion_ = function(accel) {\n  var normAccel = new MathUtil.Vector3();\n  normAccel.copy(accel);\n  normAccel.normalize();\n  var quat = new MathUtil.Quaternion();\n  quat.setFromUnitVectors(new MathUtil.Vector3(0, 0, -1), normAccel);\n  quat.inverse();\n  return quat;\n};\n\nComplementaryFilter.prototype.gyroToQuaternionDelta_ = function(gyro, dt) {\n  // Extract axis and angle from the gyroscope data.\n  var quat = new MathUtil.Quaternion();\n  var axis = new MathUtil.Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  quat.setFromAxisAngle(axis, gyro.length() * dt);\n  return quat;\n};\n\n\nmodule.exports = ComplementaryFilter;\n","import MathUtil from \"./lib/webvr-polyfill/math-util\";\nimport ComplementaryFilter from \"./lib/webvr-polyfill/complementary-filter\";\n\nComplementaryFilter.prototype.run_ = function() {\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n\n  const deltaT = this.currentGyroMeasurement.timestampS -\n  this.previousGyroMeasurement.timestampS;\n\n  // Convert gyro rotation vector to a quaternion delta.\n  const gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n\n  // filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n\n  // Calculate the delta between the current estimated gravity and the real\n  // gravity vector from accelerometer.\n  const invFilterQ = new MathUtil.Quaternion();\n\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n\n  // Compare estimated gravity with measured gravity, get the delta quaternion\n  // between the two.\n  const deltaQ = new MathUtil.Quaternion();\n\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n\n  // Calculate the SLERP target: current orientation plus the measured-estimated\n  // quaternion delta.\n  const targetQ = new MathUtil.Quaternion();\n\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n\n  // SLERP factor: 0 is pure gyro, 1 is pure accel.\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n  this.previousFilterQ.copy(this.filterQ);\n\n  if (!this.isFilterQuaternionInitialized) {\n    this.isFilterQuaternionInitialized = true;\n  }\n};\n\nComplementaryFilter.prototype.getOrientation = function() {\n  if (this.isFilterQuaternionInitialized) {\n    return this.filterQ;\n  } else {\n    return null;\n  }\n};\n\nexport default ComplementaryFilter;\n","import Component from \"@egjs/component\";\nimport { quat } from \"gl-matrix\";\nimport PosePredictor from \"./lib/webvr-polyfill/pose-predictor\";\nimport MathUtil from \"./lib/webvr-polyfill/math-util\";\nimport Util from \"./lib/webvr-polyfill/util\";\nimport { window, IS_IOS, IS_SAFARI_ON_DESKTOP } from \"../../utils/browser\";\nimport DeviceMotion from \"./DeviceMotion\";\nimport ComplementaryFilter from \"./ComplementaryFilter\";\nimport { CHROME_VERSION } from \"../consts\";\n\nconst K_FILTER = 0.98;\nconst PREDICTION_TIME_S = 0.040;\n\nexport default class FusionPoseSensor extends Component<{\n  change: {\n    quaternion: quat;\n  }\n}> {\n  public deviceMotion: DeviceMotion | null;\n  public accelerometer: any;\n  public gyroscope: any;\n  public filter: ComplementaryFilter;\n  public posePredictor: PosePredictor;\n  public filterToWorldQ: any;\n  public isFirefoxAndroid: boolean;\n  public isIOS: boolean;\n  public isChromeUsingDegrees: boolean;\n  public inverseWorldToScreenQ: any;\n  public worldToScreenQ: any;\n  public originalPoseAdjustQ: any;\n  public resetQ: any;\n  public deviceOrientationFixQ: any;\n  public predictedQ: any;\n  public previousTimestampS: number;\n\n  private _isEnabled: boolean;\n  private _deviceOrientationQ: any;\n  private _prevOrientation: quat;\n  private _alpha: number;\n\n  constructor() {\n    super();\n\n    this.deviceMotion = new DeviceMotion();\n\n    this.accelerometer = new MathUtil.Vector3();\n    this.gyroscope = new MathUtil.Vector3();\n\n    this._onDeviceMotionChange = this._onDeviceMotionChange.bind(this);\n    this._onScreenOrientationChange = this._onScreenOrientationChange.bind(this);\n\n    this.filter = new ComplementaryFilter(K_FILTER);\n    this.posePredictor = new PosePredictor(PREDICTION_TIME_S);\n\n    this.filterToWorldQ = new MathUtil.Quaternion();\n\n    this.isFirefoxAndroid = Util.isFirefoxAndroid();\n    // This includes iPhone & iPad(both desktop and mobile mode) ref #326\n    this.isIOS = IS_IOS || IS_SAFARI_ON_DESKTOP;\n\n    // Ref https://github.com/immersive-web/cardboard-vr-display/issues/18\n    this.isChromeUsingDegrees = CHROME_VERSION >= 66;\n\n    this._isEnabled = false;\n\n    // Set the filter to world transform, depending on OS.\n    if (this.isIOS) {\n      this.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), Math.PI / 2);\n    } else {\n      this.filterToWorldQ.setFromAxisAngle(new MathUtil.Vector3(1, 0, 0), -Math.PI / 2);\n    }\n\n    this.inverseWorldToScreenQ = new MathUtil.Quaternion();\n    this.worldToScreenQ = new MathUtil.Quaternion();\n    this.originalPoseAdjustQ = new MathUtil.Quaternion();\n    this.originalPoseAdjustQ.setFromAxisAngle(new MathUtil.Vector3(0, 0, 1),\n      -window.orientation * Math.PI / 180);\n\n    this._setScreenTransform();\n    // Adjust this filter for being in landscape mode.\n    if (Util.isLandscapeMode()) {\n      this.filterToWorldQ.multiply(this.inverseWorldToScreenQ);\n    }\n\n    // Keep track of a reset transform for resetSensor.\n    this.resetQ = new MathUtil.Quaternion();\n\n    this.deviceMotion.on(\"devicemotion\", this._onDeviceMotionChange);\n    this.enable();\n  }\n\n  public enable() {\n    if (this.isEnabled()) {\n      return;\n    }\n    this.deviceMotion!.enable();\n    this._isEnabled = true;\n    window.addEventListener(\"orientationchange\", this._onScreenOrientationChange);\n  }\n\n  public disable() {\n    if (!this.isEnabled()) {\n      return;\n    }\n    this.deviceMotion!.disable();\n    this._isEnabled = false;\n    window.removeEventListener(\"orientationchange\", this._onScreenOrientationChange);\n  }\n\n  public isEnabled() {\n    return this._isEnabled;\n  }\n\n  public destroy() {\n    this.disable();\n    this.deviceMotion = null;\n  }\n\n  public getOrientation() {\n    let orientation;\n\n    // Hack around using deviceorientation instead of devicemotion\n    if (this.deviceMotion!.isWithoutDeviceMotion && this._deviceOrientationQ) {\n      this.deviceOrientationFixQ = this.deviceOrientationFixQ || (() => {\n        const y = new MathUtil.Quaternion()\n          .setFromAxisAngle(new MathUtil.Vector3(0, 1, 0), -this._alpha);\n\n        return y;\n      })();\n\n      orientation = this._deviceOrientationQ;\n      const out = new MathUtil.Quaternion();\n\n      out.copy(orientation);\n      out.multiply(this.filterToWorldQ);\n      out.multiply(this.resetQ);\n      out.multiply(this.worldToScreenQ);\n      out.multiplyQuaternions(this.deviceOrientationFixQ, out);\n\n      // return quaternion as glmatrix quaternion object\n      const out_ = quat.fromValues(\n        out.x,\n        out.y,\n        out.z,\n        out.w\n      );\n\n      return quat.normalize(out_, out_);\n    } else {\n      // Convert from filter space to the the same system used by the\n      // deviceorientation event.\n      orientation = this.filter.getOrientation();\n\n      if (!orientation) {\n        return null;\n      }\n\n      const out = this._convertFusionToPredicted(orientation);\n\n      // return quaternion as glmatrix quaternion object\n      const out_ = quat.fromValues(\n        out.x,\n        out.y,\n        out.z,\n        out.w\n      );\n\n      return quat.normalize(out_, out_);\n    }\n  }\n\n  private _triggerChange() {\n    const orientation = this.getOrientation();\n\n    // if orientation is not prepared. don't trigger change event\n    if (!orientation) {\n      return;\n    }\n\n    if (!this._prevOrientation) {\n      this._prevOrientation = orientation;\n      return;\n    }\n\n    if (quat.equals(this._prevOrientation, orientation)) {\n      return;\n    }\n\n    this.trigger(\"change\", { quaternion: orientation });\n  }\n\n  private _convertFusionToPredicted(orientation: quat) {\n    // Predict orientation.\n    this.predictedQ =\n      this.posePredictor.getPrediction(orientation, this.gyroscope, this.previousTimestampS);\n\n    // Convert to THREE coordinate system: -Z forward, Y up, X right.\n    const out = new MathUtil.Quaternion();\n\n    out.copy(this.filterToWorldQ);\n    out.multiply(this.resetQ);\n    out.multiply(this.predictedQ);\n    out.multiply(this.worldToScreenQ);\n\n    return out;\n  }\n\n  private _onDeviceMotionChange({ inputEvent }) {\n    const deviceorientation = inputEvent.deviceorientation;\n    const deviceMotion = inputEvent;\n    const accGravity = deviceMotion.accelerationIncludingGravity;\n    const rotRate = deviceMotion.adjustedRotationRate || deviceMotion.rotationRate;\n    let timestampS = deviceMotion.timeStamp / 1000;\n\n    if (deviceorientation) {\n      if (!this._alpha) {\n        this._alpha = deviceorientation.alpha;\n      }\n      this._deviceOrientationQ = this._deviceOrientationQ || new MathUtil.Quaternion();\n      this._deviceOrientationQ.setFromEulerYXZ(\n        deviceorientation.beta,\n        deviceorientation.alpha,\n        deviceorientation.gamma\n      );\n\n      this._triggerChange();\n    } else {\n      // Firefox Android timeStamp returns one thousandth of a millisecond.\n      if (this.isFirefoxAndroid) {\n        timestampS /= 1000;\n      }\n\n      this.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n      this.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n\n      // Browsers on iOS, Firefox/Android, and Chrome m66/Android `rotationRate`\n      // is reported in degrees, so we first convert to radians.\n      if (this.isIOS || this.isFirefoxAndroid || this.isChromeUsingDegrees) {\n        this.gyroscope.multiplyScalar(Math.PI / 180);\n      }\n\n      this.filter.addAccelMeasurement(this.accelerometer, timestampS);\n      this.filter.addGyroMeasurement(this.gyroscope, timestampS);\n\n      this._triggerChange();\n\n      this.previousTimestampS = timestampS;\n    }\n  }\n\n  private _onScreenOrientationChange() {\n    this._setScreenTransform();\n  }\n\n  private _setScreenTransform() {\n    this.worldToScreenQ.set(0, 0, 0, 1);\n\n    const orientation = window.orientation;\n\n    switch (orientation) {\n      case 0:\n        break;\n      case 90:\n      case -90:\n      case 180:\n        this.worldToScreenQ\n          .setFromAxisAngle(new MathUtil.Vector3(0, 0, 1), orientation / -180 * Math.PI);\n        break;\n      default:\n        break;\n    }\n    this.inverseWorldToScreenQ.copy(this.worldToScreenQ);\n    this.inverseWorldToScreenQ.inverse();\n  }\n}\n","import Component from \"@egjs/component\";\nimport { quat } from \"gl-matrix\";\nimport { toAxis } from \"../utils\";\nimport FusionPoseSensor from \"./FusionPoseSensor\";\nimport { util, ROTATE_CONSTANT } from \"../../utils/math-util\";\nimport { IInputTypeObserver } from \"@egjs/axes/declaration/inputType/InputType\";\n\nfunction getDeltaYaw(prvQ, curQ) {\n  const yawDeltaByYaw = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n  const yawDeltaByRoll = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) *\n    Math.sin(util.extractPitchFromQuat(curQ));\n\n  return yawDeltaByRoll + yawDeltaByYaw;\n}\n\nfunction getDeltaPitch(prvQ, curQ) {\n  const pitchDelta = util.getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n\n  return pitchDelta;\n}\n\nexport default class TiltMotionInput extends Component<{}> {\n  public element: HTMLElement;\n  public options: { scale: number; threshold: number; };\n  public fusionPoseSensor: FusionPoseSensor | null;\n  public axes: string[];\n  public observer: IInputTypeObserver | null;\n\n  private _prevQuaternion: quat | null;\n  private _quaternion: quat | null;\n\n\n  constructor(el: HTMLElement, options: Partial<{ scale: number; threshold: number; }> = {}) {\n    super();\n    this.element = el;\n\n    this._prevQuaternion = null;\n    this._quaternion = null;\n\n    this.fusionPoseSensor = null;\n\n    this.options = {\n      ...{\n        scale: 1,\n        threshold: 0,\n      }, ...options\n    };\n\n    this._onPoseChange = this._onPoseChange.bind(this);\n  }\n\n  public mapAxes(axes: string[]) {\n    this.axes = axes;\n  }\n\n  public connect(observer: IInputTypeObserver) {\n    if (this.observer) {\n      return this;\n    }\n    this.observer = observer;\n    this.fusionPoseSensor = new FusionPoseSensor();\n    this.fusionPoseSensor.enable();\n    this._attachEvent();\n    return this;\n  }\n\n  public disconnect() {\n    if (!this.observer) {\n      return this;\n    }\n\n    this._dettachEvent();\n    this.fusionPoseSensor!.disable();\n    this.fusionPoseSensor!.destroy();\n    this.fusionPoseSensor = null;\n    this.observer = null;\n    return this;\n  }\n\n  public destroy() {\n    this.disconnect();\n    (this.element as any) = null;\n    (this.options as any) = null;\n    (this.axes as any) = null;\n    this._prevQuaternion = null;\n    this._quaternion = null;\n  }\n\n  private _onPoseChange(event) {\n    if (!this._prevQuaternion) {\n      this._prevQuaternion = quat.clone(event.quaternion);\n      this._quaternion = quat.clone(event.quaternion);\n      return;\n    }\n\n    quat.copy(this._prevQuaternion, this._quaternion!);\n    quat.copy(this._quaternion!, event.quaternion);\n\n    this.observer!.change(this, event, toAxis(this.axes, [\n      getDeltaYaw(this._prevQuaternion, this._quaternion),\n      getDeltaPitch(this._prevQuaternion, this._quaternion)\n    ]));\n  }\n\n  private _attachEvent() {\n    this.fusionPoseSensor!.on(\"change\", this._onPoseChange);\n  }\n\n  private _dettachEvent() {\n    this.fusionPoseSensor!.off(\"change\", this._onPoseChange);\n  }\n}\n","import { glMatrix } from \"gl-matrix\";\nimport { window } from \"../utils/browser\";\n\n// Singleton\nlet screenRotationAngleInst: ScreenRotationAngle | null = null;\nlet refCount = 0;\n\nexport default class ScreenRotationAngle {\n  private _spinR: number;\n  private _screenOrientationAngle: number;\n\n  constructor() {\n    refCount++;\n\n    if (screenRotationAngleInst) {\n      return screenRotationAngleInst;\n    }\n    /* eslint-disable */\n    screenRotationAngleInst = this;\n    /* eslint-enable */\n    this._onDeviceOrientation = this._onDeviceOrientation.bind(this);\n    this._onOrientationChange = this._onOrientationChange.bind(this);\n\n    this._spinR = 0;\n\n    this._screenOrientationAngle = 0;\n    window.addEventListener(\"deviceorientation\", this._onDeviceOrientation);\n    window.addEventListener(\"orientationchange\", this._onOrientationChange);\n  }\n\n  public getRadian() {\n    // Join with screen orientation\n    // this._testVal = this._spinR + \", \" + this._screenOrientationAngle + \", \" + window.orientation;\n    return this._spinR + glMatrix.toRadian(this._screenOrientationAngle);\n  }\n\n  public unref() {\n    if (--refCount > 0) {\n      return;\n    }\n\n    window.removeEventListener(\"deviceorientation\", this._onDeviceOrientation);\n    window.removeEventListener(\"orientationchange\", this._onOrientationChange);\n\n    this._spinR = 0;\n    this._screenOrientationAngle = 0;\n    /* eslint-disable */\n    screenRotationAngleInst = null;\n    /* eslint-enable */\n    refCount = 0;\n  }\n\n  private _onDeviceOrientation(e: DeviceOrientationEvent) {\n    if (e.beta === null || e.gamma === null) {\n      // (Chrome) deviceorientation is fired with invalid information {alpha=null, beta=null, ...} despite of not dispatching it. We skip it.\n      return;\n    }\n\n    // Radian\n    const betaR = glMatrix.toRadian(e.beta);\n    const gammaR = glMatrix.toRadian(e.gamma);\n\n    /* spinR range = [-180, 180], left side: 0 ~ -180(deg), right side: 0 ~ 180(deg) */\n    this._spinR = Math.atan2(Math.cos(betaR) * Math.sin(gammaR), Math.sin(betaR));\n  }\n\n  private _onOrientationChange(e: DeviceOrientationEvent) {\n    if (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n      this._screenOrientationAngle = screen.orientation.angle;\n    } else if (window.orientation !== undefined) {\n      /* iOS */\n      this._screenOrientationAngle = window.orientation >= 0 ?\n        window.orientation : 360 + window.orientation;\n    }\n  }\n}\n","import Axes, { PanInput } from \"@egjs/axes\";\nimport { IInputTypeObserver } from \"@egjs/axes/declaration/inputType/InputType\";\nimport { PanInputOption } from \"@egjs/axes/declaration/inputType/PanInput\";\nimport ScreenRotationAngle from \"../ScreenRotationAngle\";\n\n/**\n * RotationPanInput is extension of PanInput to compensate coordinates by screen rotation angle.\n *\n * The reason for using this function is that in VR mode,\n * the roll angle is adjusted in the direction opposite to the screen rotation angle.\n *\n * Therefore, the angle that the user touches and moves does not match the angle at which the actual object should move.\n * @extends PanInput\n */\n // @ts-ignore\nexport default class RotationPanInput extends PanInput {\n  private _useRotation: boolean;\n  private _screenRotationAngle: ScreenRotationAngle | null;\n  private _userDirection: number;\n\n  /**\n   * Constructor\n   *\n   * @private\n   * @param {HTMLElement} el target element\n   * @param {Object} [options] The option object\n   * @param {Boolean} [options.useRotation]  Whether to use rotation(or VR)\n   */\n  constructor(el: HTMLElement, options: Partial<{ useRotation: boolean } & PanInputOption > = {}) {\n    super(el, options);\n\n    this._useRotation = false;\n    this._screenRotationAngle = null;\n\n    this.setUseRotation(!!(options && options.useRotation));\n\n    this._userDirection = Axes.DIRECTION_ALL;\n  }\n\n  public setUseRotation(useRotation: boolean) {\n    this._useRotation = useRotation;\n\n    if (this._screenRotationAngle) {\n      this._screenRotationAngle.unref();\n      this._screenRotationAngle = null;\n    }\n\n    if (this._useRotation) {\n      this._screenRotationAngle = new ScreenRotationAngle();\n    }\n  }\n\n  public connect(observer: IInputTypeObserver) {\n    // User intetened direction\n    this._userDirection = this._direction;\n\n    // In VR Mode, Use ALL direction if direction is not none\n    // Because horizontal and vertical is changed dynamically by screen rotation.\n    // this._direction is used to initialize hammerjs\n    if (this._useRotation && (this._direction & Axes.DIRECTION_ALL)) {\n      this._direction = Axes.DIRECTION_HORIZONTAL;\n    }\n\n    return super.connect(observer);\n  }\n\n  public destroy() {\n    if (this._useRotation && this._screenRotationAngle) {\n      this._screenRotationAngle.unref();\n    }\n\n    super.destroy();\n  }\n\n  private getOffset(properties: number[], useDirection: boolean[]) {\n    if (this._useRotation === false) {\n      // @ts-ignore\n      return super.getOffset(properties, useDirection);\n    }\n\n    // @ts-ignore\n    const offset = super.getOffset(properties, [true, true]);\n    const newOffset = [0, 0];\n\n    const theta = this._screenRotationAngle!.getRadian();\n\n    const cosTheta = Math.cos(theta);\n    const sinTheta = Math.sin(theta);\n\n    // RotateZ\n    newOffset[0] = offset[0] * cosTheta - offset[1] * sinTheta;\n    newOffset[1] = offset[1] * cosTheta + offset[0] * sinTheta;\n\n    // Use only user allowed direction.\n    if (!(this._userDirection & Axes.DIRECTION_HORIZONTAL)) {\n      newOffset[0] = 0;\n    } else if (!(this._userDirection & Axes.DIRECTION_VERTICAL)) {\n      newOffset[1] = 0;\n    }\n\n    return newOffset;\n  }\n}\n\n/**\n * Override getDirectionByAngle to return DIRECTION_ALL\n * Ref: https://github.com/naver/egjs-axes/issues/99\n *\n * But we obey axes's rule. If axes's rule is problem, let's apply following code.\n */\n// PanInput.getDirectionByAngle = function (angle, thresholdAngle) {\n// \treturn DIRECTION_ALL;\n// };\n","import Component from \"@egjs/component\";\nimport { vec3, glMatrix, quat } from \"gl-matrix\";\nimport FusionPoseSensor from \"./input/FusionPoseSensor\";\n\nconst Y_AXIS_VECTOR = vec3.fromValues(0, 1, 0);\n\nexport default class DeviceQuaternion extends Component<{\n  change: {\n    isTrusted: boolean;\n  }\n}> {\n  private _fusionPoseSensor: FusionPoseSensor | null;\n  private _quaternion: quat;\n\n  constructor() {\n    super();\n\n    this._fusionPoseSensor = new FusionPoseSensor();\n    this._quaternion = quat.create();\n\n    this._fusionPoseSensor.enable();\n    this._fusionPoseSensor.on(\"change\", e => {\n      this._quaternion = e.quaternion;\n\n      this.trigger(\"change\", { isTrusted: true });\n    });\n  }\n\n  public getCombinedQuaternion(yaw: number) {\n    const yawQ = quat.setAxisAngle(quat.create(), Y_AXIS_VECTOR, glMatrix.toRadian(-yaw));\n    const conj = quat.conjugate(quat.create(), this._quaternion);\n    // Multiply pitch quaternion -> device quaternion -> yaw quaternion\n    const outQ = quat.multiply(quat.create(), conj, yawQ);\n\n    return outQ;\n  }\n\n  public destroy() {\n    // detach all event handler\n    this.off();\n\n    if (this._fusionPoseSensor) {\n      this._fusionPoseSensor.off();\n      this._fusionPoseSensor.destroy();\n      this._fusionPoseSensor = null;\n    }\n  }\n}\n","const VERSION = \"#__VERSION__#\";\n\nexport {\n\tVERSION\n};\n","import Component from \"@egjs/component\";\nimport Axes, { PinchInput, MoveKeyInput, WheelInput } from \"@egjs/axes\";\nimport { vec2, quat, glMatrix } from \"gl-matrix\";\nimport { getComputedStyle, SUPPORT_TOUCH, SUPPORT_DEVICEMOTION } from \"../utils/browserFeature\";\nimport TiltMotionInput from \"./input/TiltMotionInput\";\nimport RotationPanInput from \"./input/RotationPanInput\";\nimport DeviceQuaternion from \"./DeviceQuaternion\";\nimport { util as mathUtil } from \"../utils/math-util\";\nimport {\n  GYRO_MODE,\n  TOUCH_DIRECTION_YAW,\n  TOUCH_DIRECTION_PITCH,\n  TOUCH_DIRECTION_ALL,\n  MC_DECELERATION,\n  MC_MAXIMUM_DURATION,\n  MC_BIND_SCALE,\n  MAX_FIELD_OF_VIEW,\n  PAN_SCALE,\n  YAW_RANGE_HALF,\n  PITCH_RANGE_HALF,\n  CIRCULAR_PITCH_RANGE_HALF,\n  CONTROL_MODE_VR,\n  CONTROL_MODE_YAWPITCH,\n  TOUCH_DIRECTION_NONE,\n} from \"./consts\";\nimport { VERSION } from \"../version\";\nimport { ValueOf } from \"../types\";\n\nconst DEFAULT_YAW_RANGE = [-YAW_RANGE_HALF, YAW_RANGE_HALF];\nconst DEFAULT_PITCH_RANGE = [-PITCH_RANGE_HALF, PITCH_RANGE_HALF];\nconst CIRCULAR_PITCH_RANGE = [-CIRCULAR_PITCH_RANGE_HALF, CIRCULAR_PITCH_RANGE_HALF];\n\nexport type YawPitchControlOptions = {\n  element: HTMLElement | null;\n  yaw: number;\n  pitch: number;\n  fov: number;\n  showPolePoint: boolean;\n  useZoom: boolean;\n  useKeyboard: boolean;\n  gyroMode: ValueOf<typeof GYRO_MODE>;\n  touchDirection: number;\n  yawRange: number[];\n  pitchRange: number[];\n  fovRange: number[];\n  aspectRatio: number;\n};\ntype YawPitchControlEvents = {\n  change: {\n    yaw: number;\n    pitch: number;\n    fov: number;\n    quaternion: quat | null;\n    targetElement: HTMLElement;\n    isTrusted: boolean\n  };\n  hold: {\n    isTrusted: boolean;\n  };\n  animationEnd: {\n    isTrusted: boolean;\n  };\n};\n\n/**\n * A module used to provide coordinate based on yaw/pitch orientation. This module receives user touch action, keyboard, mouse and device orientation(if it exists) as input, then combines them and converts it to yaw/pitch coordinates.\n *\n * @alias eg.YawPitchControl\n * @extends eg.Component\n *\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nclass YawPitchControl extends Component<YawPitchControlEvents> {\n  public static VERSION = VERSION;\n  // Expose DeviceOrientationControls sub module for test purpose\n  public static CONTROL_MODE_VR = CONTROL_MODE_VR;\n  public static CONTROL_MODE_YAWPITCH = CONTROL_MODE_YAWPITCH;\n  public static TOUCH_DIRECTION_ALL = TOUCH_DIRECTION_ALL;\n  public static TOUCH_DIRECTION_YAW = TOUCH_DIRECTION_YAW;\n  public static TOUCH_DIRECTION_PITCH = TOUCH_DIRECTION_PITCH;\n  public static TOUCH_DIRECTION_NONE = TOUCH_DIRECTION_NONE;\n\n  private _element: HTMLElement | null;\n  private _initialFov: number;\n  private _enabled: boolean;\n  private _isAnimating: boolean;\n  private _deviceQuaternion: DeviceQuaternion | null;\n\n  private axes: Axes;\n  private axesPanInput: RotationPanInput;\n  private axesWheelInput: WheelInput;\n  private axesTiltMotionInput: TiltMotionInput | null;\n  private axesPinchInput: PinchInput | null;\n  private axesMoveKeyInput: MoveKeyInput;\n\n  /**\n   * @param {object} options The option object of the eg.YawPitch module\n   * @param {HTMLElement|null}[options.element=null] element A base element for the eg.YawPitch module\n   * @param {number} [options.yaw=0] initial yaw (degree)\n   * @param {number} [options.pitch=0] initial pitch (degree)\n   * @param {number} [options.fov=65] initial field of view (degree)\n   * @param {boolean} [optiosn.showPolePoint=true] Indicates whether pole is shown\n   * @param {boolean} [options.useZoom=true] Indicates whether zoom is available\n   * @param {boolean} [options.useKeyboard=true] Indicates whether keyboard is enabled\n   * @param {string} [config.gyroMode=yawPitch] Enables control through device motion.\n   * @param {number} [options.touchDirection=TOUCH_DIRECTION_ALL] Direction of the touch movement (TOUCH_DIRECTION_ALL: all,  TOUCH_DIRECTION_YAW: horizontal, TOUCH_DIRECTION_PITCH: vertical, TOUCH_DIRECTION_NONE: no move)\n   * @param {number[]} [options.yawRange=[-180, 180] Range of visible yaw\n   * @param {number[]} [options.pitchRange=[-90, 90] Range of visible pitch\n   * @param {number[]} [options.fovRange=[30, 110] Range of FOV\n   * @param {number} [options.aspectRatio=1] Aspect Ratio\n   */\n  constructor(options: Partial<YawPitchControlOptions>) {\n    super();\n\n    const opt = {\n      ...{\n        element: null,\n        yaw: 0,\n        pitch: 0,\n        fov: 65,\n        showPolePoint: false,\n        useZoom: true,\n        useKeyboard: true,\n        gyroMode: GYRO_MODE.YAWPITCH,\n        touchDirection: TOUCH_DIRECTION_ALL,\n        yawRange: DEFAULT_YAW_RANGE,\n        pitchRange: DEFAULT_PITCH_RANGE,\n        fovRange: [30, 110],\n        aspectRatio: 1, /* TODO: Need Mandatory? */\n      }, ...options\n    };\n\n    this._element = opt.element;\n    this._initialFov = opt.fov;\n    this._enabled = false;\n    this._isAnimating = false;\n    this._deviceQuaternion = null;\n\n    this._initAxes(opt);\n    this.option(opt);\n  }\n\n  /**\n   * Update Pan Scale\n   *\n   * Scale(Sensitivity) values of panning is related with fov and height.\n   * If at least one of them is changed, this function need to be called.\n   * @param {*} param\n   */\n  public updatePanScale(param: Partial<{\n    height: number;\n  }> = {}) {\n    const fov = this.axes.get().fov;\n    const areaHeight = param.height || parseInt(window.getComputedStyle(this._element!).height, 10);\n    const scale = MC_BIND_SCALE[0] * fov / this._initialFov * PAN_SCALE / areaHeight;\n\n    this.axesPanInput.options.scale = [scale, scale];\n    this.axes.options.deceleration = MC_DECELERATION * fov / MAX_FIELD_OF_VIEW;\n\n    return this;\n  }\n\n  public option(): YawPitchControlOptions;\n  public option<K extends keyof YawPitchControlOptions>(key: K): YawPitchControlOptions[K];\n  public option<K extends keyof YawPitchControlOptions>(key: K, newValue: YawPitchControlOptions[K]): YawPitchControl;\n  public option(newOptions: Partial<YawPitchControlOptions>): YawPitchControl;\n  /*\n   * Override component's option method\n   * to call method for updating values which is affected by option change.\n   *\n   * @param {*} args\n   */\n  public option<K extends keyof YawPitchControlOptions>(key?: K | Partial<YawPitchControlOptions>, newValue?: YawPitchControlOptions[K]) {\n    // Getter\n    if (!key) {\n      return this._getOptions();\n    } else if (key && typeof key === \"string\" && typeof newValue === \"undefined\") {\n      return this._getOptions(key);\n    }\n\n    // Setter\n    let newOptions: Partial<YawPitchControlOptions> = {};\n    let changedKeyList: string[] = []; // TODO: if value is not changed, then do not push on changedKeyList.\n\n    if (typeof key === \"string\") {\n      changedKeyList.push(key);\n      newOptions[key] = newValue;\n    } else {\n      const options = key; // Retrieving object here\n      changedKeyList = Object.keys(options);\n      newOptions = {...options};\n    }\n\n    this._setOptions(this._getValidatedOptions(newOptions));\n    this._applyOptions(changedKeyList);\n    return this;\n  }\n\n  /**\n   * Enable YawPitch functionality\n   *\n   * @method eg.YawPitch#enable\n   */\n  public enable() {\n    if (this._enabled) {\n      return this;\n    }\n\n    this._enabled = true;\n\n    // touchDirection is decided by parameter is valid string (Ref. Axes.connect)\n    this._applyOptions(Object.keys(this.options));\n\n    // TODO: Is this code is needed? Check later.\n    this.updatePanScale();\n\n    return this;\n  }\n\n  /**\n   * Disable YawPitch functionality\n   *\n   * @method eg.YawPitch#disable\n   */\n  public disable(persistOrientation: boolean = false) {\n    if (!this._enabled) {\n      return this;\n    }\n\n    // TODO: Check peristOrientation is needed!\n    if (!persistOrientation) {\n      this._resetOrientation();\n    }\n    this.axes.disconnect();\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Set one or more of yaw, pitch, fov\n   *\n   * @param {Object} coordinate yaw, pitch, fov\n   * @param {Number} duration Animation duration. if it is above 0 then it's animated.\n   */\n  public lookAt({yaw, pitch, fov}, duration) {\n    const pos = this.axes.get();\n\n    const y = yaw === undefined ? 0 : yaw - pos.yaw;\n    const p = pitch === undefined ? 0 : pitch - pos.pitch;\n    const f = fov === undefined ? 0 : fov - pos.fov;\n\n    // Allow duration of animation to have more than MC_MAXIMUM_DURATION.\n    this.axes.options.maximumDuration = Infinity;\n\n    this.axes.setBy({\n      yaw: y,\n      pitch: p,\n      fov: f\n    }, duration);\n  }\n\n  public getYawPitch() {\n    const yawPitch = this.axes.get();\n\n    return {\n      yaw: yawPitch.yaw,\n      pitch: yawPitch.pitch,\n    };\n  }\n\n  public getFov() {\n    return this.axes.get().fov;\n  }\n\n  public getQuaternion() {\n    const pos = this.axes.get();\n\n    return this._deviceQuaternion!.getCombinedQuaternion(pos.yaw);\n  }\n\n  public shouldRenderWithQuaternion() {\n    return this.options.gyroMode === GYRO_MODE.VR;\n  }\n\n  /**\n   * Destroys objects\n   */\n  public destroy() {\n    /* tslint:disable no-unused-expression */\n    this.axes && this.axes.destroy();\n    this.axesPanInput && this.axesPanInput.destroy();\n    this.axesWheelInput && this.axesWheelInput.destroy();\n    this.axesTiltMotionInput && this.axesTiltMotionInput.destroy();\n    this.axesPinchInput && this.axesPinchInput.destroy();\n    this.axesMoveKeyInput && this.axesMoveKeyInput.destroy();\n    this._deviceQuaternion && this._deviceQuaternion.destroy();\n  }\n\n  private _initAxes(opt: YawPitchControlOptions) {\n    const yRange = this._updateYawRange(opt.yawRange, opt.fov, opt.aspectRatio);\n    const pRange = this._updatePitchRange(opt.pitchRange, opt.fov, opt.showPolePoint);\n    const useRotation = opt.gyroMode === GYRO_MODE.VR;\n\n    this.axesPanInput = new RotationPanInput(this._element!, {useRotation});\n    this.axesWheelInput = new WheelInput(this._element, {scale: -4});\n    this.axesTiltMotionInput = null;\n    this.axesPinchInput = SUPPORT_TOUCH ? new PinchInput(this._element, {scale: -1}) : null;\n    this.axesMoveKeyInput = new MoveKeyInput(this._element, {scale: [-6, 6]});\n\n    this.axes = new Axes({\n      yaw: {\n        range: yRange,\n        circular: this._isCircular(yRange),\n        bounce: [0, 0]\n      },\n      pitch: {\n        range: pRange,\n        circular: this._isCircular(pRange),\n        bounce: [0, 0]\n      },\n      fov: {\n        range: opt.fovRange,\n        circular: [false, false],\n        bounce: [0, 0]\n      },\n    }, {\n      deceleration: MC_DECELERATION,\n      maximumDuration: MC_MAXIMUM_DURATION\n    }, {\n      yaw: opt.yaw,\n      pitch: opt.pitch,\n      fov: opt.fov\n    }).on({\n      // TODO: change event type after Axes event type inference update\n      hold: (evt: any) => {\n        // Restore maximumDuration not to be spin too mush.\n        this.axes.options.maximumDuration = MC_MAXIMUM_DURATION;\n\n        this.trigger(\"hold\", { isTrusted: evt.isTrusted });\n      },\n      change: (evt: any) => {\n        if (evt.delta.fov !== 0) {\n          this._updateControlScale(evt);\n          this.updatePanScale();\n        }\n        this._triggerChange(evt);\n      },\n      release: evt => {\n        this._triggerChange(evt);\n      },\n      animationEnd: (evt: any) => {\n        this.trigger(\"animationEnd\", { isTrusted: evt.isTrusted });\n      },\n    });\n  }\n\n  private _getValidatedOptions(newOptions: Partial<YawPitchControlOptions>) {\n    if (newOptions.yawRange) {\n      newOptions.yawRange =\n        this._getValidYawRange(newOptions.yawRange, newOptions.fov, newOptions.aspectRatio);\n    }\n    if (newOptions.pitchRange) {\n      newOptions.pitchRange = this._getValidPitchRange(newOptions.pitchRange, newOptions.fov);\n    }\n    return newOptions;\n  }\n\n  private _getOptions(): YawPitchControlOptions;\n  private _getOptions<K extends keyof YawPitchControlOptions>(key: K): YawPitchControlOptions[K];\n  private _getOptions<K extends keyof YawPitchControlOptions>(key?: K) {\n    let value;\n\n    if (typeof key === \"string\") {\n      value = this.options[key];\n    } else if (arguments.length === 0) {\n      value = this.options;\n    }\n    return value;\n  }\n\n  private _setOptions(options: Partial<YawPitchControlOptions>): void {\n    for (const key in options) {\n      this.options[key] = options[key];\n    }\n  }\n\n  private _applyOptions(keys: string[]) {\n    const options = this.options;\n    const axes = this.axes;\n    const isVR = options.gyroMode === GYRO_MODE.VR;\n    const isYawPitch = options.gyroMode === GYRO_MODE.YAWPITCH;\n    // If it's VR mode, restrict user interaction to yaw direction only\n    const touchDirection = isVR ?\n      (TOUCH_DIRECTION_YAW & options.touchDirection) :\n      options.touchDirection;\n\n    // If one of below is changed, call updateControlScale()\n    if (keys.some(key =>\n      key === \"showPolePoint\" || key === \"fov\" || key === \"aspectRatio\" ||\n      key === \"yawRange\" || key === \"pitchRange\"\n    )) {\n      // If fov is changed, update pan scale\n      if (keys.indexOf(\"fov\") >= 0) {\n        axes.setTo({\"fov\": options.fov});\n        this.updatePanScale();\n      }\n\n      this._updateControlScale();\n    }\n\n    if (keys.some(key => key === \"fovRange\")) {\n      const fovRange = options.fovRange;\n      const prevFov = axes.get().fov;\n      let nextFov = axes.get().fov;\n\n      vec2.copy(axes.axis.fov.range as any, fovRange);\n\n      if (nextFov < fovRange[0]) {\n        nextFov = fovRange[0];\n      } else if (prevFov > fovRange[1]) {\n        nextFov = fovRange[1];\n      }\n\n      if (prevFov !== nextFov) {\n        axes.setTo({\n          fov: nextFov\n        }, 0);\n        this._updateControlScale();\n        this.updatePanScale();\n      }\n    }\n\n    if (keys.some(key => key === \"gyroMode\") && SUPPORT_DEVICEMOTION) {\n      // Disconnect first\n      if (this.axesTiltMotionInput) {\n        this.axes.disconnect(this.axesTiltMotionInput);\n        this.axesTiltMotionInput.destroy();\n        this.axesTiltMotionInput = null;\n      }\n\n      if (this._deviceQuaternion) {\n        this._deviceQuaternion.destroy();\n        this._deviceQuaternion = null;\n      }\n\n      if (isVR) {\n        this._initDeviceQuaternion();\n      } else if (isYawPitch) {\n        this.axesTiltMotionInput = new TiltMotionInput(this._element!);\n        this.axes.connect([\"yaw\", \"pitch\"], this.axesTiltMotionInput);\n      }\n\n      this.axesPanInput.setUseRotation(isVR);\n    }\n\n    if (keys.some(key => key === \"useKeyboard\")) {\n      const useKeyboard = options.useKeyboard;\n\n      if (useKeyboard) {\n        axes.connect([\"yaw\", \"pitch\"], this.axesMoveKeyInput);\n      } else {\n        axes.disconnect(this.axesMoveKeyInput);\n      }\n    }\n\n    if (keys.some(key => key === \"useZoom\")) {\n      const useZoom = options.useZoom;\n\n      // Disconnect first\n      axes.disconnect(this.axesWheelInput);\n      if (useZoom) {\n        axes.connect([\"fov\"], this.axesWheelInput);\n      }\n    }\n\n    this._togglePinchInputByOption(options.touchDirection, options.useZoom);\n\n    if (keys.some(key => key === \"touchDirection\") && this._enabled) {\n      this._enableTouch(touchDirection);\n    }\n  }\n\n  private _togglePinchInputByOption(touchDirection: YawPitchControlOptions[\"touchDirection\"], useZoom: boolean) {\n    if (this.axesPinchInput) {\n      // disconnect first\n      this.axes.disconnect(this.axesPinchInput);\n\n      // If the touchDirection option is not ALL, pinchInput should be disconnected to make use of a native scroll.\n      if (\n        useZoom &&\n        touchDirection === TOUCH_DIRECTION_ALL &&\n        // TODO: Get rid of using private property of axes instance.\n        (this.axes as any)._inputs.indexOf(this.axesPinchInput) === -1\n      ) {\n        this.axes.connect([\"fov\"], this.axesPinchInput);\n      }\n    }\n  }\n\n  private _enableTouch(direction: YawPitchControlOptions[\"touchDirection\"]) {\n    // Disconnect first\n    if (this.axesPanInput) {\n      this.axes.disconnect(this.axesPanInput);\n    }\n\n    const yawEnabled = direction & TOUCH_DIRECTION_YAW ? \"yaw\" : null;\n    const pitchEnabled = direction & TOUCH_DIRECTION_PITCH ? \"pitch\" : null;\n\n    this.axes.connect([yawEnabled, pitchEnabled] as string[], this.axesPanInput);\n  }\n\n  private _initDeviceQuaternion() {\n    this._deviceQuaternion = new DeviceQuaternion();\n    this._deviceQuaternion.on(\"change\", e => {\n      this._triggerChange(e);\n    });\n  }\n\n  private _getValidYawRange(newYawRange: number[], newFov?: number, newAspectRatio?: number) {\n    const ratio = this._adjustAspectRatio(newAspectRatio || this.options.aspectRatio || 1);\n    const fov = newFov || this.axes.get().fov;\n    const horizontalFov = fov * ratio;\n    const isValid = newYawRange[1] - newYawRange[0] >= horizontalFov;\n\n    if (isValid) {\n      return newYawRange;\n    } else {\n      return this.options.yawRange || DEFAULT_YAW_RANGE;\n    }\n  }\n\n  private _getValidPitchRange(newPitchRange: number[], newFov?: number) {\n    const fov = newFov || this.axes.get().fov;\n    const isValid = newPitchRange[1] - newPitchRange[0] >= fov;\n\n    if (isValid) {\n      return newPitchRange;\n    } else {\n      return this.options.pitchRange || DEFAULT_PITCH_RANGE;\n    }\n  }\n\n  private _isCircular(range: number[]) {\n    return range[1] - range[0] < 360 ? [false, false] : [true, true];\n  }\n\n  /**\n   * Update yaw/pitch min/max by 5 factor\n   *\n   * 1. showPolePoint\n   * 2. fov\n   * 3. yawRange\n   * 4. pitchRange\n   * 5. aspectRatio\n   *\n   * If one of above is changed, call this function\n   */\n  private _updateControlScale(changeEvt?: any) { // TODO: Change type after Axes type inference update\n    const opt = this.options;\n    const fov = this.axes.get().fov;\n\n    const pRange = this._updatePitchRange(opt.pitchRange, fov, opt.showPolePoint);\n    const yRange = this._updateYawRange(opt.yawRange, fov, opt.aspectRatio);\n\n    // TODO: If not changed!?\n    const pos = this.axes.get();\n    let y = pos.yaw;\n    let p = pos.pitch;\n\n    vec2.copy(this.axes.axis.yaw.range as any, yRange as any);\n    vec2.copy(this.axes.axis.pitch.range as any, pRange as any);\n    this.axes.axis.yaw.circular = this._isCircular(yRange);\n    this.axes.axis.pitch.circular = this._isCircular(pRange);\n\n    /**\n     * update yaw/pitch by it's range.\n     */\n    if (y < yRange[0]) {\n      y = yRange[0];\n    } else if (y > yRange[1]) {\n      y = yRange[1];\n    }\n\n    if (p < pRange[0]) {\n      p = pRange[0];\n    } else if (p > pRange[1]) {\n      p = pRange[1];\n    }\n\n    if (changeEvt) {\n      changeEvt.set({\n        yaw: y,\n        pitch: p,\n      });\n    }\n\n    this.axes.setTo({\n      yaw: y,\n      pitch: p,\n    }, 0);\n\n    return this;\n  }\n\n  private _updatePitchRange(pitchRange: number[], fov: number, showPolePoint: boolean) {\n    if (this.options.gyroMode === GYRO_MODE.VR) {\n      // Circular pitch on VR\n      return CIRCULAR_PITCH_RANGE;\n    }\n\n    const verticalAngle = pitchRange[1] - pitchRange[0];\n    const halfFov = fov / 2;\n    const isPanorama = verticalAngle < 180;\n\n    if (showPolePoint && !isPanorama) {\n      // Use full pinch range\n      return pitchRange.concat();\n    }\n\n    // Round value as movableCood do.\n    return [pitchRange[0] + halfFov, pitchRange[1] - halfFov];\n  }\n\n  private _updateYawRange(yawRange: number[], fov: number, aspectRatio: number) {\n    if (this.options.gyroMode === GYRO_MODE.VR) {\n      return DEFAULT_YAW_RANGE;\n    }\n\n    const horizontalAngle = yawRange[1] - yawRange[0];\n\n    /**\n     * Full 360 Mode\n     */\n    if (horizontalAngle >= 360) {\n      // Don't limit yaw range on Full 360 mode.\n      return yawRange.concat();\n    }\n\n    /**\n     * Panorama mode\n     */\n    // Ref : https://github.com/naver/egjs-view360/issues/290\n    const halfHorizontalFov =\n      mathUtil.toDegree(Math.atan2(aspectRatio, 1 / Math.tan(glMatrix.toRadian(fov / 2))));\n\n    // Round value as movableCood do.\n    return [\n      yawRange[0] + halfHorizontalFov,\n      yawRange[1] - halfHorizontalFov\n    ];\n  }\n\n  // TODO: update param type after Axes event type inference update\n  private _triggerChange(evt: any) {\n    const pos = this.axes.get();\n    const opt = this.options;\n    const event: YawPitchControlEvents[\"change\"] = {\n      targetElement: opt.element,\n      isTrusted: evt.isTrusted,\n      yaw: pos.yaw,\n      pitch: pos.pitch,\n      fov: pos.fov,\n      quaternion: null,\n    };\n\n    if (opt.gyroMode === GYRO_MODE.VR && this._deviceQuaternion) {\n      event.quaternion = this._deviceQuaternion.getCombinedQuaternion(pos.yaw);\n    }\n    this.trigger(\"change\", event);\n  }\n\n  // TODO: makes constant to be logic\n  private _adjustAspectRatio(input: number) {\n    const inputRange = [\n      0.520, 0.540, 0.563, 0.570, 0.584, 0.590, 0.609, 0.670,\n      0.702, 0.720, 0.760, 0.780, 0.820, 0.920, 0.970, 1.00, 1.07, 1.14, 1.19,\n      1.25, 1.32, 1.38, 1.40, 1.43, 1.53, 1.62, 1.76, 1.77, 1.86, 1.96, 2.26,\n      2.30, 2.60, 3.00, 5.00, 6.00\n    ];\n    const outputRange = [\n      0.510, 0.540, 0.606, 0.560, 0.628, 0.630, 0.647, 0.710,\n      0.736, 0.757, 0.780, 0.770, 0.800, 0.890, 0.975, 1.00, 1.07, 1.10, 1.15,\n      1.18, 1.22, 1.27, 1.30, 1.33, 1.39, 1.45, 1.54, 1.55, 1.58, 1.62, 1.72,\n      1.82, 1.92, 2.00, 2.24, 2.30\n    ];\n\n    let rangeIdx = -1;\n\n    for (let i = 0; i < inputRange.length - 1; i++) {\n      if (inputRange[i] <= input && inputRange[i + 1] >= input) {\n        rangeIdx = i;\n        break;\n      }\n    }\n\n    if (rangeIdx === -1) {\n      if (inputRange[0] > input) {\n        return outputRange[0];\n      } else {\n        // FIXME: this looks definitely wrong\n        return outputRange[(outputRange[0] as any).length - 1];\n      }\n    }\n\n    const inputA = inputRange[rangeIdx];\n    const inputB = inputRange[rangeIdx + 1];\n    const outputA = outputRange[rangeIdx];\n    const outputB = outputRange[rangeIdx + 1];\n\n    return this._lerp(outputA, outputB, (input - inputA) / (inputB - inputA));\n  }\n\n  private _lerp(a, b, fraction) {\n    return a + fraction * (b - a);\n  }\n\n  private _resetOrientation() {\n    const opt = this.options;\n\n    this.axes.setTo({\n      yaw: opt.yaw,\n      pitch: opt.pitch,\n      fov: opt.fov,\n    }, 0);\n\n    return this;\n  }\n}\n\nexport default YawPitchControl;\n","import Promise from \"promise-polyfill\";\nimport Component from \"@egjs/component\";\nimport { ValueOf } from \"../types\";\n\nconst STATUS: {\n  \"NONE\": 0;\n  \"LOADING\": 1;\n  \"LOADED\": 2;\n  \"ERROR\": 3;\n} = {\n  \"NONE\": 0,\n  \"LOADING\": 1,\n  \"LOADED\": 2,\n  \"ERROR\": 3\n};\n\nconst EVENT: {\n  READYSTATECHANGE: \"readystatechange\";\n} = {\n  \"READYSTATECHANGE\": \"readystatechange\"\n};\n\ntype ImageCandidate = HTMLImageElement | string;\n\nclass ImageLoader extends Component<{\n  [EVENT.READYSTATECHANGE]: {\n    type: ValueOf<typeof STATUS>;\n  }\n}> {\n  public static STATUS = STATUS;\n\n  private _image: HTMLImageElement[] | null;\n  private _onceHandlers\n  private _loadStatus: ValueOf<typeof STATUS>;\n\n  constructor(image?: ImageCandidate | ImageCandidate[]) {\n    // Super constructor\n    super();\n\n    this._image = null;\n    this._onceHandlers = [];\n    this._loadStatus = STATUS.NONE;\n\n    if (image) {\n      this.set(image);\n    }\n  }\n\n  public static createElement(image: ImageCandidate | ImageCandidate[]): HTMLImageElement[] {\n    const images = image instanceof Array ? image : [image];\n\n    return images.map(img => {\n      let _img = img;\n\n      if (typeof img === \"string\") {\n        _img = new Image();\n        _img.crossOrigin = \"anonymous\";\n        _img.src = img;\n      }\n      return _img as HTMLImageElement;\n    });\n  }\n\n  public static isMaybeLoaded(image: HTMLImageElement | HTMLImageElement[]) {\n    let result = false;\n\n    if (image instanceof Image) {\n      result = image.complete && image.naturalWidth !== 0;\n    } else if (image instanceof Array) {\n      result = !image.some(img => !img.complete || img.naturalWidth === 0);\n    }\n\n    return result;\n  }\n\n  public get() {\n    return new Promise((res, rej) => {\n      if (!this._image) {\n        rej(\"ImageLoader: image is not defiend\");\n      } else if (this._loadStatus === STATUS.LOADED) {\n        res(this.getElement());\n      } else if (this._loadStatus === STATUS.LOADING) {\n        /* Check isMaybeLoaded() first because there may have\n          posibilities that image already loaded before get is called.\n          for example calling get on external image onload callback.*/\n        if (ImageLoader.isMaybeLoaded(this._image)) {\n          this._loadStatus = STATUS.LOADED;\n          res(this.getElement());\n        } else {\n          this.on(EVENT.READYSTATECHANGE, e => {\n            if (e.type === STATUS.LOADED) {\n              res(this.getElement());\n            } else {\n              rej(\"ImageLoader: failed to load images.\");\n            }\n          });\n        }\n      } else {\n        rej(\"ImageLoader: failed to load images\");\n      }\n    });\n  }\n\n  /**\n   * @param image img element or img url or array of img element or array of img url\n   */\n  public set(image: ImageCandidate | ImageCandidate[]) {\n    this._loadStatus = STATUS.LOADING;\n\n    this._image = ImageLoader.createElement(image);\n\n    if (ImageLoader.isMaybeLoaded(this._image)) {\n      this._loadStatus = STATUS.LOADED;\n      return;\n    }\n\n    this.onceLoaded(\n      this._image,\n      () => {\n        this._loadStatus = STATUS.LOADED;\n        this.trigger(EVENT.READYSTATECHANGE, {\n          type: STATUS.LOADED\n        });\n      },\n      () => {\n        this._loadStatus = STATUS.ERROR;\n        this.trigger(EVENT.READYSTATECHANGE, {\n          type: STATUS.ERROR\n        });\n      }\n    );\n  }\n\n  public getElement(): HTMLImageElement | HTMLImageElement[] {\n    const images = this._image!;\n\n    return images.length === 1 ? images[0] : images;\n  }\n\n  public onceLoaded(\n    target: HTMLImageElement | HTMLImageElement[],\n    onload: (images: HTMLImageElement | HTMLImageElement[]) => any,\n    onerror: (images: HTMLImageElement | HTMLImageElement[]) => any\n  ) {\n    const targets = target instanceof Array ? target : [target];\n    const targetsNotLoaded = targets.filter(img => !ImageLoader.isMaybeLoaded(img));\n    const loadPromises = targetsNotLoaded.map(img => new Promise((res, rej) => {\n      this._once(img, \"load\", () => (res(img)));\n      this._once(img, \"error\", () => (rej(img)));\n    }));\n\n    Promise.all(loadPromises).then(\n      result => (onload(targets.length === 1 ? targets[0] : targets)),\n      reason => (onerror(reason))\n    );\n  }\n\n  public getStatus() {\n    return this._loadStatus;\n  }\n\n  public destroy() {\n    this._onceHandlers.forEach(handler => {\n      handler.target.removeEventListener(handler.type, handler.fn);\n    });\n    this._onceHandlers = [];\n    this._image!.forEach(img => img.src = \"\");\n    this._image = null;\n    this._loadStatus = STATUS.NONE;\n  }\n\n  private _once(target: HTMLImageElement, type: string, listener: (evt: Event) => any) {\n    const fn = event => {\n      target.removeEventListener(type, fn);\n      listener(event);\n    };\n\n    target.addEventListener(type, fn);\n    this._onceHandlers.push({target, type, fn});\n  }\n}\n\nexport default ImageLoader;\n","// import Agent from \"@egjs/agent\";\nimport Promise from \"promise-polyfill\";\nimport { ValueOf } from \"../types\";\n\n/* Ref https://www.w3schools.com/tags/av_prop_readystate.asp */\nconst READY_STATUS: {\n  HAVE_NOTHING: 0,\n  HAVE_METADATA: 1,\n  HAVE_CURRENT_DATA: 2,\n  HAVE_FUTURE_DATA: 3,\n  HAVE_ENOUGH_DATA: 4,\n  LOADING_FAILED: -1\n} = {\n  HAVE_NOTHING: 0, // no information whether or not the audio/video is ready\n  HAVE_METADATA: 1, // HAVE_METADATA - metadata for the audio/video is ready\n  HAVE_CURRENT_DATA: 2, // data for the current playback position is available, but not enough data to play next frame/millisecond\n  HAVE_FUTURE_DATA: 3, // data for the current and at least the next frame is available\n  HAVE_ENOUGH_DATA: 4, // enough data available to start playing\n  // below is custom status for failed to load status\n  LOADING_FAILED: -1\n};\n\nconst READYSTATECHANGE_EVENT_NAME: {\n  [READY_STATUS.HAVE_METADATA]: \"loadedmetadata\",\n  [READY_STATUS.HAVE_CURRENT_DATA]: \"loadeddata\",\n  [READY_STATUS.HAVE_FUTURE_DATA]: \"canplay\",\n  [READY_STATUS.HAVE_ENOUGH_DATA]: \"canplaythrough\",\n} = {\n  [READY_STATUS.HAVE_METADATA]: \"loadedmetadata\",\n  [READY_STATUS.HAVE_CURRENT_DATA]: \"loadeddata\",\n  [READY_STATUS.HAVE_FUTURE_DATA]: \"canplay\",\n  [READY_STATUS.HAVE_ENOUGH_DATA]: \"canplaythrough\",\n};\n\ntype VideoCandidate = string | { src: string; type: string };\n\nexport default class VideoLoader {\n  private _video: HTMLVideoElement | null;\n  private _sources: NodeListOf<HTMLSourceElement>;\n  private _handlers: { type: VideoLoader[\"_thresholdEventName\"], fn: (...args: any[]) => any }[];\n  private _sourceCount: number;\n  private _thresholdReadyState: ValueOf<typeof READY_STATUS>;\n  private _thresholdEventName: ValueOf<typeof READYSTATECHANGE_EVENT_NAME>;\n  private _loadStatus: number;\n  private _errorCount: number;\n\n  constructor(video?: HTMLVideoElement | VideoCandidate) {\n    this._handlers = [];\n    this._sourceCount = 0;\n\n    // on iOS safari, 'loadeddata' will not triggered unless the user hits play,\n    // so used 'loadedmetadata' instead.\n    this._thresholdReadyState = READY_STATUS.HAVE_METADATA;\n    this._thresholdEventName = READYSTATECHANGE_EVENT_NAME[this._thresholdReadyState];\n\n    this._loadStatus = (video && (video as HTMLVideoElement).readyState) || READY_STATUS.HAVE_NOTHING;\n\n    this._onerror = this._onerror.bind(this);\n\n    if (video) {\n      this.set(video);\n    }\n  }\n\n  public set(video: HTMLVideoElement | VideoCandidate | VideoCandidate[]) {\n    this._reset(); // reset resources.\n\n    if (!video) {\n      return;\n    }\n\n    if (video instanceof HTMLVideoElement) {\n      // video tag\n      this._video = video;\n    } else if (typeof video === \"string\" || typeof video === \"object\") {\n      // url\n      this._video = document.createElement(\"video\");\n      this._video.setAttribute(\"crossorigin\", \"anonymous\");\n      this._video.setAttribute(\"webkit-playsinline\", \"\");\n      this._video.setAttribute(\"playsinline\", \"\");\n\n      if (video instanceof Array) {\n        video.forEach(v => this._appendSourceElement(v));\n      } else {\n        this._appendSourceElement(video);\n      }\n\n      this._sourceCount = this._video.querySelectorAll(\"source\").length;\n\n      if (this._sourceCount > 0) {\n        if (this._video.readyState < this._thresholdReadyState) {\n          this._video.load();\n          // attach loading error listener\n          this._attachErrorHandler(this._onerror);\n        }\n      } else {\n        this._video = null;\n      }\n    }\n  }\n\n  public get() {\n    return new Promise((res, rej) => {\n      if (!this._video) {\n        rej(\"VideoLoader: video is undefined\");\n      } else if (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n        rej(\"VideoLoader: video source is invalid\");\n      } else if (this._video.readyState >= this._thresholdReadyState) {\n        res(this._video);\n      } else {\n        // check errorCnt and reject\n        const rejector = () => {\n          if (this._loadStatus === READY_STATUS.LOADING_FAILED) {\n            this._detachErrorHandler(rejector);\n            rej(\"VideoLoader: video source is invalid\");\n          }\n        };\n\n        this._attachErrorHandler(rejector);\n        this._once(this._thresholdEventName, () => res(this._video));\n      }\n    });\n  }\n\n  public getElement() {\n    return this._video;\n  }\n\n  public destroy() {\n    this._reset();\n  }\n\n  private _onerror() {\n    this._errorCount++;\n    if (this._errorCount >= this._sourceCount) {\n      this._loadStatus = READY_STATUS.LOADING_FAILED;\n      this._detachErrorHandler(this._onerror);\n    }\n  }\n\n  /**\n   *\n   * @param {Object | String} videoUrl Object or String containing Video Source URL<ko>비디오 URL 정보를 담고 있는 문자열이나 객체 {type, src}</ko>\n   */\n  private _appendSourceElement(videoUrl: string | { src: string; type: string }) {\n    let videoSrc: string | undefined;\n    let videoType: string | undefined;\n\n    if (typeof videoUrl === \"object\") {\n      videoSrc = videoUrl.src;\n      videoType = videoUrl.type;\n    } else if (typeof videoUrl === \"string\") {\n      videoSrc = videoUrl;\n    }\n\n    if (!videoSrc) {\n      return false;\n    }\n\n    const sourceElement = document.createElement(\"source\");\n\n    sourceElement.src = videoSrc;\n    if (videoType) {\n      sourceElement.type = videoType;\n    }\n\n    this._video!.appendChild(sourceElement);\n    return true;\n  }\n\n  private _attachErrorHandler(handler) {\n    this._video!.addEventListener(\"error\", handler);\n    this._sources = this._video!.querySelectorAll(\"source\");\n    [].forEach.call(this._sources, source => {\n      source.addEventListener(\"error\", handler);\n    });\n  }\n\n  private _detachErrorHandler(handler) {\n    this._video!.removeEventListener(\"error\", handler);\n    [].forEach.call(this._sources, source => {\n      source.removeEventListener(\"error\", handler);\n    });\n  }\n\n  private _reset() {\n    this._handlers.forEach(handler => {\n      this._video!.removeEventListener(handler.type, handler.fn);\n    });\n    this._handlers = [];\n    this._video = null;\n\n    this._sourceCount = 0;\n    this._errorCount = 0;\n  }\n\n  private _once<T extends VideoLoader[\"_thresholdEventName\"]>(type: T, listener: (evt: HTMLMediaElementEventMap[T]) => any) {\n    const target = this._video!;\n\n    const fn = event => {\n      target.removeEventListener(type, fn);\n      listener(event);\n    };\n\n    /* By useCapture mode enabled, you can capture the error event being fired on source(child)*/\n    target.addEventListener(type, fn, true);\n    this._handlers.push({ type, fn });\n  }\n}\n","import agent from \"@egjs/agent\";\nimport { TypedArray } from \"../types\";\n\nconst WEBGL_ERROR_CODE = {\n  \"0\": \"NO_ERROR\",\n  \"1280\": \"INVALID_ENUM\",\n  \"1281\": \"INVALID_VALUE\",\n  \"1282\": \"INVALID_OPERATION\",\n  \"1285\": \"OUT_OF_MEMORY\",\n  \"1286\": \"INVALID_FRAMEBUFFER_OPERATION\",\n  \"37442\": \"CONTEXT_LOST_WEBGL\"\n};\n\nlet webglAvailability: boolean | null = null;\nlet MAX_TEXTURE_SIZE_FOR_TEST: number | null = null;\n\nexport default class WebGLUtils {\n  public static createShader(gl: WebGLRenderingContext, type: number, source: string) {\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (success) {\n      return shader;\n    }\n\n    // eslint-disable-next-line\n    console.error(gl.getShaderInfoLog(shader));\n\n    return null;\n  }\n\n  public static createProgram(gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) {\n    const program = gl.createProgram()!;\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    gl.detachShader(program, vertexShader);\n    gl.detachShader(program, fragmentShader);\n    gl.deleteShader(vertexShader);\n    gl.deleteShader(fragmentShader);\n\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n    if (success) {\n      return program;\n    }\n\n    gl.deleteProgram(program);\n    return null;\n  }\n\n  public static initBuffer(gl: WebGLRenderingContext, target: number /* bind point */, data: TypedArray, itemSize: number, attr?: number) {\n    const buffer = gl.createBuffer()!;\n\n    gl.bindBuffer(target, buffer);\n    gl.bufferData(target, data, gl.STATIC_DRAW);\n\n    if (buffer) {\n      (buffer as any).itemSize = itemSize;\n      (buffer as any).numItems = data.length / itemSize;\n    }\n\n    if (attr !== undefined) {\n      gl.enableVertexAttribArray(attr);\n      gl.vertexAttribPointer(attr, (buffer as any).itemSize, gl.FLOAT, false, 0, 0);\n    }\n\n    return buffer;\n  }\n\n  public static getWebglContext(canvas: HTMLCanvasElement, userContextAttributes?: WebGLContextAttributes) {\n    const webglIdentifiers = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n    let context: WebGLRenderingContext | null = null;\n    const contextAttributes = {\n      ...{\n        preserveDrawingBuffer: false,\n        antialias: false,\n        xrCompatible: true,\n      }, ...userContextAttributes\n    };\n\n    function onWebglcontextcreationerror(e) {\n      return e.statusMessage;\n    }\n\n    canvas.addEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n    for (const identifier of webglIdentifiers) {\n      try {\n        context = canvas.getContext(identifier, contextAttributes) as WebGLRenderingContext;\n      } catch (t) {} // tslint:disable-line no-empty\n      if (context) {\n        break;\n      }\n    }\n\n    canvas.removeEventListener(\"webglcontextcreationerror\", onWebglcontextcreationerror);\n\n    return context;\n  }\n\n  public static createTexture(gl: WebGLRenderingContext, textureTarget: number) {\n    const texture = gl.createTexture();\n\n    gl.bindTexture(textureTarget, texture);\n    gl.texParameteri(textureTarget, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(textureTarget, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(textureTarget, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(textureTarget, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(textureTarget, null);\n\n    return texture;\n  }\n\n  /**\n   * Returns the webgl availability of the current browser.\n   * @method WebGLUtils#isWebGLAvailable\n   * @retuen {Boolean} isWebGLAvailable\n   */\n  public static isWebGLAvailable(): boolean {\n    if (webglAvailability === null) {\n      const canvas = document.createElement(\"canvas\");\n      const webglContext = WebGLUtils.getWebglContext(canvas);\n\n      webglAvailability = !!webglContext;\n\n      // webglContext Resource forced collection\n      if (webglContext) {\n        const loseContextExtension = webglContext.getExtension(\"WEBGL_lose_context\");\n\n        if (loseContextExtension) {\n          loseContextExtension.loseContext();\n        }\n      }\n    }\n    return !!webglAvailability;\n  }\n\n  /**\n   * Returns whether webgl is stable in the current browser.\n   * @method WebGLUtils#isStableWebGL\n   * @retuen {Boolean} isStableWebGL\n   */\n  public static isStableWebGL() {\n    const agentInfo = agent();\n    let isStableWebgl = true;\n\n    if (agentInfo.os.name === \"android\") {\n      const version = parseFloat(agentInfo.os.version);\n\n      if (version <= 4.3) {\n        isStableWebgl = false;\n      } else if (version === 4.4) {\n        if (agentInfo.browser.name !== \"chrome\") {\n          isStableWebgl = false;\n        }\n      }\n    }\n    return isStableWebgl;\n  }\n\n  public static getErrorNameFromWebGLErrorCode(code: number | string) {\n    if (!(code in WEBGL_ERROR_CODE)) {\n      return \"UNKNOWN_ERROR\";\n    }\n\n    return WEBGL_ERROR_CODE[code];\n  }\n\n\n  /**\n   * This function is wrapper for texImage2D to handle exceptions on texImage2D.\n   * Purpose is to prevent service from being stopped by script error.\n   */\n  public static texImage2D(gl: WebGLRenderingContext, target: number, pixels: TexImageSource) {\n    try {\n      gl.texImage2D(target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.error(\"WebGLUtils.texImage2D error:\", error);\n      /* eslint-enable no-console */\n    }\n  }\n\n  public static getMaxTextureSize(gl: WebGLRenderingContext) {\n    // WARN: MAX_TEXTURE_SIZE_FOR_TEST is used for test\n    return MAX_TEXTURE_SIZE_FOR_TEST || gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  }\n}\n\n/**\n * This function should not be used in service code. It's provided only for test purpose.\n * It should be set to null or 0 when test is done.\n *\n * @param {Number} size\n */\nfunction setMaxTextureSizeForTestOnlyPurpose(size: number) {\n  MAX_TEXTURE_SIZE_FOR_TEST = size;\n}\n\nexport {\n  setMaxTextureSizeForTestOnlyPurpose\n};\n","import Component from \"@egjs/component\";\nimport agent from \"@egjs/agent\";\nimport { mat4 } from \"gl-matrix\";\nimport { CubemapConfig, TileConfig } from \"../../types\";\n\nconst agentInfo = agent();\nconst isIE11 = agentInfo.browser.name === \"ie\" && agentInfo.browser.majorVersion === 11;\n\nconst EVENTS: {\n  ERROR: \"error\",\n} = {\n  ERROR: \"error\"\n};\n\n/**\n *\n * Extends Component for firing errors occurs internally.\n */\nabstract class Renderer extends Component<{\n  [EVENTS.ERROR]: {\n    message: string;\n  }\n}> {\n  public static EVENTS = EVENTS;\n\n  private _forceDimension: { width: number; height: number; } | null;\n  private _pixelCanvas: HTMLCanvasElement | null;\n  private _pixelContext: CanvasRenderingContext2D | null;\n\n  constructor() {\n    super();\n\n    this._forceDimension = null;\n    this._pixelCanvas = null;\n    this._pixelContext = null;\n  }\n\n  public render({ gl, shaderProgram, indexBuffer, mvMatrix, pMatrix }: {\n    gl: WebGLRenderingContext;\n    shaderProgram: WebGLProgram;\n    indexBuffer: WebGLBuffer;\n    mvMatrix: mat4;\n    pMatrix: mat4;\n  }) {\n    gl.uniformMatrix4fv((shaderProgram as any).pMatrixUniform, false, pMatrix);\n    gl.uniformMatrix4fv((shaderProgram as any).mvMatrixUniform, false, mvMatrix);\n\n    if (indexBuffer) {\n      gl.drawElements(gl.TRIANGLES, (indexBuffer as any).numItems, gl.UNSIGNED_SHORT, 0);\n    }\n  }\n\n  // Define interface for Renderers\n  /**\n   * Following MUST BE DEFINED on Child of Renderer\n   *\n   * DATA\n   *\n   *  - getVertexPositionData\n   *  - getIndexData\n   *  - getTextureCoordData\n   *\n   * SOURCE\n   *\n   *  - getVertexShaderSource\n   *  - getFragmentShaderSource\n   *\n   * TEXTURE\n   *\n   *  - bindTexture\n   */\n  public getDimension(pixelSource: HTMLImageElement | HTMLVideoElement) {\n    const width = (pixelSource as HTMLImageElement).naturalWidth\n      || (pixelSource as HTMLVideoElement).videoWidth;\n    const height = (pixelSource as HTMLImageElement).naturalHeight\n      || (pixelSource as HTMLVideoElement).videoHeight;\n\n    return { width, height };\n  }\n\n  /**\n   * Update data used by shader\n   */\n  public updateShaderData(param) {\n    /*\n    * Update following data in implementation layer.\n    * If the data is not changed, it does not need to implement this function.\n    *\n    * - _VERTEX_POSITION_DATA\n    * - _TEXTURE_COORD_DATA\n    * - _INDEX_DATA\n    */\n  }\n\n  public abstract getVertexPositionData(): number[];\n  public abstract getIndexData(): number[];\n  public abstract getTextureCoordData(imageConfig?: CubemapConfig): number[];\n  public abstract getVertexShaderSource(): string;\n  public abstract getFragmentShaderSource(): string;\n  public abstract bindTexture(gl: WebGLRenderingContext, texture: WebGLTexture, image: HTMLImageElement | HTMLVideoElement, imageConfig?: CubemapConfig): void;\n  public abstract updateTexture(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement, imageConfig?: CubemapConfig): void;\n\n  /**\n   *\n   * @param {HTMLImageElement | HTMLVideoElement} image\n   * @param {Object = {width, height}} forceDimension Forced dimension to resize\n   */\n  protected _initPixelSource(image: HTMLImageElement | HTMLVideoElement, forceDimension: Renderer[\"_forceDimension\"] = null) {\n    const isIE11Video = isIE11 && (image instanceof HTMLVideoElement);\n\n    if (isIE11Video || forceDimension) {\n      const {width, height} = forceDimension || this.getDimension(image);\n\n      this._pixelCanvas = document.createElement(\"canvas\");\n      this._pixelCanvas.width = width;\n      this._pixelCanvas.height = height;\n      this._pixelContext = this._pixelCanvas.getContext(\"2d\");\n    }\n    this._forceDimension = forceDimension;\n  }\n\n  protected _getPixelSource(image: HTMLImageElement | HTMLVideoElement) {\n    if (!this._pixelCanvas) {\n      return image;\n    }\n\n    /**\n     * IE11 && Video\n     * or\n     * Dimension is forced (Image is larger than texture size.)\n     */\n    const contentDimension = this.getDimension(image);\n    const textureDimension = this._forceDimension || contentDimension;\n\n    if (this._pixelCanvas.width !== textureDimension.width) {\n      this._pixelCanvas.width = textureDimension.width;\n    }\n\n    if (this._pixelCanvas.height !== textureDimension.height) {\n      this._pixelCanvas.height = textureDimension.height;\n    }\n\n    if (this._forceDimension) {\n      this._pixelContext!.drawImage(image,\n        0, 0, contentDimension.width, contentDimension.height,\n        0, 0, textureDimension.width, textureDimension.height);\n    } else {\n      this._pixelContext!.drawImage(image, 0, 0);\n    }\n\n    return this._pixelCanvas;\n  }\n\n  protected _extractTileConfig(imageConfig: CubemapConfig) {\n    let tileConfig: TileConfig[] =\n      Array.isArray(imageConfig.tileConfig) ?\n        imageConfig.tileConfig : Array(...Array(6)).map(() => imageConfig.tileConfig) as TileConfig[];\n\n    tileConfig = tileConfig.map(\n      config => ({\n        ...{\n          flipHorizontal: false,\n          rotation: 0\n        }, ...config\n      })\n    );\n\n    return tileConfig;\n  }\n\n  protected _triggerError(error) {\n    /* eslint-disable no-console */\n    console.error(\"Renderer Error:\", error);\n    /* eslint-enable no-console */\n\n    this.trigger(EVENTS.ERROR, {\n      message: typeof error === \"string\" ? error : error.message\n    });\n  }\n}\n\nexport default Renderer;\n","import agent from \"@egjs/agent\";\nimport Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport { util as mathUtil } from \"../../utils/math-util\";\nimport { CubemapConfig } from \"../../types\";\n\nclass CubeRenderer extends Renderer {\n  private static _VERTEX_POSITION_DATA: number[] | null = null;\n  private static _INDEX_DATA: number[] | null = null;\n\n  public static extractOrder(imageConfig: CubemapConfig) {\n    return imageConfig.order || \"RLUDBF\";\n  }\n\n  public getVertexPositionData() {\n    CubeRenderer._VERTEX_POSITION_DATA =\n      CubeRenderer._VERTEX_POSITION_DATA !== null ? CubeRenderer._VERTEX_POSITION_DATA : [\n        // back\n        1, -1, 1,\n        -1, -1, 1,\n        -1, 1, 1,\n        1, 1, 1,\n\n        // front\n        -1, -1, -1,\n        1, -1, -1,\n        1, 1, -1,\n        -1, 1, -1,\n\n        // top\n        -1, 1, -1,\n        1, 1, -1,\n        1, 1, 1,\n        -1, 1, 1,\n\n        // bottom\n        1, -1, -1,\n        -1, -1, -1,\n        -1, -1, 1,\n        1, -1, 1,\n\n        // right\n        1, -1, -1,\n        1, -1, 1,\n        1, 1, 1,\n        1, 1, -1,\n\n        // left\n        -1, -1, 1,\n        -1, -1, -1,\n        -1, 1, -1,\n        -1, 1, 1\n      ];\n\n    return CubeRenderer._VERTEX_POSITION_DATA;\n  }\n\n  public getIndexData() {\n    if (CubeRenderer._INDEX_DATA) {\n      return CubeRenderer._INDEX_DATA;\n    }\n\n    const indexData: number[] = [];\n    const vertexPositionData = this.getVertexPositionData();\n\n    for (let i = 0; i < (vertexPositionData.length / 3); i += 4) {\n      indexData.push(\n        i,\n        i + 2,\n        i + 1,\n        i,\n        i + 3,\n        i + 2\n      );\n    }\n\n    CubeRenderer._INDEX_DATA = indexData;\n    return indexData;\n  }\n\n  public getTextureCoordData(imageConfig: CubemapConfig) {\n    const vertexOrder = \"BFUDRL\";\n    const order = CubeRenderer.extractOrder(imageConfig);\n    const base = this.getVertexPositionData();\n    const tileConfig = this._extractTileConfig(imageConfig);\n    const elemSize = 3;\n    const vertexPerTile = 4;\n    const textureCoordData =\n      vertexOrder.split(\"\")\n        .map(face => tileConfig[order.indexOf(face)])\n        .map((config, i) => {\n          const rotation = Math.floor(config.rotation / 90);\n          const ordermap_ = config.flipHorizontal ? [0, 1, 2, 3] : [1, 0, 3, 2];\n\n          for (let r = 0; r < Math.abs(rotation); r++) {\n            if ((config.flipHorizontal && rotation > 0) ||\n              (!config.flipHorizontal && rotation < 0)) {\n              ordermap_.push(ordermap_.shift()!);\n            } else {\n              ordermap_.unshift(ordermap_.pop()!);\n            }\n          }\n\n          const elemPerTile = elemSize * vertexPerTile;\n          const tileVertex = base.slice(i * elemPerTile, i * elemPerTile + elemPerTile);\n          const tileTemp: number[][] = [];\n\n          for (let j = 0; j < vertexPerTile; j++) {\n            tileTemp[ordermap_[j]] = tileVertex.splice(0, elemSize);\n          }\n          return tileTemp;\n        })\n        .join()\n        .split(\",\")\n        .map(v => parseInt(v, 10));\n\n    return textureCoordData;\n  }\n\n  public getVertexShaderSource() {\n    return `\nattribute vec3 aVertexPosition;\nattribute vec3 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec3 vVertexDirectionVector;\nvoid main(void) {\n  vVertexDirectionVector = aTextureCoord;\n  gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n  }\n\n  public getFragmentShaderSource() {\n    return `\nprecision highp float;\nuniform samplerCube uSampler;\nvarying highp vec3 vVertexDirectionVector;\nvoid main(void) {\n  gl_FragColor = textureCube(uSampler, vVertexDirectionVector);\n}`;\n  }\n\n  public updateTexture(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement, imageConfig: CubemapConfig) {\n    const baseOrder = \"RLUDBF\";\n    const order = CubeRenderer.extractOrder(imageConfig);\n    const orderMap = {};\n\n    order.split(\"\").forEach((v, i) => {\n      orderMap[v] = i;\n    });\n\n    try {\n      if (image instanceof Array) {\n        for (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n          const tileIdx = orderMap[baseOrder[surfaceIdx]];\n\n          WebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, image[tileIdx]);\n        }\n      } else {\n        const maxCubeMapTextureSize = this.getMaxCubeMapTextureSize(gl, image);\n\n        for (let surfaceIdx = 0; surfaceIdx < 6; surfaceIdx++) {\n          const tileIdx = orderMap[baseOrder[surfaceIdx]];\n          const tile = this.extractTileFromImage(\n            image, tileIdx, maxCubeMapTextureSize\n          );\n\n          WebGLUtils.texImage2D(gl, gl.TEXTURE_CUBE_MAP_POSITIVE_X + surfaceIdx, tile);\n        }\n      }\n    } catch (e) {\n      this._triggerError(e);\n    }\n  }\n\n  public bindTexture(gl: WebGLRenderingContext, texture: WebGLTexture, image: HTMLImageElement | HTMLVideoElement, imageConfig: CubemapConfig) {\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n    this.updateTexture(gl, image, imageConfig);\n  }\n\n  public getSourceTileSize(image: HTMLImageElement | HTMLVideoElement) {\n    const {width, height} = this.getDimension(image);\n    const aspectRatio = width / height;\n    let inputTextureSize;\n\n    if (aspectRatio === 1 / 6) {\n      inputTextureSize = width;\n    } else if (aspectRatio === 6) {\n      inputTextureSize = height;\n    } else if (aspectRatio === 2 / 3) {\n      inputTextureSize = width / 2;\n    } else {\n      inputTextureSize = width / 3;\n    }\n    return inputTextureSize;\n  }\n\n  public extractTileFromImage(image: HTMLImageElement | HTMLVideoElement, tileIdx: number, outputTextureSize: number) {\n    const {width} = this.getDimension(image);\n    const inputTextureSize = this.getSourceTileSize(image);\n\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = outputTextureSize;\n    canvas.height = outputTextureSize;\n    const context = canvas.getContext(\"2d\");\n    const tilePerRow = width / inputTextureSize;\n\n    const x = inputTextureSize * tileIdx % (inputTextureSize * tilePerRow);\n    const y = Math.floor(tileIdx / tilePerRow) * (inputTextureSize);\n\n    context!.drawImage(\n      image, x, y,\n      inputTextureSize, inputTextureSize, 0, 0, outputTextureSize, outputTextureSize\n    );\n    return canvas;\n  }\n\n  public getMaxCubeMapTextureSize(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement) {\n    const agentInfo = agent();\n    const maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    let _imageWidth = this.getSourceTileSize(image);\n\n    if (agentInfo.browser.name === \"ie\" && agentInfo.browser.majorVersion === 11) {\n      if (!mathUtil.isPowerOfTwo(_imageWidth)) {\n        for (let i = 1; i < maxCubeMapTextureSize; i *= 2) {\n          if (i < _imageWidth) {\n            continue;\n          } else {\n            _imageWidth = i;\n            break;\n          }\n        }\n      }\n    }\n    if (agentInfo.os.name === \"ios\") {\n      const majorVersion = agentInfo.os.majorVersion;\n\n      // ios 9 의 경우 텍스쳐 최대사이즈는 1024 이다.\n      if (majorVersion === 9) {\n        _imageWidth = 1024;\n      }\n      // ios 8 의 경우 텍스쳐 최대사이즈는 512 이다.\n      if (majorVersion === 8) {\n        _imageWidth = 512;\n      }\n    }\n    // maxCubeMapTextureSize 보다는 작고, imageWidth 보다 큰 2의 승수 중 가장 작은 수\n    return Math.min(maxCubeMapTextureSize, _imageWidth);\n  }\n}\n\nexport default CubeRenderer;\n","\nimport Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport { CubemapConfig, TileConfig } from \"../../types\";\n\nexport default class CubeStripRenderer extends Renderer {\n  private _vertices: number[];\n\n  public getVertexShaderSource() {\n    return `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n  vTextureCoord = aTextureCoord;\n  gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n  }\n\n  public getFragmentShaderSource() {\n    return `\n#define PI 3.14159265359\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform bool uIsEAC;\nconst vec2 OPERATE_COORDS_RANGE = vec2(-1.0, 1.0);\nconst vec2 TEXTURE_COORDS_RANGE = vec2(0.0, 1.0);\n// vector type is used for initializing values instead of array.\nconst vec4 TEXTURE_DIVISION_X = vec4(0.0, 1.0 / 3.0, 2.0 / 3.0, 1.0);\nconst vec3 TEXTURE_DIVISION_Y = vec3(0.0, 1.0 / 2.0, 1.0);\nconst float EAC_CONST = 2.0 / PI;\nfloat scale(vec2 domainRange, vec2 targetRange, float val) {\n  float unit = 1.0 / (domainRange[1] - domainRange[0]);\n  return targetRange[0] + (targetRange[1] - targetRange[0]) * (val - domainRange[0]) * unit;\n}\nvoid main(void) {\n  float transformedCoordX;\n  float transformedCoordY;\n\n  if (uIsEAC) {\n    vec2 orgTextureRangeX;\n    vec2 orgTextureRangeY;\n\n    // Apply EAC transform\n    if (vTextureCoord.s >= TEXTURE_DIVISION_X[2]) {\n      orgTextureRangeX = vec2(TEXTURE_DIVISION_X[2], TEXTURE_DIVISION_X[3]);\n    } else if (vTextureCoord.s >= TEXTURE_DIVISION_X[1]) {\n      orgTextureRangeX = vec2(TEXTURE_DIVISION_X[1], TEXTURE_DIVISION_X[2]);\n    } else {\n      orgTextureRangeX = vec2(TEXTURE_DIVISION_X[0], TEXTURE_DIVISION_X[1]);\n    }\n\n    if (vTextureCoord.t >= TEXTURE_DIVISION_Y[1]) {\n      orgTextureRangeY = vec2(TEXTURE_DIVISION_Y[1], TEXTURE_DIVISION_Y[2]);\n    } else {\n      orgTextureRangeY = vec2(TEXTURE_DIVISION_Y[0], TEXTURE_DIVISION_Y[1]);\n    }\n\n    // scaling coors by the coordinates following the range from -1.0 to 1.0.\n    float px = scale(orgTextureRangeX, OPERATE_COORDS_RANGE, vTextureCoord.s);\n    float py = scale(orgTextureRangeY, OPERATE_COORDS_RANGE, vTextureCoord.t);\n\n    float qu = EAC_CONST * atan(px) + 0.5;\n    float qv = EAC_CONST * atan(py) + 0.5;\n\n    // re-scaling coors by original coordinates ranges\n    transformedCoordX = scale(TEXTURE_COORDS_RANGE, orgTextureRangeX, qu);\n    transformedCoordY = scale(TEXTURE_COORDS_RANGE, orgTextureRangeY, qv);\n  } else {\n    // normal cubemap\n    transformedCoordX = vTextureCoord.s;\n    transformedCoordY = vTextureCoord.t;\n  }\n\n  gl_FragColor = texture2D(uSampler, vec2(transformedCoordX, transformedCoordY));\n}`;\n  }\n\n  public getVertexPositionData() {\n    if (!this._vertices) {\n      this._vertices = [\n        // back\n        1, -1, 1,\n        -1, -1, 1,\n        -1, 1, 1,\n        1, 1, 1,\n\n        // front\n        -1, -1, -1,\n        1, -1, -1,\n        1, 1, -1,\n        -1, 1, -1,\n\n        // up\n        -1, 1, -1,\n        1, 1, -1,\n        1, 1, 1,\n        -1, 1, 1,\n\n        // down\n        -1, -1, 1,\n        1, -1, 1,\n        1, -1, -1,\n        -1, -1, -1,\n\n        // right\n        1, -1, -1,\n        1, -1, 1,\n        1, 1, 1,\n        1, 1, -1,\n\n        // left\n        -1, -1, 1,\n        -1, -1, -1,\n        -1, 1, -1,\n        -1, 1, 1\n      ];\n    }\n\n    return this._vertices;\n  }\n\n  public getIndexData() {\n    // TODO: 한번만 계산하도록 수정하기\n    const indices = (() => {\n      const indexData: number[] = [];\n\n      for (let i = 0; i < (this._vertices.length / 3); i += 4) {\n        indexData.push(\n          i,\n          i + 1,\n          i + 2,\n          i,\n          i + 2,\n          i + 3\n        );\n      }\n      return indexData;\n    })();\n\n    return indices;\n  }\n\n  public getTextureCoordData(imageConfig: CubemapConfig) {\n    // TODO: make it cols, rows as config.\n    const cols = 3;\n    const rows = 2;\n    const order = imageConfig.order || \"RLUDFB\";\n    let coords: number[][] = [];\n\n    // 텍스쳐의 좌표는 윗쪽이 큰 값을 가지므로 row 는 역순으로 넣는다.\n    for (let r = rows - 1; r >= 0; r--) {\n      for (let c = 0; c < cols; c++) {\n        const coord = [\n          c / cols, r / rows,\n          (c + 1) / cols, r / rows,\n          (c + 1) / cols, (r + 1) / rows,\n          c / cols, (r + 1) / rows\n        ];\n\n        coords.push(coord);\n      }\n    }\n\n    const tileConfigs = this._extractTileConfig(imageConfig);\n\n    // Transform Coord By Flip & Rotation\n    coords = coords\n    // shrink coord to avoid pixel bleeding\n      .map(coord => this._shrinkCoord(coord))\n      .map((coord, i) => this._transformCoord(coord, tileConfigs[i]));\n\n    // vertices 에서 지정된 순서대로 그대로 그리기 위해 vertex 의 순서를 BFUDRL 로 재배치\n    return \"BFUDRL\".split(\"\")\n      .map(face => order.indexOf(face))\n      .map(index => coords[index])\n      .reduce((acc, val) => acc.concat(val), []);\n  }\n\n  public updateTexture(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement) {\n    WebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n  }\n\n  public bindTexture(gl: WebGLRenderingContext, texture: WebGLTexture, image: HTMLImageElement | HTMLVideoElement) {\n    // Make sure image isn't too big\n    const {width, height} = this.getDimension(image);\n    const size = Math.max(width, height);\n    const maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n    if (size > maxSize) {\n      this._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n      return;\n    }\n\n    // Pixel Source for IE11 & Video\n    this._initPixelSource(image);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    this.updateTexture(gl, image);\n  }\n\n  private _transformCoord(coord: number[], tileConfig: TileConfig) {\n    let newCoord = coord.slice();\n\n    if (tileConfig.flipHorizontal) {\n      newCoord = this._flipHorizontalCoord(newCoord);\n    }\n\n    if (tileConfig.rotation) {\n      newCoord = this._rotateCoord(newCoord, tileConfig.rotation);\n    }\n\n    return newCoord;\n  }\n\n  private _shrinkCoord(coord: number[]) {\n    const SHRINK_Y = 0.00;\n    const SHRINK_X = 0.00;\n\n    return [\n      coord[0] + SHRINK_X, coord[1] + SHRINK_Y,\n      coord[2] - SHRINK_X, coord[3] + SHRINK_Y,\n      coord[4] - SHRINK_X, coord[5] - SHRINK_Y,\n      coord[6] + SHRINK_X, coord[7] - SHRINK_Y\n    ];\n  }\n\n  private _rotateCoord(coord: number[], rotationAngle: number) {\n    const SIZE = 2; // coord means x,y coordinates. Two values(x, y) makes a one coord.\n    const shiftCount = Math.floor(rotationAngle / 90) % 4;\n\n    if (shiftCount === 0) {\n      return coord;\n    }\n\n    let moved;\n    let rotatedCoord: number[] = [];\n\n    if (shiftCount > 0) {\n      moved = coord.splice(0, shiftCount * SIZE);\n      rotatedCoord = coord.concat(moved);\n    } else {\n      moved = coord.splice((4 + shiftCount) * SIZE, -shiftCount * SIZE);\n      rotatedCoord = moved.concat(coord);\n    }\n\n    return rotatedCoord;\n  }\n\n  private _flipHorizontalCoord(coord: number[]) {\n    return [\n      coord[2], coord[3],\n      coord[0], coord[1],\n      coord[6], coord[7],\n      coord[4], coord[5]\n    ];\n  }\n}\n","/**\n * Constant value for gyro mode. <br>(Reference {@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide})\n * @ko gyro 모드 대한 상수 값. <br>({@link https://github.com/naver/egjs-view360/wiki/PanoViewer-3.0-User-Guide} 참고)\n * @namespace\n * @name GYRO_MODE\n * @memberof eg.view360.PanoViewer\n */\n/**\n * Disable gyro\n * @ko gyro 비활성화\n * @name NONE\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"none\"\n */\n/**\n * YawPitch Mode\n * @ko YawPitch Mode\n * @name YAWPITCH\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"yawPitch\"\n */\n/**\n * VR Mode\n * @ko VR Mode\n * @name VR\n * @memberof eg.view360.PanoViewer.GYRO_MODE\n * @constant\n * @type {String}\n * @default \"VR\"\n */\nimport { GYRO_MODE } from \"../YawPitchControl/consts\";\n\n/**\n * Constant value for errors\n * @ko 에러에 대한 상수 값\n * @namespace\n * @name ERROR_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst ERROR_TYPE = {\n  /**\n   * Unsupported device\n   * @ko 미지원 기기\n   * @name INVALID_DEVICE\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 10\n   */\n  INVALID_DEVICE: 10,\n  /**\n   * Webgl not support\n   * @ko WEBGL 미지원\n   * @name NO_WEBGL\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 11\n   */\n  NO_WEBGL: 11,\n  /**\n   * Failed to load image\n   * @ko 이미지 로드 실패\n   * @name FAIL_IMAGE_LOAD\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 12\n   */\n  FAIL_IMAGE_LOAD: 12,\n  /**\n   * Failed to bind texture\n   * @ko 텍스쳐 바인딩 실패\n   * @name FAIL_BIND_TEXTURE\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 13\n   */\n  FAIL_BIND_TEXTURE: 13,\n  /**\n   * Only one resource(image or video) should be specified\n   * @ko 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n   * @name INVALID_RESOURCE\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 14\n   */\n  INVALID_RESOURCE: 14,\n  /**\n   * WebGL context lost occurred\n   * @ko WebGL context lost 발생\n   * @name RENDERING_CONTEXT_LOST\n   * @memberof eg.view360.PanoViewer.ERROR_TYPE\n   * @constant\n   * @type {Number}\n   * @default 15\n   */\n  RENDERING_CONTEXT_LOST: 15,\n};\n\n/**\n * Constant value for events\n * @ko 이벤트에 대한 상수 값\n * @namespace\n * @name EVENTS\n * @memberof eg.view360.PanoViewer\n */\nconst EVENTS: {\n  READY: \"ready\";\n  VIEW_CHANGE: \"viewChange\";\n  ANIMATION_END: \"animationEnd\";\n  ERROR: \"error\";\n} = {\n  /**\n   * Events that is fired when PanoViewer is ready to show image and handle user interaction.\n   * @ko PanoViewer 가 사용자의 인터렉션 및 렌더링이 준비되상태에 발생하는 이벤트\n   * @name READY\n   * @memberof eg.view360.PanoViewer.EVENTS\n   * @constant\n   * @type {String}\n   * @default ready\n   */\n  READY: \"ready\",\n  /**\n   * Events that is fired when direction or fov is changed.\n   * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n   * @name VIEW_CHANGE\n   * @memberof eg.view360.PanoViewer.EVENTS\n   * @constant\n   * @type {String}\n   * @default viewChange\n   */\n  VIEW_CHANGE: \"viewChange\",\n  /**\n   * Events that is fired when animation which is triggered by inertia is ended.\n   * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n   * @name ANIMATION_END\n   * @memberof eg.view360.PanoViewer.EVENTS\n   * @constant\n   * @type {String}\n   * @default animationEnd\n   */\n  ANIMATION_END: \"animationEnd\",\n  /**\n   * Events that is fired when error occurs\n   * @ko 에러 발생 시 발생하는 이벤트\n   * @name ERROR\n   * @memberof eg.view360.PanoViewer.EVENTS\n   * @constant\n   * @type {String}\n   * @default error\n   */\n  ERROR: \"error\"\n};\n\n/**\n * Constant value for projection type\n * @ko 프로젝션 타입 대한 상수 값\n * @namespace\n * @name PROJECTION_TYPE\n * @memberof eg.view360.PanoViewer\n */\nconst PROJECTION_TYPE: {\n  EQUIRECTANGULAR: \"equirectangular\";\n  CUBEMAP: \"cubemap\";\n  CUBESTRIP: \"cubestrip\";\n  PANORAMA: \"panorama\";\n  STEREOSCOPIC_EQUI: \"stereoequi\";\n} = {\n  /**\n   * Constant value for equirectangular type.\n   * @ko equirectangular 에 대한 상수 값.\n   * @name EQUIRECTANGULAR\n   * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n   * @constant\n   * @type {String}\n   * @default equirectangular\n   */\n  EQUIRECTANGULAR: \"equirectangular\",\n  /**\n   * Constant value for cubemap type.\n   * @ko cubemap 에 대한 상수 값.\n   * @name CUBEMAP\n   * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n   * @constant\n   * @type {String}\n   * @default cubemap\n   */\n  CUBEMAP: \"cubemap\",\n  /**\n   * Constant value for cubestrip type.\n   * Cubestrip is a format for a single image with a combination of six cube faces. It is almost identical to cubemap, but it is implemented in a different way. It aims at better performance and efficiency. In addition, it automatically detects and supports EAC.\n   *\n   * @ko cubemap 에 대한 상수 값.Cubestrip 은 cube 면이 6개가 조합된 조합을 한장의 이미지를 위한 포맷이다. cubemap 과 사용방법이 거의 동일하지만 다른 방식으로 구현되었다. 보다 좋은 성능과 효율성을 목적으로 한다. 더불어 자동으로 EAC 를 감지하고 지원한다.\n   * @name CUBESTRIP\n   * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n   * @constant\n   * @type {String}\n   * @default cubestrip\n   */\n  CUBESTRIP: \"cubestrip\",\n  /**\n   * Constant value for PANORAMA type.\n   *\n   * PANORAMA is a format for a panorma image which is taken from smartphone.\n   *\n   * @ko PANORAMA 에 대한 상수값. 파노라마는 스마트 폰에서 가져온 파노라마 이미지의 형식입니다.\n   *\n   * @name PANORAMA\n   * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n   * @constant\n   * @type {String}\n   * @default panorama\n   */\n  PANORAMA: \"panorama\",\n  /**\n   * Constant value for EQUI_STEREOSCOPY type.\n   *\n   * Constant value for EQUI_STEREOSCOPY. Stereoscopy image format of EQUIRECTANGULAR. It is an experimental function to show a stereoscopic type equirectangular image on a plane. It does not support stereoscopic viewing function through special visual equipment at present.\n   *\n   * @ko EQUI_STEREOSCOPY 에 대한 상수값. EQUIRECTANGULAR 의 Stereoscopy 이미지 형식입니다. Stereoscopic 형태의 equirectangular 이미지를 평면에 보여주기 위한 실험적인 기능으로 현재는 특수한 시각 장비를 통한 입체적인 보기 기능은 지원하지 않습니다.\n   *\n   * @name STEREOSCOPIC_EQUI\n   * @memberof eg.view360.PanoViewer.PROJECTION_TYPE\n   * @constant\n   * @type {String}\n   * @default stereoequi\n   */\n  STEREOSCOPIC_EQUI: \"stereoequi\",\n};\n\n/**\n * A constant value for the format of the stereoscopic equirectangular projection type.\n * @ko Stereoscopic equirectangular 프로젝션 타입의 포맷에 대한 상수 값\n * @namespace\n * @name STEREO_FORMAT\n * @memberof eg.view360.PanoViewer\n */\nconst STEREO_FORMAT: {\n  TOP_BOTTOM: \"3dv\";\n  LEFT_RIGHT: \"3dh\";\n  NONE: \"\";\n} = {\n  /**\n   * A constant value for format of top bottom stereoscopic 360 equirectangular projection.\n   * @ko top bottom stereoscopic 360 equirectangular projection 콘텐츠 포맷에 대한 상수값.\n   * @name TOP_BOTTOM\n   * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n   * @constant\n   * @type {String}\n   * @default \"3dv\"\n   */\n  TOP_BOTTOM: \"3dv\",\n  /**\n   * A constant value for format of left right stereoscopic 360 equirectangular projection.\n   * @ko Left right stereoscopic 360 equirectangular projection 콘텐츠 포맷에 대한 상수값.\n   * @name LEFT_RIGHT\n   * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n   * @constant\n   * @type {String}\n   * @default \"3dh\"\n   */\n  LEFT_RIGHT: \"3dh\",\n  /**\n   * A constant value specifying media is not in stereoscopic format.\n   * @ko Stereoscopic 영상이 아닐 경우에 적용하는 상수값.\n   * @name NONE\n   * @memberof eg.view360.PanoViewer.STEREO_FORMAT\n   * @constant\n   * @type {String}\n   * @default \"\"\n   */\n  NONE: \"\",\n};\n\nexport {\n  GYRO_MODE,\n  EVENTS,\n  ERROR_TYPE,\n  PROJECTION_TYPE,\n  STEREO_FORMAT\n};\n","import Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\nimport { STEREO_FORMAT } from \"../../PanoViewer/consts\";\nimport { ValueOf } from \"../../types\";\n\nconst latitudeBands = 60;\nconst longitudeBands = 60;\nconst radius = 2;\nconst ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n\nconst textureCoordData: number[] = [];\nconst vertexPositionData: number[] = [];\nconst indexData: number[] = [];\nlet latIdx: number;\nlet lngIdx: number;\n\nfor (latIdx = 0; latIdx <= latitudeBands; latIdx++) {\n  const theta = (latIdx / latitudeBands - 0.5) * Math.PI;\n  const sinTheta = Math.sin(theta);\n  const cosTheta = Math.cos(theta);\n\n  for (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n    const phi = (lngIdx / longitudeBands - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n    const sinPhi = Math.sin(phi);\n    const cosPhi = Math.cos(phi);\n    const x = cosPhi * cosTheta;\n    const y = sinTheta;\n    const z = sinPhi * cosTheta;\n    const u = lngIdx / longitudeBands;\n    const v = latIdx / latitudeBands;\n\n    textureCoordData.push(u, v);\n    vertexPositionData.push(radius * x, radius * y, radius * z);\n\n    if (lngIdx !== longitudeBands && latIdx !== latitudeBands) {\n      const a = latIdx * (longitudeBands + 1) + lngIdx;\n      const b = a + longitudeBands + 1;\n\n      indexData.push(a, b, a + 1, b, b + 1, a + 1);\n    }\n  }\n}\n\nclass SphereRenderer extends Renderer {\n  private static _VERTEX_POSITION_DATA = vertexPositionData;\n  private static _TEXTURE_COORD_DATA = textureCoordData;\n  private static _INDEX_DATA = indexData;\n\n  private _stereoFormat: ValueOf<typeof STEREO_FORMAT>;\n\n  constructor(format: SphereRenderer[\"_stereoFormat\"]) {\n    super();\n\n    this._stereoFormat = format;\n  }\n\n  public render(ctx: Parameters<Renderer[\"render\"]>[0]) {\n    const {gl, shaderProgram} = ctx;\n\n    let leftEyeScaleOffset: number[];\n    let rightEyeScaleOffset: number[];\n\n    switch (this._stereoFormat) {\n      case STEREO_FORMAT.TOP_BOTTOM:\n        leftEyeScaleOffset = [1, 0.5, 0, 0];\n        rightEyeScaleOffset = [1, 0.5, 0, 0.5];\n        break;\n      case STEREO_FORMAT.LEFT_RIGHT:\n        leftEyeScaleOffset = [0.5, 1, 0, 0];\n        rightEyeScaleOffset = [0.5, 1, 0.5, 0];\n        break;\n      default:\n        leftEyeScaleOffset = [1, 1, 0, 0];\n        rightEyeScaleOffset = [1, 1, 0, 0];\n    }\n\n    const uTexScaleOffset = gl.getUniformLocation(shaderProgram, \"uTexScaleOffset\");\n\n    gl.uniform4fv(uTexScaleOffset, [...leftEyeScaleOffset, ...rightEyeScaleOffset]);\n\n    super.render(ctx);\n  }\n\n  public getVertexPositionData() {\n    return SphereRenderer._VERTEX_POSITION_DATA;\n  }\n\n  public getIndexData() {\n    return SphereRenderer._INDEX_DATA;\n  }\n\n  public getTextureCoordData() {\n    return SphereRenderer._TEXTURE_COORD_DATA;\n  }\n\n  public getVertexShaderSource() {\n    return `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nuniform float uEye;\nuniform vec4 uTexScaleOffset[2];\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n  vec4 scaleOffset = uTexScaleOffset[int(uEye)];\n  vTextureCoord = aTextureCoord.xy * scaleOffset.xy + scaleOffset.zw;\n  gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n  }\n\n  public getFragmentShaderSource() {\n    return `\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nvoid main(void) {\n  gl_FragColor = texture2D(uSampler, vTextureCoord.st);\n}`;\n  }\n\n  public updateTexture(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement) {\n    WebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n  }\n\n  public bindTexture(gl: WebGLRenderingContext, texture: WebGLTexture, image: HTMLImageElement | HTMLVideoElement) {\n    // Make sure image isn't too big\n    const { width, height } = this.getDimension(image);\n    const size = Math.max(width, height);\n    const maxSize = WebGLUtils.getMaxTextureSize(gl);\n\n    if (size > maxSize) {\n      this._triggerError(`Image width(${width}) exceeds device limit(${maxSize}))`);\n      return;\n    }\n\n    // Pixel Source for IE11 & Video\n    this._initPixelSource(image);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    this.updateTexture(gl, image);\n  }\n}\n\nexport default SphereRenderer;\n","import { glMatrix } from \"gl-matrix\";\nimport Renderer from \"./Renderer\";\nimport WebGLUtils from \"../WebGLUtils\";\n\n// const latitudeBands = 60;\nconst MIN_ASPECT_RATIO_FOR_FULL_PANORAMA = 6;\nconst longitudeBands = 60;\n\nconst textureCoordData: number[] = [];\nconst vertexPositionData: number[] = [];\nconst indexData: number[] = [];\n\nclass CylinderRenderer extends Renderer {\n  private static _VERTEX_POSITION_DATA = vertexPositionData;\n  private static _TEXTURE_COORD_DATA = textureCoordData;\n  private static _INDEX_DATA = indexData;\n\n  public getVertexPositionData() {\n    return CylinderRenderer._VERTEX_POSITION_DATA;\n  }\n\n  public getIndexData() {\n    return CylinderRenderer._INDEX_DATA;\n  }\n\n  public getTextureCoordData() {\n    return CylinderRenderer._TEXTURE_COORD_DATA;\n  }\n\n  public getVertexShaderSource() {\n    return `\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying highp vec2 vTextureCoord;\nvoid main(void) {\n  vTextureCoord = aTextureCoord;\n  gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n}`;\n  }\n\n  public getFragmentShaderSource() {\n    return `\nprecision highp float;\nvarying highp vec2 vTextureCoord;\nuniform sampler2D uSampler;\nvoid main(void) {\n  gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n}`;\n  }\n\n  public updateTexture(gl: WebGLRenderingContext, image: HTMLImageElement | HTMLVideoElement) {\n    WebGLUtils.texImage2D(gl, gl.TEXTURE_2D, this._getPixelSource(image));\n  }\n\n  public bindTexture(gl: WebGLRenderingContext, texture: WebGLTexture, image: HTMLImageElement | HTMLVideoElement) {\n    // Make sure image isn't too big\n    const {width, height} = this.getDimension(image);\n    const size = Math.max(width, height);\n    const maxSize = WebGLUtils.getMaxTextureSize(gl);\n    let resizeDimension: { width: number, height: number } | undefined;\n\n    if (size > maxSize) {\n      this._triggerError(`Image width(${width}) exceeds device texture limit(${maxSize}))`);\n\n      // Request resizing texture.\n      /**\n       * TODO: Is it need to apply on another projection type?\n       */\n      resizeDimension = width > height ?\n        {width: maxSize, height: maxSize * height / width} :\n        {width: maxSize * width / height, height: maxSize};\n    }\n\n    // Pixel Source for IE11 & Video or resizing needed\n    this._initPixelSource(image, resizeDimension);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    this.updateTexture(gl, image);\n  }\n\n  public updateShaderData({ imageAspectRatio = MIN_ASPECT_RATIO_FOR_FULL_PANORAMA }) {\n    let lngIdx: number;\n    let cylinderMaxRadian: number;\n    let halfCylinderY: number;\n    let rotated: boolean;\n    let aspectRatio: number;\n\n    // Exception case: orientation is rotated.\n    if (imageAspectRatio < 1) {\n      /**\n       * If rotated is true, we assume that image is rotated counter clockwise.\n       * TODO: If there's other rotation, it is need to implement by each rotation.\n       */\n      rotated = true;\n      aspectRatio = 1 / imageAspectRatio;\n    } else {\n      rotated = false;\n      aspectRatio = imageAspectRatio;\n    }\n\n    if (aspectRatio >= MIN_ASPECT_RATIO_FOR_FULL_PANORAMA) {\n      const fov = 360 / aspectRatio;\n\n      cylinderMaxRadian = 2 * Math.PI; // 360 deg\n      halfCylinderY = Math.tan(glMatrix.toRadian(fov / 2));\n    } else {\n      cylinderMaxRadian = aspectRatio;\n      halfCylinderY = 0.5; // Range of cylinder is [-0.5, 0.5] to make height to 1.\n    }\n\n    // intialize shader data before update\n    textureCoordData.length = 0;\n    vertexPositionData.length = 0;\n    indexData.length = 0;\n\n    const CYLIDER_Y = [-halfCylinderY, halfCylinderY];\n    const startAngleForCenterAlign = Math.PI / 2 + (2 * Math.PI - cylinderMaxRadian) / 2; // Math.PI / 2 start point when cylinderMaxRadian is 2 phi(360)\n\n    // console.log(\"cylinderMaxRadian:\", glMatrix.toDegree(cylinderMaxRadian), \"CYLIDER_Y\", CYLIDER_Y, \"start angle\", glMatrix.toDegree(startAngleForCenterAlign));\n    for (let yIdx = 0, yLength = CYLIDER_Y.length; yIdx < yLength/* bottom & top */; yIdx++) {\n      for (lngIdx = 0; lngIdx <= longitudeBands; lngIdx++) {\n        const angle = startAngleForCenterAlign + (lngIdx / longitudeBands * cylinderMaxRadian);\n        const x = Math.cos(angle);\n        const y = CYLIDER_Y[yIdx];\n        const z = Math.sin(angle);\n        let u: number;\n        let v: number;\n\n        if (rotated) {\n          // Rotated 90 degree (counter clock wise)\n          u = 1 - yIdx; // yLength - yIdx;\n          v = lngIdx / longitudeBands;\n        } else {\n        // \t// Normal case (Not rotated)\n          u = lngIdx / longitudeBands;\n          v = yIdx;\n        }\n\n        textureCoordData.push(u, v);\n        vertexPositionData.push(x, y, z);\n\n        if (yIdx === 0 && lngIdx < longitudeBands) {\n          const a = lngIdx;\n          const b = a + longitudeBands + 1;\n\n          indexData.push(a, b, a + 1, b, b + 1, a + 1);\n        }\n      }\n    }\n  }\n}\n\nexport default CylinderRenderer;\n","import Promise from \"promise-polyfill\";\nimport { mat4 } from \"gl-matrix\";\n\nconst VR_DISPLAY_PRESENT_CHANGE = \"vrdisplaypresentchange\";\nconst DEFAULT_LEFT_BOUNDS = [0, 0, 0.5, 1];\nconst DEFAULT_RIGHT_BOUNDS = [0.5, 0, 0.5, 1];\nconst EYES = {\n  LEFT: \"left\",\n  RIGHT: \"right\"\n};\n\nclass VRManager {\n  private _vrDisplay: VRDisplay | null;\n  private _frameData: VRFrameData;\n  private _yawOffset: number;\n  private _leftBounds: number[];\n  private _rightBounds: number[];\n\n  constructor() {\n    this._frameData = new window.VRFrameData();\n    this._clear();\n  }\n\n  public get context() { return this._vrDisplay; }\n\n  public destroy = () => {\n    const vrDisplay = this._vrDisplay;\n\n    this.removeEndCallback(this.destroy);\n\n    if (vrDisplay && vrDisplay.isPresenting) {\n      vrDisplay.exitPresent();\n    }\n\n    this._clear();\n  }\n\n  public canRender() {\n    return Boolean(this._vrDisplay);\n  }\n\n  public beforeRender(gl: WebGLRenderingContext) {\n    // Render to the default backbuffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  public afterRender() {\n    this._vrDisplay!.submitFrame();\n  }\n\n  public getEyeParams(gl: WebGLRenderingContext) {\n    const display = this._vrDisplay!;\n    const halfWidth = gl.drawingBufferWidth * 0.5;\n    const height = gl.drawingBufferHeight;\n    const frameData = this._frameData;\n\n    display.getFrameData(frameData);\n\n    const leftMVMatrix = frameData.leftViewMatrix;\n    const rightMVMatrix = frameData.rightViewMatrix;\n\n    mat4.rotateY(leftMVMatrix, leftMVMatrix, this._yawOffset);\n    mat4.rotateY(rightMVMatrix, rightMVMatrix, this._yawOffset);\n\n    return [\n      {\n        viewport: [0, 0, halfWidth, height],\n        mvMatrix: leftMVMatrix,\n        pMatrix: frameData.leftProjectionMatrix,\n      },\n      {\n        viewport: [halfWidth, 0, halfWidth, height],\n        mvMatrix: rightMVMatrix,\n        pMatrix: frameData.rightProjectionMatrix,\n      }\n    ];\n  }\n\n  public isPresenting() {\n    return Boolean(this._vrDisplay && this._vrDisplay.isPresenting);\n  }\n\n  public addEndCallback(callback: (evt?: Event) => any) {\n    window.addEventListener(VR_DISPLAY_PRESENT_CHANGE, callback);\n  }\n\n  public removeEndCallback(callback: (evt?: Event) => any) {\n    window.removeEventListener(VR_DISPLAY_PRESENT_CHANGE, callback);\n  }\n\n  public requestPresent(canvas: HTMLCanvasElement) {\n    return navigator.getVRDisplays().then(displays => {\n      const vrDisplay = displays.length && displays[0];\n\n      if (!vrDisplay) {\n        return Promise.reject(new Error(\"No displays available.\"));\n      }\n      if (!vrDisplay.capabilities.canPresent) {\n        return Promise.reject(new Error(\"Display lacking capability to present.\"));\n      }\n\n      return vrDisplay.requestPresent([{source: canvas}]).then(() => {\n        const leftEye = vrDisplay.getEyeParameters(EYES.LEFT);\n        const rightEye = vrDisplay.getEyeParameters(EYES.RIGHT);\n\n        canvas.width = Math.max(leftEye.renderWidth, rightEye.renderWidth) * 2;\n        canvas.height = Math.max(leftEye.renderHeight, rightEye.renderHeight);\n\n        this._setDisplay(vrDisplay);\n      });\n    });\n  }\n\n  public setYawOffset(offset: number) {\n    this._yawOffset = offset;\n  }\n\n  private _setDisplay(vrDisplay: VRDisplay) {\n    this._vrDisplay = vrDisplay;\n\n    const layers = vrDisplay.getLayers();\n\n    if (layers.length) {\n      const layer = layers[0];\n\n      this._leftBounds = layer.leftBounds as number[];\n      this._rightBounds = layer.rightBounds as number[];\n    }\n\n    this.addEndCallback(this.destroy);\n  }\n\n  private _clear() {\n    this._vrDisplay = null;\n    this._leftBounds = DEFAULT_LEFT_BOUNDS;\n    this._rightBounds = DEFAULT_RIGHT_BOUNDS;\n    this._yawOffset = 0;\n  }\n}\n\nexport default VRManager;\n","export function merge(target, ...srcs) {\n\tsrcs.forEach(source => {\n\t  Object.keys(source).forEach(key => {\n\t\tconst value = source[key];\n\t\tif (Array.isArray(target[key]) && Array.isArray(value)) {\n\t\t\ttarget[key] = [...target[key], ...value];\n\t\t} else {\n\t\t\ttarget[key] = value;\n\t\t}\n\t  });\n\t});\n\n\treturn target;\n}\n","import { mat4, glMatrix } from \"gl-matrix\";\nimport { XRFrame, XRLayer, XRReferenceSpace, XRSession, XRSessionInit } from \"webxr\";\nimport { IS_SAFARI_ON_DESKTOP } from \"../../utils/browser\";\nimport { merge } from \"../../utils/utils\";\n\nconst XR_REFERENCE_SPACE = \"local\";\n\ninterface XRSessionOptions extends XRSessionInit {\n  [key: string]: any;\n}\n\nclass XRManager {\n  private _xrSession: XRSession | null;\n  private _xrLayer: XRLayer | null;\n  private _xrRefSpace: XRReferenceSpace | null;\n  private _options: XRSessionOptions;\n  private _yawOffset: number;\n  private _presenting: boolean;\n\n  constructor(options: XRSessionOptions = {}) {\n    this._clear();\n    this._options = options;\n  }\n\n  public get context() { return this._xrSession; }\n\n  public destroy = () => {\n    const xrSession = this._xrSession;\n\n    this.removeEndCallback(this.destroy);\n\n    if (xrSession) {\n      // Capture to avoid errors\n      // tslint:disable-next-line no-empty\n      xrSession.end().then(() => {}, () => {});\n    }\n    this._clear();\n  }\n\n  public canRender(frame: XRFrame) {\n    const pose = frame.getViewerPose(this._xrRefSpace!);\n\n    return Boolean(pose);\n  }\n\n  public beforeRender(gl: WebGLRenderingContext, frame: XRFrame) {\n    const session = frame.session;\n    const baseLayer = session.renderState.baseLayer;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, baseLayer!.framebuffer);\n  }\n\n  // tslint:disable-next-line no-empty\n  public afterRender() {}\n\n  public getEyeParams(gl: WebGLRenderingContext, frame: XRFrame) {\n    const session = frame.session;\n    const pose = frame.getViewerPose(this._xrRefSpace!);\n\n    if (!pose) {\n      // Can't render\n      return null;\n    }\n\n    const glLayer = session.renderState.baseLayer;\n\n    return pose.views.map(view => {\n      const viewport = glLayer!.getViewport(view);\n      const mvMatrix = view.transform.inverse.matrix;\n\n      if (IS_SAFARI_ON_DESKTOP) {\n        mat4.rotateX(mvMatrix, mvMatrix, glMatrix.toRadian(180));\n      }\n\n      mat4.rotateY(mvMatrix, mvMatrix, this._yawOffset);\n\n      return {\n        viewport: [viewport.x, viewport.y, viewport.width, viewport.height],\n        mvMatrix,\n        pMatrix: view.projectionMatrix\n      };\n    });\n  }\n\n  public isPresenting() {\n    return this._presenting;\n  }\n\n  public addEndCallback(callback: (evt?: Event) => any) {\n    this._xrSession?.addEventListener(\"end\", callback);\n  }\n\n  public removeEndCallback(callback: (evt?: Event) => any) {\n    this._xrSession?.removeEventListener(\"end\", callback);\n  }\n\n  public requestPresent(canvas: HTMLCanvasElement, gl: WebGLRenderingContext) {\n    const options = merge({\n      requiredFeatures: [XR_REFERENCE_SPACE],\n    }, this._options);\n\n    return (navigator as any).xr.requestSession(\"immersive-vr\", options).then(session => {\n      const xrLayer = new (window as any).XRWebGLLayer(session, gl);\n\n      session.updateRenderState({baseLayer: xrLayer});\n      return session.requestReferenceSpace(XR_REFERENCE_SPACE)\n        .then(refSpace => {\n          this._setSession(session, xrLayer, refSpace);\n        });\n    });\n  }\n\n  public setYawOffset(offset: number) {\n    this._yawOffset = offset;\n  }\n\n  private _setSession(session: XRSession, xrLayer: XRLayer, refSpace: XRReferenceSpace) {\n    this._xrSession = session;\n    this._xrLayer = xrLayer;\n    this._xrRefSpace = refSpace;\n    this._presenting = true;\n    this.addEndCallback(this.destroy);\n  }\n\n  private _clear() {\n    this._xrSession = null;\n    this._xrLayer = null;\n    this._xrRefSpace = null;\n    this._presenting = false;\n    this._yawOffset = 0;\n    this._options = {};\n  }\n}\n\nexport default XRManager;\n","import { IS_SAFARI_ON_DESKTOP } from \"../utils/browser\";\n\nclass WebGLAnimator {\n  private _callback: ((...args: any[]) => any) | null;\n  private _context: any;\n  private _rafId: number;\n  private _rafTimer: number;\n\n  constructor() {\n    this._callback = null;\n    this._context = window;\n    this._rafId = -1;\n    this._rafTimer = -1;\n  }\n\n  public setCallback(callback: (...args: any[]) => any) {\n    this._callback = callback;\n  }\n\n  public setContext(context: any) {\n    this._context = context;\n  }\n\n  public start() {\n    const context = this._context;\n    const callback = this._callback;\n\n    // No context / callback set\n    if (!context || !callback) return;\n    // Animation already started\n    if (this._rafId >= 0 || this._rafTimer >= 0) return;\n\n    if (IS_SAFARI_ON_DESKTOP) {\n      this._rafId = context.requestAnimationFrame(this._onLoopNextTick);\n    } else {\n      this._rafId = context.requestAnimationFrame(this._onLoop);\n    }\n  }\n\n  public stop() {\n    if (this._rafId >= 0) {\n      this._context.cancelAnimationFrame(this._rafId);\n    }\n\n    if (this._rafTimer >= 0) {\n      clearTimeout(this._rafTimer);\n    }\n\n    this._rafId = -1;\n    this._rafTimer = -1;\n  }\n\n  /**\n   * There can be more than 1 argument when we use XRSession's raf\n   */\n  private _onLoop = (...args: any[]) => {\n    this._callback!(...args);\n    this._rafId = this._context.requestAnimationFrame(this._onLoop);\n  }\n\n  /**\n   * MacOS X Safari Bug Fix\n   * This code guarantees that rendering should be occurred.\n   *\n   * In MacOS X(10.14.2), Safari (12.0.2)\n   * The requestAnimationFrame(RAF) callback is called just after previous RAF callback without term\n   * only if requestAnimationFrame is called for next frame while updating frame is delayed (~over 2ms)\n   * So browser cannot render the frame and may be freezing.\n   */\n  private _onLoopNextTick = (...args: any[]) => {\n    const before = performance.now();\n\n    this._callback!(...args);\n\n    const diff = performance.now() - before;\n\n    if (this._rafTimer >= 0) {\n      clearTimeout(this._rafTimer);\n      this._rafTimer = -1;\n    }\n\n    /* Use requestAnimationFrame only if current rendering could be possible over 60fps (1000/60) */\n    if (diff < 16) {\n      this._rafId = this._context.requestAnimationFrame(this._onLoop);\n    } else {\n      /* Otherwise, Call setTimeout instead of requestAnimationFrame to gaurantee renering should be occurred */\n      this._rafTimer = window.setTimeout(this._onLoop, 0);\n    }\n  }\n}\n\nexport default WebGLAnimator;\n","import Component from \"@egjs/component\";\nimport { XRFrame } from \"webxr\";\nimport Promise from \"promise-polyfill\";\nimport { glMatrix, vec3, mat3, mat4, quat } from \"gl-matrix\";\nimport ImageLoader from \"./ImageLoader\";\nimport VideoLoader from \"./VideoLoader\";\nimport WebGLUtils from \"./WebGLUtils\";\nimport Renderer from \"./renderer/Renderer\";\nimport CubeRenderer from \"./renderer/CubeRenderer\";\nimport CubeStripRenderer from \"./renderer/CubeStripRenderer\";\nimport SphereRenderer from \"./renderer/SphereRenderer\";\nimport CylinderRenderer from \"./renderer/CylinderRenderer\";\nimport VRManager from \"./vr/VRManager\";\nimport XRManager from \"./vr/XRManager\";\nimport WebGLAnimator from \"./WebGLAnimator\";\nimport { util as mathUtil } from \"../utils/math-util\";\nimport { devicePixelRatio, WEBXR_SUPPORTED } from \"../utils/browserFeature\";\nimport { PROJECTION_TYPE, STEREO_FORMAT } from \"../PanoViewer/consts\";\nimport { IS_IOS } from \"../utils/browser\";\nimport { CubemapConfig, ValueOf } from \"../types\";\nimport YawPitchControl from \"../YawPitchControl/YawPitchControl\";\n\nconst ImageType = PROJECTION_TYPE;\n\nlet DEVICE_PIXEL_RATIO = devicePixelRatio || 1;\n\n// DEVICE_PIXEL_RATIO 가 2를 초과하는 경우는 리소스 낭비이므로 2로 맞춘다.\nif (DEVICE_PIXEL_RATIO > 2) {\n  DEVICE_PIXEL_RATIO = 2;\n}\n\n// define custom events name\n/**\n * TODO: how to manage events/errortype with PanoViewer\n *\n * I think renderer events should be seperated from viewer events although it has same name.\n */\nconst EVENTS: {\n  BIND_TEXTURE: \"bindTexture\";\n  IMAGE_LOADED: \"imageLoaded\";\n  ERROR: \"error\";\n  RENDERING_CONTEXT_LOST: \"renderingContextLost\";\n  RENDERING_CONTEXT_RESTORE: \"renderingContextRestore\";\n} = {\n  BIND_TEXTURE: \"bindTexture\",\n  IMAGE_LOADED: \"imageLoaded\",\n  ERROR: \"error\",\n  RENDERING_CONTEXT_LOST: \"renderingContextLost\",\n  RENDERING_CONTEXT_RESTORE: \"renderingContextRestore\",\n};\n\nconst ERROR_TYPE = {\n  INVALID_DEVICE: 10,\n  NO_WEBGL: 11,\n  FAIL_IMAGE_LOAD: 12,\n  RENDERER_ERROR: 13\n};\n\nclass PanoImageRenderer extends Component<{\n  [EVENTS.ERROR]: {\n    type: number;\n    message: string;\n  },\n  [EVENTS.IMAGE_LOADED]: {\n    content: HTMLElement;\n    isVideo: boolean;\n    projectionType: ValueOf<typeof PROJECTION_TYPE>;\n  }\n  [EVENTS.BIND_TEXTURE]: void;\n  [EVENTS.RENDERING_CONTEXT_LOST]: void;\n  [EVENTS.RENDERING_CONTEXT_RESTORE]: void;\n}> {\n  public static EVENTS = EVENTS;\n  public static ERROR_TYPE = ERROR_TYPE;\n\n  public sphericalConfig: {\n    initialYaw: number;\n    initialPitch: number;\n    fieldOfView: number;\n    imageType: ValueOf<typeof PROJECTION_TYPE>;\n    stereoFormat: ValueOf<typeof STEREO_FORMAT>;\n    cubemapConfig: CubemapConfig;\n  };\n  public fieldOfView: number;\n  public width: number;\n  public height: number;\n\n  public canvas: HTMLCanvasElement;\n  public context: WebGLRenderingContext;\n  public shaderProgram: WebGLProgram | null;\n  public texture: WebGLTexture;\n\n  public pMatrix: mat4;\n  public mvMatrix: mat4;\n\n  public textureCoordBuffer: WebGLBuffer | null = null;\n  public vertexBuffer: WebGLBuffer | null = null;\n  public indexBuffer: WebGLBuffer | null = null;\n\n  private _wrapper: HTMLElement | null;\n  private _wrapperOrigStyle: string | null;\n  private _lastQuaternion: quat | null;\n  private _lastYaw: number | null;\n  private _lastPitch: number | null;\n  private _lastFieldOfView: number | null;\n  private _renderingContextAttributes?: WebGLContextAttributes;\n\n  private _renderer: Renderer;\n  private _contentLoader: ImageLoader | VideoLoader | null;\n  private _image: HTMLImageElement | HTMLImageElement[] | HTMLVideoElement | null;\n  private _imageConfig: CubemapConfig | null;\n  private _imageType: ValueOf<typeof PROJECTION_TYPE>;\n  private _imageIsReady: boolean;\n  private _isVideo: boolean;\n  private _isCubeMap: boolean;\n  private _shouldForceDraw: boolean;\n  private _keepUpdate: boolean;\n\n  private _yawPitchControl: YawPitchControl;\n  private _animator: WebGLAnimator;\n  private _vr: VRManager | XRManager | null;\n\n  constructor(\n    image: Parameters<ImageLoader[\"set\"]>[0] | Parameters<VideoLoader[\"set\"]>[0],\n    width: number,\n    height: number,\n    isVideo: boolean,\n    sphericalConfig: PanoImageRenderer[\"sphericalConfig\"],\n    renderingContextAttributes?: WebGLContextAttributes\n  ) {\n    // Super constructor\n    super();\n\n    this.sphericalConfig = sphericalConfig;\n    this.fieldOfView = sphericalConfig.fieldOfView;\n\n    this.width = width;\n    this.height = height;\n\n    this._lastQuaternion = null;\n    this._lastYaw = null;\n    this._lastPitch = null;\n    this._lastFieldOfView = null;\n\n    this.pMatrix = mat4.create();\n    this.mvMatrix = mat4.create();\n\n    // initialzie pMatrix\n    mat4.perspective(this.pMatrix, glMatrix.toRadian(this.fieldOfView), width / height, 0.1, 100);\n\n    this.textureCoordBuffer = null;\n    this.vertexBuffer = null;\n    this.indexBuffer = null;\n\n    this.canvas = this._initCanvas(width, height);\n\n    this.canvas.getContext(\"webgl\", )\n    this._setDefaultCanvasStyle();\n    this._wrapper = null; // canvas wrapper\n    this._wrapperOrigStyle = null;\n\n    this._renderingContextAttributes = renderingContextAttributes;\n    this._image = null;\n    this._imageConfig = null;\n    this._imageIsReady = false;\n    this._shouldForceDraw = false;\n    this._keepUpdate = false; // Flag to specify 'continuous update' on video even when still.\n\n    this._onContentLoad = this._onContentLoad.bind(this);\n    this._onContentError = \tthis._onContentError.bind(this);\n\n    this._animator = new WebGLAnimator();\n\n    // VR/XR manager\n    this._vr = null;\n\n    if (image) {\n      this.setImage({\n        image,\n        imageType: sphericalConfig.imageType,\n        isVideo,\n        cubemapConfig: sphericalConfig.cubemapConfig\n      });\n    }\n  }\n\n  // FIXME: Please refactor me to have more loose connection to yawpitchcontrol\n  public setYawPitchControl(yawPitchControl: YawPitchControl) {\n    this._yawPitchControl = yawPitchControl;\n  }\n\n  public getContent() {\n    return this._image;\n  }\n\n  public setImage({\n    image,\n    imageType,\n    isVideo = false,\n    cubemapConfig,\n  }: {\n    image: Parameters<ImageLoader[\"set\"]>[0] | Parameters<VideoLoader[\"set\"]>[0];\n    imageType: PanoImageRenderer[\"_imageType\"];\n    isVideo: boolean;\n    cubemapConfig: CubemapConfig;\n  }) {\n    this._imageIsReady = false;\n    this._isVideo = isVideo;\n    this._imageConfig = {\n      ...{\n        /* RLUDBF is abnormal, we use it on CUBEMAP only */\n        order: (imageType === ImageType.CUBEMAP) ? \"RLUDBF\" : \"RLUDFB\",\n        tileConfig: {\n          flipHorizontal: false,\n          rotation: 0\n        }\n      },\n      ...cubemapConfig\n    };\n    this._setImageType(imageType);\n\n    if (this._contentLoader) {\n      this._contentLoader.destroy();\n    }\n\n    if (isVideo) {\n      this._contentLoader = new VideoLoader();\n      this._keepUpdate = true;\n    } else {\n      this._contentLoader = new ImageLoader();\n      this._keepUpdate = false;\n    }\n\n    // img element or img url\n    this._contentLoader.set(image as any);\n\n    // 이미지의 사이즈를 캐시한다.\n    // image is reference for content in contentLoader, so it may be not valid if contentLoader is destroyed.\n    this._image = this._contentLoader.getElement();\n\n    return this._contentLoader.get()\n      .then(this._onContentLoad, this._onContentError)\n      .catch(e => setTimeout(() => { throw e; })); // Prevent exceptions from being isolated in promise chain.\n  }\n\n  public isImageLoaded() {\n    return !!this._image && this._imageIsReady &&\n      (!this._isVideo || (this._image as HTMLVideoElement).readyState >= 2 /* HAVE_CURRENT_DATA */);\n  }\n\n  public bindTexture() {\n    return new Promise((res, rej) => {\n      if (!this._contentLoader) {\n        rej(\"ImageLoader is not initialized\");\n        return;\n      }\n\n      this._contentLoader.get()\n        .then(() => {\n          this._bindTexture();\n        }, rej)\n        .then(res);\n    });\n  }\n\n  // 부모 엘리먼트에 canvas 를 붙임\n  public attachTo(parentElement) {\n    this.detach();\n    parentElement.appendChild(this.canvas);\n    this._wrapper = parentElement;\n  }\n\n  public forceContextLoss() {\n    if (this.hasRenderingContext()) {\n      const loseContextExtension = this.context.getExtension(\"WEBGL_lose_context\");\n\n      if (loseContextExtension) {\n        loseContextExtension.loseContext();\n      }\n    }\n  }\n\n  // 부모 엘리먼트에서 canvas 를 제거\n  public detach() {\n    if (this.canvas.parentElement) {\n      this.canvas.parentElement.removeChild(this.canvas);\n    }\n  }\n\n  public destroy() {\n    if (this._contentLoader) {\n      this._contentLoader.destroy();\n    }\n\n    this._animator.stop();\n    this.detach();\n    this.forceContextLoss();\n\n    this.off();\n\n    this.canvas.removeEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n    this.canvas.removeEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n  }\n\n  public hasRenderingContext() {\n    const ctx = this.context;\n    if (\n      !ctx\n      || ctx.isContextLost()\n      || !ctx.getProgramParameter(this.shaderProgram!, ctx.LINK_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  public updateFieldOfView(fieldOfView) {\n    this.fieldOfView = fieldOfView;\n    this._updateViewport();\n  }\n\n  public updateViewportDimensions(width, height) {\n    let viewPortChanged = false;\n\n    this.width = width;\n    this.height = height;\n\n    const w = width * DEVICE_PIXEL_RATIO;\n    const h = height * DEVICE_PIXEL_RATIO;\n\n    if (w !== this.canvas.width) {\n      this.canvas.width = w;\n      viewPortChanged = true;\n    }\n\n    if (h !== this.canvas.height) {\n      this.canvas.height = h;\n      viewPortChanged = true;\n    }\n\n    if (!viewPortChanged) {\n      return;\n    }\n\n    this._updateViewport();\n    this._shouldForceDraw = true;\n  }\n\n  public keepUpdate(doUpdate) {\n    if (doUpdate && this.isImageLoaded() === false) {\n      // Force to draw a frame after image is loaded on render()\n      this._shouldForceDraw = true;\n    }\n\n    this._keepUpdate = doUpdate;\n  }\n\n  public startRender() {\n    this._animator.setCallback(this._render.bind(this));\n    this._animator.start();\n  }\n\n  public stopRender() {\n    this._animator.stop();\n  }\n\n  public renderWithQuaternion(quaternion, fieldOfView) {\n    if (!this.isImageLoaded()) {\n      return;\n    }\n\n    if (this._keepUpdate === false &&\n      this._lastQuaternion && quat.exactEquals(this._lastQuaternion, quaternion) &&\n      this.fieldOfView && this.fieldOfView === fieldOfView &&\n      this._shouldForceDraw === false) {\n      return;\n    }\n\n    // updatefieldOfView only if fieldOfView is changed.\n    if (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n      this.updateFieldOfView(fieldOfView);\n    }\n\n    this.mvMatrix = mat4.fromQuat(mat4.create(), quaternion);\n\n    this._draw();\n\n    this._lastQuaternion = quat.clone(quaternion);\n    if (this._shouldForceDraw) {\n      this._shouldForceDraw = false;\n    }\n  }\n\n  public renderWithYawPitch(yaw, pitch, fieldOfView) {\n    if (!this.isImageLoaded()) {\n      return;\n    }\n\n    if (this._keepUpdate === false &&\n        this._lastYaw !== null && this._lastYaw === yaw &&\n        this._lastPitch !== null && this._lastPitch === pitch &&\n        this.fieldOfView && this.fieldOfView === fieldOfView &&\n        this._shouldForceDraw === false) {\n      return;\n    }\n\n    // fieldOfView 가 존재하면서 기존의 값과 다를 경우에만 업데이트 호출\n    if (fieldOfView !== undefined && fieldOfView !== this.fieldOfView) {\n      this.updateFieldOfView(fieldOfView);\n    }\n\n    mat4.identity(this.mvMatrix);\n    mat4.rotateX(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(pitch));\n    mat4.rotateY(this.mvMatrix, this.mvMatrix, -glMatrix.toRadian(yaw));\n\n    this._draw();\n\n    this._lastYaw = yaw;\n    this._lastPitch = pitch;\n    if (this._shouldForceDraw) {\n      this._shouldForceDraw = false;\n    }\n  }\n\n  /**\n   * Returns projection renderer by each type\n   */\n  public getProjectionRenderer() {\n    return this._renderer;\n  }\n\n  /**\n   * @return Promise\n   */\n  public enterVR(options) {\n    const vr = this._vr;\n\n    if (!WEBXR_SUPPORTED && !navigator.getVRDisplays) {\n      return Promise.reject(\"VR is not available on this browser.\");\n    }\n    if (vr && vr.isPresenting()) {\n      return Promise.resolve(\"VR already enabled.\");\n    }\n\n    return this._requestPresent(options);\n  }\n\n  public exitVR = () => {\n    const vr = this._vr;\n    const gl = this.context;\n    const animator = this._animator;\n\n    if (!vr) return;\n\n    vr.removeEndCallback(this.exitVR);\n    vr.destroy();\n    this._vr = null;\n\n    // Restore canvas & context on iOS\n    if (IS_IOS) {\n      this._restoreStyle();\n    }\n    this.updateViewportDimensions(this.width, this.height);\n    this._updateViewport();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    this._bindBuffers();\n    this._shouldForceDraw = true;\n\n    animator.stop();\n    animator.setContext(window);\n    animator.setCallback(this._render.bind(this));\n    animator.start();\n  }\n\n  private _setImageType(imageType) {\n    if (!imageType || this._imageType === imageType) {\n      return;\n    }\n\n    this._imageType = imageType;\n    this._isCubeMap = imageType === ImageType.CUBEMAP;\n\n    if (this._renderer) {\n      this._renderer.off();\n    }\n\n    switch (imageType) {\n      case ImageType.CUBEMAP:\n        this._renderer = new CubeRenderer();\n        break;\n      case ImageType.CUBESTRIP:\n        this._renderer = new CubeStripRenderer();\n        break;\n      case ImageType.PANORAMA:\n        this._renderer = new CylinderRenderer();\n        break;\n      case ImageType.STEREOSCOPIC_EQUI:\n        this._renderer = new SphereRenderer(this.sphericalConfig.stereoFormat);\n        break;\n      default:\n        this._renderer = new SphereRenderer(STEREO_FORMAT.NONE);\n        break;\n    }\n\n    this._renderer.on(Renderer.EVENTS.ERROR, e => {\n      this.trigger(EVENTS.ERROR, {\n        type: ERROR_TYPE.RENDERER_ERROR,\n        message: e.message\n      });\n    });\n\n    this._initWebGL();\n  }\n\n  private _initCanvas(width: number, height: number) {\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n\n    this._onWebglcontextlost = this._onWebglcontextlost.bind(this);\n    this._onWebglcontextrestored = this._onWebglcontextrestored.bind(this);\n\n    canvas.addEventListener(\"webglcontextlost\", this._onWebglcontextlost);\n    canvas.addEventListener(\"webglcontextrestored\", this._onWebglcontextrestored);\n\n    return canvas;\n  }\n\n  private _setDefaultCanvasStyle() {\n    const canvas = this.canvas;\n\n    canvas.style.bottom = \"0\";\n    canvas.style.left = \"0\";\n    canvas.style.right = \"0\";\n    canvas.style.top = \"0\";\n    canvas.style.margin = \"auto\";\n    canvas.style.maxHeight = \"100%\";\n    canvas.style.maxWidth = \"100%\";\n    canvas.style.outline = \"none\";\n    canvas.style.position = \"absolute\";\n  }\n\n  private _onContentError(error) {\n    this._imageIsReady = false;\n    this._image = null;\n    this.trigger(EVENTS.ERROR, {\n      type: ERROR_TYPE.FAIL_IMAGE_LOAD,\n      message: \"failed to load image\"\n    });\n\n    return false;\n  }\n\n  private _triggerContentLoad() {\n    this.trigger(EVENTS.IMAGE_LOADED, {\n      content: this._image as HTMLElement,\n      isVideo: this._isVideo,\n      projectionType: this._imageType\n    });\n  }\n\n  private _onContentLoad() {\n    this._imageIsReady = true;\n\n    this._triggerContentLoad();\n    return true;\n  }\n\n  private _initShaderProgram() {\n    const gl = this.context;\n\n    if (this.shaderProgram) {\n      gl.deleteProgram(this.shaderProgram);\n      this.shaderProgram = null;\n    }\n\n    const renderer = this._renderer;\n\n    const vsSource = renderer.getVertexShaderSource();\n    const fsSource = renderer.getFragmentShaderSource();\n\n    const vertexShader = WebGLUtils.createShader(gl, gl.VERTEX_SHADER, vsSource)!;\n    const fragmentShader = WebGLUtils.createShader(gl, gl.FRAGMENT_SHADER, fsSource)!;\n\n    const shaderProgram = WebGLUtils.createProgram(gl, vertexShader, fragmentShader);\n\n    if (!shaderProgram) {\n      throw new Error(`Failed to intialize shaders: ${WebGLUtils.getErrorNameFromWebGLErrorCode(gl.getError())}`);\n    }\n\n    gl.useProgram(shaderProgram);\n    (shaderProgram as any).vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\n    gl.enableVertexAttribArray((shaderProgram as any).vertexPositionAttribute);\n    (shaderProgram as any).pMatrixUniform = gl.getUniformLocation(shaderProgram, \"uPMatrix\");\n    (shaderProgram as any).mvMatrixUniform = gl.getUniformLocation(shaderProgram, \"uMVMatrix\");\n    (shaderProgram as any).samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n    (shaderProgram as any).textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\n    (shaderProgram as any).uEye = gl.getUniformLocation(shaderProgram, \"uEye\");\n\n    gl.enableVertexAttribArray((shaderProgram as any).textureCoordAttribute);\n\n    // clear buffer\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n    // Use TEXTURE0\n    gl.uniform1i((shaderProgram as any).samplerUniform, 0);\n\n    this.shaderProgram = shaderProgram;\n  }\n\n  private _onWebglcontextlost(e) {\n    e.preventDefault();\n    this.trigger(EVENTS.RENDERING_CONTEXT_LOST);\n  }\n\n  private _onWebglcontextrestored(e) {\n    this._initWebGL();\n    this.trigger(EVENTS.RENDERING_CONTEXT_RESTORE);\n  }\n\n  private _updateViewport() {\n    mat4.perspective(\n      this.pMatrix,\n      glMatrix.toRadian(this.fieldOfView),\n      this.canvas.width / this.canvas.height,\n      0.1,\n      100);\n\n    this.context.viewport(0, 0, this.context.drawingBufferWidth, this.context.drawingBufferHeight);\n  }\n\n  private _initWebGL() {\n    let gl: WebGLRenderingContext;\n\n    // TODO: Following code does need to be executed only if width/height, cubicStrip property is changed.\n    try {\n      this._initRenderingContext();\n      gl = this.context;\n\n      this.updateViewportDimensions(this.width, this.height);\n      this._initShaderProgram();\n    } catch (e) {\n      this.trigger(EVENTS.ERROR, {\n        type: ERROR_TYPE.NO_WEBGL,\n        message: \"no webgl support\"\n      });\n      this.destroy();\n      console.error(e); // eslint-disable-line no-console\n      return;\n    }\n    // 캔버스를 투명으로 채운다.\n    gl.clearColor(0, 0, 0, 0);\n    const textureTarget = this._isCubeMap ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n\n    if (this.texture) {\n      gl.deleteTexture(this.texture);\n    }\n\n    this.texture = WebGLUtils.createTexture(gl, textureTarget)!;\n\n    if (this._imageType === ImageType.CUBESTRIP) {\n      // TODO: Apply following options on other projection type.\n      gl.enable(gl.CULL_FACE);\n      // gl.enable(gl.DEPTH_TEST);\n    }\n  }\n\n  private _initRenderingContext() {\n    if (this.hasRenderingContext()) {\n      return;\n    }\n\n    if (!window.WebGLRenderingContext) {\n      throw new Error(\"WebGLRenderingContext not available.\");\n    }\n\n    this.context = WebGLUtils.getWebglContext(this.canvas, this._renderingContextAttributes)!;\n\n    if (!this.context) {\n      throw new Error(\"Failed to acquire 3D rendering context\");\n    }\n  }\n\n  private _initBuffers() {\n    const vertexPositionData = this._renderer.getVertexPositionData();\n    const indexData = this._renderer.getIndexData();\n    const textureCoordData = this._renderer.getTextureCoordData(this._imageConfig!);\n    const gl = this.context;\n\n    this.vertexBuffer = WebGLUtils.initBuffer(\n      gl, gl.ARRAY_BUFFER, new Float32Array(vertexPositionData), 3,\n      (this.shaderProgram as any).vertexPositionAttribute);\n\n    this.indexBuffer = WebGLUtils.initBuffer(\n      gl, gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexData), 1);\n\n    this.textureCoordBuffer = WebGLUtils.initBuffer(\n      gl, gl.ARRAY_BUFFER, new Float32Array(textureCoordData), this._isCubeMap ? 3 : 2,\n      (this.shaderProgram as any).textureCoordAttribute);\n\n    this._bindBuffers();\n  }\n\n  private _bindTexture() {\n    // Detect if it is EAC Format while CUBESTRIP mode.\n    // We assume it is EAC if image is not 3/2 ratio.\n    if (this._imageType === ImageType.CUBESTRIP) {\n      const { width, height } = this._renderer.getDimension(this._image as HTMLImageElement | HTMLVideoElement);\n      const isEAC = width && height && width / height !== 1.5 ? 1 : 0;\n\n      this.context.uniform1f(this.context.getUniformLocation(this.shaderProgram!, \"uIsEAC\"), isEAC);\n    } else if (this._imageType === ImageType.PANORAMA) {\n      const { width, height } = this._renderer.getDimension(this._image as HTMLImageElement | HTMLVideoElement);\n      const imageAspectRatio = width && height && width / height;\n\n      this._renderer.updateShaderData({imageAspectRatio});\n    }\n\n    // intialize shader buffers after image is loaded.(by updateShaderData)\n    // because buffer may be differ by image size.(eg. CylinderRenderer)\n    this._initBuffers();\n\n    this._renderer.bindTexture(\n      this.context,\n      this.texture,\n      this._image as HTMLImageElement | HTMLVideoElement,\n      this._imageConfig!,\n    );\n    this._shouldForceDraw = true;\n\n    this.trigger(EVENTS.BIND_TEXTURE);\n  }\n\n  private _updateTexture() {\n    this._renderer.updateTexture(\n      this.context,\n      this._image as HTMLImageElement | HTMLVideoElement,\n      this._imageConfig!,\n    );\n  }\n\n  private _render() {\n    const yawPitchControl = this._yawPitchControl;\n    const fov = yawPitchControl.getFov();\n\n    if (yawPitchControl.shouldRenderWithQuaternion()) {\n      const quaternion = yawPitchControl.getQuaternion();\n\n      this.renderWithQuaternion(quaternion, fov);\n    } else {\n      const yawPitch = yawPitchControl.getYawPitch();\n\n      this.renderWithYawPitch(yawPitch.yaw, yawPitch.pitch, fov);\n    }\n  }\n\n  private _renderStereo = (time: number, frame: XRFrame) => {\n    const vr = this._vr;\n    const gl = this.context;\n\n    const eyeParams = vr!.getEyeParams(gl, frame);\n\n    if (!eyeParams) return;\n\n    vr!.beforeRender(gl, frame);\n\n    // Render both eyes\n    for (const eyeIndex of [0, 1]) {\n      const eyeParam = eyeParams[eyeIndex];\n\n      this.mvMatrix = eyeParam.mvMatrix;\n      this.pMatrix = eyeParam.pMatrix;\n\n      gl.viewport(...eyeParam.viewport as [number, number, number, number]);\n      gl.uniform1f((this.shaderProgram as any).uEye, eyeIndex);\n\n      this._bindBuffers();\n      this._draw();\n    }\n\n    vr!.afterRender();\n  }\n\n  private _bindBuffers() {\n    const gl = this.context;\n    const program = this.shaderProgram;\n\n    const vertexBuffer = this.vertexBuffer;\n    const textureCoordBuffer = this.textureCoordBuffer;\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.enableVertexAttribArray((program as any).vertexPositionAttribute);\n    gl.vertexAttribPointer(\n      (program as any).vertexPositionAttribute, (vertexBuffer as any).itemSize, gl.FLOAT, false, 0, 0\n    );\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordBuffer);\n    gl.enableVertexAttribArray((program as any).textureCoordAttribute);\n    gl.vertexAttribPointer(\n      (program as any).textureCoordAttribute, (textureCoordBuffer as any).itemSize, gl.FLOAT, false, 0, 0\n    );\n  }\n\n  private _draw() {\n    if (this._isVideo && this._keepUpdate) {\n      this._updateTexture();\n    }\n\n    this._renderer.render({\n      gl: this.context,\n      shaderProgram: this.shaderProgram!,\n      indexBuffer: this.indexBuffer!,\n      mvMatrix: this.mvMatrix,\n      pMatrix: this.pMatrix,\n    });\n  }\n\n  private _requestPresent(options) {\n    const gl = this.context;\n    const canvas = this.canvas;\n    const animator = this._animator;\n\n    this._vr = WEBXR_SUPPORTED ?\n      new XRManager(options) :\n      new VRManager();\n\n    const vr = this._vr;\n\n    animator.stop();\n    return new Promise((resolve, reject) => {\n      vr.requestPresent(canvas, gl)\n        .then(() => {\n          vr.addEndCallback(this.exitVR);\n          animator.setContext(vr.context);\n          animator.setCallback(this._onFirstVRFrame);\n\n          if (IS_IOS) {\n            this._setWrapperFullscreen();\n          }\n\n          this._shouldForceDraw = true;\n          animator.start();\n\n          resolve(\"success\");\n        })\n        .catch(e => {\n          vr.destroy();\n          this._vr = null;\n          animator.start();\n\n          reject(e);\n        });\n    });\n  }\n\n  private _onFirstVRFrame = (time, frame) => {\n    const vr = this._vr!;\n    const gl = this.context;\n    const animator = this._animator;\n\n    // If rendering is not ready, wait for next frame\n    if (!vr.canRender(frame)) return;\n\n    const minusZDir = vec3.fromValues(0, 0, -1);\n    const eyeParam = vr.getEyeParams(gl, frame)![0];\n    // Extract only rotation\n    const mvMatrix = mat3.fromMat4(mat3.create(), eyeParam.mvMatrix);\n    const pMatrix = mat3.fromMat4(mat3.create(), eyeParam.pMatrix);\n\n    const mvInv = mat3.invert(mat3.create(), mvMatrix);\n    const pInv = mat3.invert(mat3.create(), pMatrix);\n    const viewDir = vec3.transformMat3(vec3.create(), minusZDir, pInv);\n\n    vec3.transformMat3(viewDir, viewDir, mvInv);\n\n    const yawOffset = mathUtil.yawOffsetBetween(viewDir, vec3.fromValues(0, 0, 1));\n\n    if (yawOffset === 0) {\n      // If the yawOffset is exactly 0, then device sensor is not ready\n      // So read it again until it has any value in it\n      return;\n    }\n\n    vr.setYawOffset(yawOffset);\n    animator.setCallback(this._renderStereo);\n  }\n\n  private _setWrapperFullscreen() {\n    const wrapper = this._wrapper;\n\n    if (!wrapper) return;\n\n    this._wrapperOrigStyle = wrapper.getAttribute(\"style\");\n    const wrapperStyle = wrapper.style;\n\n    wrapperStyle.width = \"100vw\";\n    wrapperStyle.height = \"100vh\";\n    wrapperStyle.position = \"fixed\";\n    wrapperStyle.left = \"0\";\n    wrapperStyle.top = \"0\";\n    wrapperStyle.zIndex = \"9999\";\n  }\n\n  private _restoreStyle() {\n    const wrapper = this._wrapper;\n    const canvas = this.canvas;\n\n    if (!wrapper) return;\n\n    if (this._wrapperOrigStyle) {\n      wrapper.setAttribute(\"style\", this._wrapperOrigStyle);\n    } else {\n      wrapper.removeAttribute(\"style\");\n    }\n\n    this._wrapperOrigStyle = null;\n\n    // Restore canvas style\n    canvas.removeAttribute(\"style\");\n    this._setDefaultCanvasStyle();\n  }\n}\n\nexport default PanoImageRenderer;\n","import Component from \"@egjs/component\";\nimport Promise from \"promise-polyfill\";\nimport { quat } from \"gl-matrix\";\nimport { DeviceMotionEvent, checkXRSupport } from \"../utils/browserFeature\";\nimport YawPitchControl, { YawPitchControlOptions } from \"../YawPitchControl/YawPitchControl\";\nimport PanoImageRenderer from \"../PanoImageRenderer/PanoImageRenderer\";\nimport WebGLUtils from \"../PanoImageRenderer/WebGLUtils\";\nimport { ERROR_TYPE, EVENTS, GYRO_MODE, PROJECTION_TYPE, STEREO_FORMAT } from \"./consts\";\nimport { util as mathUtil } from \"../utils/math-util\";\nimport { VERSION } from \"../version\";\nimport { CubemapConfig, ValueOf } from \"../types\";\n\nexport type PanoViewerEvent = {\n  /**\n   * Events that is fired when PanoViewer is ready to go.\n   * @ko PanoViewer 가 준비된 상태에 발생하는 이벤트\n   * @name eg.view360.PanoViewer#ready\n   * @event\n   *\n   * @example\n   * ```\n   * viwer.on({\n   *   \"ready\" : function(evt) {\n   *     // PanoViewer is ready to show image and handle user interaction.\n   *   }\n   * });\n   * ```\n   */\n  ready: void;\n\n  /**\n   * Events that is fired when direction or fov is changed.\n   * @ko PanoViewer 에서 바라보고 있는 방향이나 FOV(화각)가 변경되었을때 발생하는 이벤트\n   * @name eg.view360.PanoViewer#viewChange\n   * @event\n   * @param {object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {number} param.yaw yaw<ko>yaw</ko>\n   * @param {number} param.pitch pitch <ko>pitch</ko>\n   * @param {number} param.fov Field of view (fov) <ko>화각</ko>\n   * @example\n   * ```\n   * viwer.on({\n   *   \"viewChange\" : function(evt) {\n   *     //evt.yaw, evt.pitch, evt.fov is available.\n   *   }\n   * });\n   * ```\n   */\n  viewChange: {\n    yaw: number;\n    pitch: number;\n    fov: number;\n  };\n\n  /**\n   * Events that is fired when animation which is triggered by inertia is ended.\n   * @ko 관성에 의한 애니메이션 동작이 완료되었을때 발생하는 이벤트\n   * @name eg.view360.PanoViewer#animationEnd\n   * @event\n   * @param {object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {number} param.isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call<ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   * @example\n   * ```\n   * viwer.on({\n   *   \"animationEnd\" : function(evt) {\n   *     // animation is ended.\n   *   }\n   * });\n   * ```\n   */\n  animationEnd: {\n    isTrusted: boolean;\n  };\n\n  /**\n   * Events that is fired when error occurs\n   * @ko 에러 발생 시 발생하는 이벤트\n   * @name eg.view360.PanoViewer#error\n   * @event\n   * @param {object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {number} param.type Error type\n   * \t\t10: INVALID_DEVICE: Unsupported device\n   * \t\t11: NO_WEBGL: Webgl not support\n   * \t\t12, FAIL_IMAGE_LOAD: Failed to load image\n   * \t\t13: FAIL_BIND_TEXTURE: Failed to bind texture\n   * \t\t14: INVALID_RESOURCE: Only one resource(image or video) should be specified\n   * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost occurred\n   * <ko>에러 종류\n   * \t\t10: INVALID_DEVICE: 미지원 기기\n   * \t\t11: NO_WEBGL: WEBGL 미지원\n   * \t\t12, FAIL_IMAGE_LOAD: 이미지 로드 실패\n   * \t\t13: FAIL_BIND_TEXTURE: 텍스쳐 바인딩 실패\n   * \t\t14: INVALID_RESOURCE: 리소스 지정 오류 (image 혹은 video 중 하나만 지정되어야 함)\n   * \t\t15: RENDERING_CONTEXT_LOST: WebGL context lost 발생\n   * </ko>\n   * @param {string} param.message Error message <ko>에러 메시지</ko>\n   * @see {@link eg.view360.PanoViewer.ERROR_TYPE}\n   * @example\n   * ```\n   * viwer.on({\n   *   \"error\" : function(evt) {\n   *     // evt.type === 13\n   *     // evt.message === \"failed to bind texture\"\n   * });\n   *\n   * // constant can be used\n   * viwer.on({\n   *   eg.view360.PanoViewer.EVENTS.ERROR : function(evt) {\n   *   // evt.type === eg.view360.PanoViewer.ERROR_TYPE.FAIL_BIND_TEXTURE\n   *   // evt.message === \"failed to bind texture\"\n   * });\n   * ```\n   */\n  error: {\n    type: number;\n    message: string;\n  };\n}\n\n/**\n * @memberof eg.view360\n * @extends eg.Component\n * PanoViewer\n */\nclass PanoViewer extends Component<PanoViewerEvent> {\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @type {String}\n   * @example\n   * eg.view360.PanoViewer.VERSION;  // ex) 3.0.1\n   * @memberof eg.view360.PanoViewer\n   */\n  public static VERSION = VERSION;\n  public static ERROR_TYPE = ERROR_TYPE;\n  public static EVENTS = EVENTS;\n  public static PROJECTION_TYPE = PROJECTION_TYPE;\n  public static GYRO_MODE = GYRO_MODE;\n  // This should be deprecated!\n  public static ProjectionType = PROJECTION_TYPE;\n  public static STEREO_FORMAT = STEREO_FORMAT;\n\n  /**\n   * Constant value for touch directions\n   * @ko 터치 방향에 대한 상수 값.\n   * @namespace\n   * @name TOUCH_DIRECTION\n   */\n  public static TOUCH_DIRECTION = {\n    /**\n     * Constant value for none direction.\n     * @ko none 방향에 대한 상수 값.\n     * @name NONE\n     * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n     * @constant\n     * @type {Number}\n     * @default 1\n     */\n    NONE: YawPitchControl.TOUCH_DIRECTION_NONE,\n    /**\n     * Constant value for horizontal(yaw) direction.\n     * @ko horizontal(yaw) 방향에 대한 상수 값.\n     * @name YAW\n     * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n     * @constant\n     * @type {Number}\n     * @default 6\n     */\n    YAW: YawPitchControl.TOUCH_DIRECTION_YAW,\n    /**\n     * Constant value for vertical direction.\n     * @ko vertical(pitch) 방향에 대한 상수 값.\n     * @name PITCH\n     * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n     * @constant\n     * @type {Number}\n     * @default 24\n     */\n    PITCH: YawPitchControl.TOUCH_DIRECTION_PITCH,\n    /**\n     * Constant value for all direction.\n     * @ko all 방향에 대한 상수 값.\n     * @name ALL\n     * @memberof eg.view360.PanoViewer.TOUCH_DIRECTION\n     * @constant\n     * @type {Number}\n     * @default 30\n     */\n    ALL: YawPitchControl.TOUCH_DIRECTION_ALL\n  };\n\n  private _container: HTMLElement;\n  // Options\n  private _image: ConstructorParameters<typeof PanoImageRenderer>[0];\n  private _isVideo: boolean;\n  private _projectionType: ValueOf<typeof PROJECTION_TYPE>;\n  private _cubemapConfig: CubemapConfig;\n  private _stereoFormat: ValueOf<typeof STEREO_FORMAT>;\n  private _width: number;\n  private _height: number;\n  private _yaw: number;\n  private _pitch: number;\n  private _fov: number;\n  private _gyroMode: ValueOf<typeof GYRO_MODE>;\n  private _quaternion: quat | null;\n  private _aspectRatio: number;\n  private _isReady: boolean;\n\n  // Internal Values\n  private _photoSphereRenderer: PanoImageRenderer | null;\n  private _yawPitchControl: YawPitchControl | null;\n\n  /**\n   * @classdesc 360 media viewer\n   * @ko 360 미디어 뷰어\n   *\n   * @param container The container element for the renderer. <ko>렌더러의 컨테이너 엘리먼트</ko>\n   * @param options\n   *\n   * @param {String|HTMLImageElement} options.image Input image url or element (Use only image property or video property)<ko>입력 이미지 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n   * @param {String|HTMLVideoElement} options.video Input video url or element(Use only image property or video property)<ko>입력 비디오 URL 혹은 엘리먼트(image 와 video 둘 중 하나만 설정)</ko>\n   * @param {String} [options.projectionType=equirectangular] The type of projection: equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}<ko>Projection 유형 : equirectangular, cubemap <br/>{@link eg.view360.PanoViewer.PROJECTION_TYPE}</ko>\n   * @param {Object} options.cubemapConfig Config cubemap projection layout. It is applied when projectionType is {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} or {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP}<ko>cubemap projection type 의 레이아웃을 설정한다. 이 설정은 ProjectionType이 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP} 혹은 {@link eg.view360.PanoViewer.PROJECTION_TYPE.CUBESTRIP} 인 경우에만 적용된다.</ko>\n   * @param {Object} [options.cubemapConfig.order = \"RLUDBF\"(ProjectionType === CUBEMAP) | \"RLUDFB\" (ProjectionType === CUBESTRIP)] Order of cubemap faces <ko>Cubemap 형태의 이미지가 배치된 순서</ko>\n   * @param {Object} [options.cubemapConfig.tileConfig = { flipHorizontal:false, rotation: 0 }] Setting about rotation angle(degree) and whether to flip horizontal for each cubemap faces, if you put this object as a array, you can set each faces with different setting. For example, [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]<ko>각 Cubemap 면에 대한 회전 각도/좌우반전 여부 설정, 객체를 배열 형태로 지정하여 각 면에 대한 설정을 다르게 지정할 수도 있다. 예를 들어 [{flipHorizontal:false, rotation:90}, {flipHorizontal: true, rotation: 180}, ...]과 같이 지정할 수 있다.</ko>\n   * @param {String} [options.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection.<br/>See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다.<br/>{@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n   * @param {Number} [options.width=width of container] the viewer's width. (in px) <ko>뷰어의 너비 (px 단위)</ko>\n   * @param {Number} [options.height=height of container] the viewer's height.(in px) <ko>뷰어의 높이 (px 단위)</ko>\n   *\n   * @param {Number} [options.yaw=0] Initial Yaw of camera (in degree) <ko>카메라의 초기 Yaw (degree 단위)</ko>\n   * @param {Number} [options.pitch=0] Initial Pitch of camera (in degree) <ko>카메라의 초기 Pitch (degree 단위)</ko>\n   * @param {Number} [options.fov=65] Initial vertical field of view of camera (in degree) <ko>카메라의 초기 수직 field of view (degree 단위)</ko>\n   * @param {Boolean} [options.showPolePoint=false] If false, the pole is not displayed inside the viewport <ko>false 인 경우, 극점은 뷰포트 내부에 표시되지 않습니다</ko>\n   * @param {Boolean} [options.useZoom=true] When true, enables zoom with the wheel and Pinch gesture <ko>true 일 때 휠 및 집기 제스춰로 확대 / 축소 할 수 있습니다.</ko>\n   * @param {Boolean} [options.useKeyboard=true] When true, enables the keyboard move key control: awsd, arrow keys <ko>true 이면 키보드 이동 키 컨트롤을 활성화합니다: awsd, 화살표 키</ko>\n   * @param {String} [options.gyroMode=yawPitch] Enables control through device motion. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} <ko>디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\") <br/>{@link eg.view360.PanoViewer.GYRO_MODE} </ko>\n   * @param {Array} [options.yawRange=[-180, 180]] Range of controllable Yaw values <ko>제어 가능한 Yaw 값의 범위</ko>\n   * @param {Array} [options.pitchRange=[-90, 90]] Range of controllable Pitch values <ko>제어 가능한 Pitch 값의 범위</ko>\n   * @param {Array} [options.fovRange=[30, 110]] Range of controllable vertical field of view values <ko>제어 가능한 수직 field of view 값의 범위</ko>\n   * @param {Number} [options.touchDirection= {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}(6)] Direction of touch that can be controlled by user <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>사용자가 터치로 조작 가능한 방향 <br/>{@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n   *\n   * @example\n   * ```\n   * // PanoViewer Creation\n   * // create PanoViewer with option\n   * var PanoViewer = eg.view360.PanoViewer;\n   * // Area where the image will be displayed(HTMLElement)\n   * var container = document.getElementById(\"myPanoViewer\");\n   *\n   * var panoViewer = new PanoViewer(container, {\n   *   // If projectionType is not specified, the default is \"equirectangular\".\n   *   // Specifies an image of the \"equirectangular\" type.\n   *   image: \"/path/to/image/image.jpg\"\n   * });\n   * ```\n   *\n   * @example\n   * ```\n   * // Cubemap Config Setting Example\n   * // For support Youtube EAC projection, You should set cubemapConfig as follows.\n   * cubemapConfig: {\n   *   order: \"LFRDBU\",\n   *   tileConfig: [{rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: 0}, {rotation: -90}, {rotation: 180}]\n   * }\n   * ```\n   */\n  constructor(container: HTMLElement, options: Partial<{\n    image: string | HTMLElement;\n    video: string | HTMLElement;\n    projectionType: PanoViewer[\"_projectionType\"];\n    cubemapConfig: PanoViewer[\"_cubemapConfig\"];\n    stereoFormat: PanoViewer[\"_stereoFormat\"];\n    width: number;\n    height: number;\n    yaw: number;\n    pitch: number;\n    fov: number;\n    showPolePoint: boolean;\n    useZoom: boolean;\n    useKeyboard: boolean;\n    gyroMode: PanoViewer[\"_gyroMode\"];\n    yawRange: number[];\n    pitchRange: number[];\n    fovRange: number[];\n    touchDirection: ValueOf<typeof PanoViewer.TOUCH_DIRECTION>;\n  }> = {}) {\n    super();\n\n    // Raises the error event if webgl is not supported.\n    if (!WebGLUtils.isWebGLAvailable()) {\n      setTimeout(() => {\n        this.trigger(EVENTS.ERROR, {\n          type: ERROR_TYPE.NO_WEBGL,\n          message: \"no webgl support\"\n        });\n      }, 0);\n      return this;\n    }\n\n    if (!WebGLUtils.isStableWebGL()) {\n      setTimeout(() => {\n        this.trigger(EVENTS.ERROR, {\n          type: ERROR_TYPE.INVALID_DEVICE,\n          message: \"blacklisted browser\"\n        });\n      }, 0);\n\n      return this;\n    }\n\n    if (!!options.image && !!options.video) {\n      setTimeout(() => {\n        this.trigger(EVENTS.ERROR, {\n          type: ERROR_TYPE.INVALID_RESOURCE,\n          message: \"Specifying multi resouces(both image and video) is not valid.\"\n        });\n      }, 0);\n      return this;\n    }\n\n    // Check XR support at not when imported, but when created.\n    // This is intended to make polyfills easier to use.\n    checkXRSupport();\n\n    this._container = container;\n    this._image = options.image! as HTMLImageElement || options.video! as HTMLVideoElement;\n    this._isVideo = !!options.video;\n    this._projectionType = options.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n    this._cubemapConfig = {\n      ...{\n        /* RLUDBF is abnormal, we use it on CUBEMAP only for backward compatibility*/\n        order: this._projectionType === PROJECTION_TYPE.CUBEMAP ? \"RLUDBF\" : \"RLUDFB\",\n        tileConfig: {\n          flipHorizontal: false,\n          rotation: 0\n        }\n      }, ...options.cubemapConfig\n    };\n    this._stereoFormat = options.stereoFormat || STEREO_FORMAT.TOP_BOTTOM;\n\n    // If the width and height are not provided, will use the size of the container.\n    this._width = options.width || parseInt(window.getComputedStyle(container).width, 10);\n    this._height = options.height || parseInt(window.getComputedStyle(container).height, 10);\n\n    /**\n     * Cache the direction for the performance in renderLoop\n     *\n     * This value should be updated by \"change\" event of YawPitchControl.\n     */\n    this._yaw = options.yaw || 0;\n    this._pitch = options.pitch || 0;\n    this._fov = options.fov || 65;\n\n    this._gyroMode = options.gyroMode || GYRO_MODE.YAWPITCH;\n    this._quaternion = null;\n\n    this._aspectRatio = this._height !== 0 ? this._width / this._height : 1;\n    const fovRange = options.fovRange || [30, 110];\n    const touchDirection = PanoViewer._isValidTouchDirection(options.touchDirection) ?\n      options.touchDirection : YawPitchControl.TOUCH_DIRECTION_ALL;\n    const yawPitchConfig = {\n      ...options,\n      ...{\n        element: container,\n        yaw: this._yaw,\n        pitch: this._pitch,\n        fov: this._fov,\n        gyroMode: this._gyroMode,\n        fovRange,\n        aspectRatio: this._aspectRatio,\n        touchDirection\n      }\n    };\n\n    this._isReady = false;\n\n    this._initYawPitchControl(yawPitchConfig);\n    this._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n  }\n\n  /**\n   * Check whether the current environment can execute PanoViewer\n   * @ko 현재 브라우저 환경에서 PanoViewer 실행이 가능한지 여부를 반환합니다.\n   * @return PanoViewer executable <ko>PanoViewer 실행가능 여부</ko>\n   */\n  public static isSupported(): boolean {\n    return WebGLUtils.isWebGLAvailable() && WebGLUtils.isStableWebGL();\n  }\n\n  /**\n   * Check whether the current environment supports the WebGL\n   * @ko 현재 브라우저 환경이 WebGL 을 지원하는지 여부를 확인합니다.\n   * @return WebGL support <ko>WebGL 지원여부</ko>\n   */\n  public static isWebGLAvailable(): boolean {\n    return WebGLUtils.isWebGLAvailable();\n  }\n\n  /**\n   * Check whether the current environment supports the gyro sensor.\n   * @ko 현재 브라우저 환경이 자이로 센서를 지원하는지 여부를 확인합니다.\n   * @param callback Function to take the gyro sensor availability as argument <ko>자이로 센서를 지원하는지 여부를 인자로 받는 함수</ko>\n   */\n  public static isGyroSensorAvailable(callback: (isAvailable: boolean) => any) {\n    if (!DeviceMotionEvent && callback) {\n      callback(false);\n      return;\n    }\n\n    let onDeviceMotionChange;\n\n    function checkGyro() {\n      return new Promise((res, rej) => {\n        onDeviceMotionChange = deviceMotion => {\n          const isGyroSensorAvailable = !(deviceMotion.rotationRate.alpha == null);\n\n          res(isGyroSensorAvailable);\n        };\n\n        window.addEventListener(\"devicemotion\", onDeviceMotionChange);\n      });\n    }\n\n    function timeout() {\n      return new Promise((res, rej) => {\n        setTimeout(() => res(false), 1000);\n      });\n    }\n\n    Promise.race([checkGyro(), timeout()]).then((isGyroSensorAvailable: boolean) => {\n      window.removeEventListener(\"devicemotion\", onDeviceMotionChange);\n\n      if (callback) {\n        callback(isGyroSensorAvailable);\n      }\n\n      PanoViewer.isGyroSensorAvailable = fb => {\n        if (fb) {\n          fb(isGyroSensorAvailable);\n        }\n        return isGyroSensorAvailable;\n      };\n    });\n  }\n\n  private static _isValidTouchDirection(direction) {\n    return direction === PanoViewer.TOUCH_DIRECTION.NONE ||\n      direction === PanoViewer.TOUCH_DIRECTION.YAW ||\n      direction === PanoViewer.TOUCH_DIRECTION.PITCH ||\n      direction === PanoViewer.TOUCH_DIRECTION.ALL;\n  }\n\n  /**\n   * Get the video element that the viewer is currently playing. You can use this for playback.\n   * @ko 뷰어가 현재 사용 중인 비디오 요소를 얻습니다. 이 요소를 이용해 비디오의 컨트롤을 할 수 있습니다.\n   * @return HTMLVideoElement<ko>HTMLVideoElement</ko>\n   * @example\n   * ```\n   * var videoTag = panoViewer.getVideo();\n   * videoTag.play(); // play the video!\n   * ```\n   */\n  public getVideo() {\n    if (!this._isVideo) {\n      return null;\n    }\n\n    return this._photoSphereRenderer!.getContent() as HTMLVideoElement;\n  }\n\n  /**\n   * Set the video information to be used by the viewer.\n   * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n   * @param {string|HTMLVideoElement|object} video Input video url or element or config object<ko>입력 비디오 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정)</ko>\n   * @param {object} param\n   * @param {string} [param.projectionType={@link eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR}(\"equirectangular\")] Projection Type<ko>프로젝션 타입</ko>\n   * @param {object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 의 레이아웃 설정</ko>\n   * @param {string} [param.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection. See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다. {@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n   *\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * ```\n   * panoViewer.setVideo(\"/path/to/video/video.mp4\", {\n   *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.EQUIRECTANGULAR\n   * });\n   * ```\n   */\n  public setVideo(video: string | HTMLElement | { type : string; src: string; }, param: Partial<{\n    projectionType: PanoViewer[\"_projectionType\"];\n    cubemapConfig: PanoViewer[\"_cubemapConfig\"];\n    stereoFormat: PanoViewer[\"_stereoFormat\"];\n  }> = {}) {\n    if (video) {\n      this.setImage(video, {\n        projectionType: param.projectionType,\n        isVideo: true,\n        cubemapConfig: param.cubemapConfig,\n        stereoFormat: param.stereoFormat\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Get the image information that the viewer is currently using.\n   * @ko 뷰어가 현재 사용하고있는 이미지 정보를 얻습니다.\n   * @return Image Object<ko>이미지 객체</ko>\n   * @example\n   * var imageObj = panoViewer.getImage();\n   */\n  public getImage() {\n    if (this._isVideo) {\n      return null;\n    }\n\n    return this._photoSphereRenderer!.getContent();\n  }\n\n  /**\n   * Set the image information to be used by the viewer.\n   * @ko 뷰어가 사용할 이미지 정보를 설정합니다.\n   * @param {string|HTMLElement|object} image Input image url or element or config object<ko>입력 이미지 URL 혹은 엘리먼트 혹은 설정객체를 활용(image 와 video 둘 중 하나만 설정한다.)</ko>\n   * @param {object} param Additional information<ko>이미지 추가 정보</ko>\n   * @param {string} [param.projectionType=\"equirectangular\"] Projection Type<ko>프로젝션 타입</ko>\n   * @param {object} param.cubemapConfig config cubemap projection layout. <ko>cubemap projection type 레이아웃</ko>\n   * @param {string} [param.stereoFormat=\"3dv\"] Contents format of the stereoscopic equirectangular projection. See {@link eg.view360.PanoViewer.STEREO_FORMAT}.<ko>Stereoscopic equirectangular projection type의 콘텐츠 포맷을 설정한다. {@link eg.view360.PanoViewer.STEREO_FORMAT} 참조.</ko>\n   * @param {boolean} [param.isVideo=false] Whether the given `imaage` is video or not.<ko>이미지가 비디오인지 여부</ko>\n   *\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * ```\n   * panoViewer.setImage(\"/path/to/image/image.png\", {\n   *     projectionType: eg.view360.PanoViewer.PROJECTION_TYPE.CUBEMAP\n   * });\n   * ```\n   */\n  public setImage(image: string | HTMLElement | { src: string; type: string; }, param: Partial<{\n    projectionType: PanoViewer[\"_projectionType\"];\n    cubemapConfig: PanoViewer[\"_cubemapConfig\"];\n    stereoFormat: PanoViewer[\"_stereoFormat\"];\n    isVideo: boolean;\n  }> = {}) {\n    const cubemapConfig = {\n      ...{\n        order: \"RLUDBF\",\n        tileConfig: {\n          flipHorizontal: false,\n          rotation: 0\n        }\n      }, ...param.cubemapConfig\n    };\n    const stereoFormat = param.stereoFormat || STEREO_FORMAT.TOP_BOTTOM;\n    const isVideo = !!(param.isVideo);\n\n    if (this._image && this._isVideo !== isVideo) {\n      /* eslint-disable no-console */\n      console.warn(\"PanoViewer is not currently supporting content type changes. (Image <--> Video)\");\n      /* eslint-enable no-console */\n      return this;\n    }\n\n    if (image) {\n      this._image = image as HTMLImageElement;\n      this._isVideo = isVideo;\n      this._projectionType = param.projectionType || PROJECTION_TYPE.EQUIRECTANGULAR;\n      this._cubemapConfig = cubemapConfig;\n      this._stereoFormat = stereoFormat;\n\n      this._deactivate();\n      this._initRenderer(this._yaw, this._pitch, this._fov, this._projectionType, this._cubemapConfig);\n    }\n\n    return this;\n  }\n\n  /**\n   * Set whether the renderer always updates the texture and renders.\n   * @ko 렌더러가 항상 텍스쳐를 갱신하고 화면을 렌더링 할지 여부를 설정할 수 있습니다.\n   * @param doUpdate When true viewer will always update texture and render, when false viewer will not update texture and render only camera config is changed.<ko>true면 항상 텍스쳐를 갱신하고 화면을 그리는 반면, false면 텍스쳐 갱신은 하지 않으며, 카메라 요소에 변화가 있을 때에만 화면을 그립니다.</ko>\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public keepUpdate(doUpdate: boolean) {\n    this._photoSphereRenderer!.keepUpdate(doUpdate);\n    return this;\n  }\n\n  /**\n   * Get the current projection type (equirectangular/cube)\n   * @ko 현재 프로젝션 타입(Equirectangular 혹은 Cube)을 반환합니다.\n   * @return {@link eg.view360.PanoViewer.PROJECTION_TYPE}\n   */\n  public getProjectionType() {\n    return this._projectionType;\n  }\n\n  /**\n   * Activate the device's motion sensor, and return the Promise whether the sensor is enabled\n   * If it's iOS13+, this method must be used in the context of user interaction, like onclick callback on the button element.\n   * @ko 디바이스의 모션 센서를 활성화하고, 활성화 여부를 담는 Promise를 리턴합니다.\n   * iOS13+일 경우, 사용자 인터렉션에 의해서 호출되어야 합니다. 예로, 버튼의 onclick 콜백과 같은 콘텍스트에서 호출되어야 합니다.\n   * @return Promise containing nothing when resolved, or string of the rejected reason when rejected.<ko>Promise. resolve되었을 경우 아무것도 반환하지 않고, reject되었을 경우 그 이유를 담고있는 string을 반환한다.</ko>\n   */\n  public enableSensor() {\n    return new Promise((resolve, reject) => {\n      if (DeviceMotionEvent && typeof DeviceMotionEvent.requestPermission === \"function\") {\n        DeviceMotionEvent.requestPermission().then(permissionState => {\n          if (permissionState === \"granted\") {\n            resolve();\n          } else {\n            reject(new Error(\"permission denied\"));\n          }\n        }).catch(e => {\n          // This can happen when this method wasn't triggered by user interaction\n          reject(e);\n        });\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Disable the device's motion sensor.\n   * @ko 디바이스의 모션 센서를 비활성화합니다.\n   * @deprecated\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public disableSensor() {\n    return this;\n  }\n\n  /**\n   * Switch to VR stereo rendering mode which uses WebXR / WebVR API (WebXR is preferred).\n   * This method must be used in the context of user interaction, like onclick callback on the button element.\n   * It can be rejected when an enabling device sensor fails or image/video is still loading(\"ready\" event not triggered).\n   * @ko WebXR / WebVR API를 사용하는 VR 스테레오 렌더링 모드로 전환합니다. (WebXR을 더 선호합니다)\n   * 이 메소드는 사용자 인터렉션에 의해서 호출되어야 합니다. 예로, 버튼의 onclick 콜백과 같은 콘텍스트에서 호출되어야 합니다.\n   * 디바이스 센서 활성화에 실패시 혹은 아직 이미지/비디오가 로딩중인 경우(\"ready\"이벤트가 아직 트리거되지 않은 경우)에는 Promise가 reject됩니다.\n   * @param {object} [options={}] Additional options for WebXR session, see {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit}.<ko>WebXR용 추가 옵션, {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit}을 참조해주세요.</ko>\n   * @return Promise containing either a string of resolved reason or an Error instance of rejected reason.<ko>Promise가 resolve된 이유(string) 혹은 reject된 이유(Error)</ko>\n   */\n  public enterVR(options: {\n    requiredFeatures?: any[];\n    optionalFeatures?: any[];\n    [key: string]: any;\n  } = {}): globalThis.Promise<string> {\n    if (!this._isReady) {\n      return Promise.reject(new Error(\"PanoViewer is not ready to show image.\")) as any;\n    }\n\n    return new Promise((resolve, reject) => {\n      this.enableSensor()\n        .then(() => this._photoSphereRenderer!.enterVR(options))\n        .then((res: string) => resolve(res))\n        .catch(e => reject(e));\n    }) as any;\n  }\n\n  /**\n   * Exit VR stereo rendering mode.\n   * @ko VR 스테레오 렌더링 모드에서 일반 렌더링 모드로 전환합니다.\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public exitVR() {\n    this._photoSphereRenderer!.exitVR();\n    return this;\n  }\n\n  /**\n   * When set true, enables zoom with the wheel or pinch gesture. However, in the case of touch, pinch works only when the touchDirection setting is {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL}.\n   * @ko true 로 설정 시 휠 혹은 집기 동작으로 확대/축소 할 수 있습니다. false 설정 시 확대/축소 기능을 비활성화 합니다. 단, 터치인 경우 touchDirection 설정이 {@link eg.view360.PanoViewer.TOUCH_DIRECTION.ALL} 인 경우에만 pinch 가 동작합니다.\n   * @param useZoom\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public setUseZoom(useZoom: boolean): this {\n    if (typeof useZoom === \"boolean\") {\n      this._yawPitchControl!.option(\"useZoom\", useZoom);\n    }\n\n    return this;\n  }\n\n  /**\n   * When true, enables the keyboard move key control: awsd, arrow keys\n   * @ko true이면 키보드 이동 키 컨트롤을 활성화합니다. (awsd, 화살표 키)\n   * @param useKeyboard\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public setUseKeyboard(useKeyboard: boolean): this {\n    this._yawPitchControl!.option(\"useKeyboard\", useKeyboard);\n    return this;\n  }\n\n  /**\n   * Enables control through device motion. (\"none\", \"yawPitch\", \"VR\")\n   * @ko 디바이스 움직임을 통한 컨트롤을 활성화 합니다. (\"none\", \"yawPitch\", \"VR\")\n   * @param gyroMode {@link eg.view360.PanoViewer.GYRO_MODE}\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * ```\n   * panoViewer.setGyroMode(\"yawPitch\");\n   * //equivalent\n   * panoViewer.setGyroMode(eg.view360.PanoViewer.GYRO_MODE.YAWPITCH);\n   * ```\n   */\n  public setGyroMode(gyroMode: PanoViewer[\"_gyroMode\"]) {\n    this._yawPitchControl!.option(\"gyroMode\", gyroMode);\n    return this;\n  }\n\n  /**\n   * Set the range of controllable FOV values\n   * @ko 제어 가능한 FOV 구간을 설정합니다.\n   * @param range\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * panoViewer.setFovRange([50, 90]);\n   */\n  public setFovRange(range: number[]) {\n    this._yawPitchControl!.option(\"fovRange\", range);\n    return this;\n  }\n\n  /**\n   * Get the range of controllable FOV values\n   * @ko 제어 가능한 FOV 구간을 반환합니다.\n   * @return FOV range\n   * @example\n   * var range = panoViewer.getFovRange(); // [50, 90]\n   */\n  public getFovRange(): [number, number] {\n    return this._yawPitchControl!.option(\"fovRange\") as [number, number];\n  }\n\n  /**\n   * Update size of canvas element by it's container element's or specified size. If size is not specified, the size of the container area is obtained and updated to that size.\n   * @ko 캔버스 엘리먼트의 크기를 컨테이너 엘리먼트의 크기나 지정된 크기로 업데이트합니다. 만약 size 가 지정되지 않으면 컨테이너 영역의 크기를 얻어와 해당 크기로 갱신합니다.\n   * @param {object} [size]\n   * @param {number} [size.width=width of the container]\n   * @param {number} [size.height=height of the container]\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public updateViewportDimensions(size: Partial<{\n    width: number;\n    height: number;\n  }> = {}): this {\n    if (!this._isReady) {\n      return this;\n    }\n\n    let containerSize;\n\n    if (size.width === undefined || size.height === undefined) {\n      containerSize = window.getComputedStyle(this._container);\n    }\n\n    const width = size.width || parseInt(containerSize.width, 10);\n    const height = size.height || parseInt(containerSize.height, 10);\n\n    // Skip if viewport is not changed.\n    if (width === this._width && height === this._height) {\n      return this;\n    }\n\n    this._width = width;\n    this._height = height;\n\n    this._aspectRatio = width / height;\n    this._photoSphereRenderer!.updateViewportDimensions(width, height);\n    this._yawPitchControl!.option(\"aspectRatio\", this._aspectRatio);\n    this._yawPitchControl!.updatePanScale({height});\n\n    this.lookAt({}, 0);\n    return this;\n  }\n\n  /**\n   * Get the current field of view(FOV)\n   * @ko 현재 field of view(FOV) 값을 반환합니다.\n   */\n  public getFov(): number {\n    return this._fov;\n  }\n\n  /**\n   * Get current yaw value\n   * @ko 현재 yaw 값을 반환합니다.\n   */\n  public getYaw() {\n    return this._yaw;\n  }\n\n  /**\n   * Get current pitch value\n   * @ko 현재 pitch 값을 반환합니다.\n   */\n  public getPitch() {\n    return this._pitch;\n  }\n\n  /**\n   * Get the range of controllable Yaw values\n   * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n   */\n  public getYawRange(): [number, number] {\n    return this._yawPitchControl!.option(\"yawRange\") as [number, number];\n  }\n\n  /**\n   * Get the range of controllable Pitch values\n   * @ko 컨트롤 가능한 Pitch 구간을 가져옵니다.\n   */\n  public getPitchRange(): [number, number] {\n    return this._yawPitchControl!.option(\"pitchRange\") as [number, number];\n  }\n\n  /**\n   * Set the range of controllable yaw\n   * @ko 컨트롤 가능한 Yaw 구간을 반환합니다.\n   * @param {number[]} range\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * panoViewer.setYawRange([-90, 90]);\n   */\n  public setYawRange(yawRange: number[]) {\n    this._yawPitchControl!.option(\"yawRange\", yawRange);\n    return this;\n  }\n\n  /**\n   * Set the range of controllable Pitch values\n   * @ko 컨트롤 가능한 Pitch 구간을 설정합니다.\n   * @param {number[]} range\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * panoViewer.setPitchRange([-40, 40]);\n   */\n  public setPitchRange(pitchRange: number[]) {\n    this._yawPitchControl!.option(\"pitchRange\", pitchRange);\n    return this;\n  }\n\n  /**\n   * Specifies whether to display the pole by limiting the pitch range. If it is true, pole point can be displayed. If it is false, it is not displayed.\n   * @ko pitch 범위를 제한하여 극점을 표시할지를 지정합니다. true 인 경우 극점까지 표현할 수 있으며 false 인 경우 극점까지 표시하지 않습니다.\n   * @param showPolePoint\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public setShowPolePoint(showPolePoint: boolean) {\n    this._yawPitchControl!.option(\"showPolePoint\", showPolePoint);\n    return this;\n  }\n\n  /**\n   * Set a new view by setting camera configuration. Any parameters not specified remain the same.\n   * @ko 카메라 설정을 지정하여 화면을 갱신합니다. 지정되지 않은 매개 변수는 동일하게 유지됩니다.\n   * @param {object} orientation\n   * @param {number} orientation.yaw Target yaw in degree <ko>목표 yaw (degree 단위)</ko>\n   * @param {number} orientation.pitch Target pitch in degree <ko>목표 pitch (degree 단위)</ko>\n   * @param {number} orientation.fov Target vertical fov in degree <ko>목표 수직 fov (degree 단위)</ko>\n   * @param {number} duration Animation duration in milliseconds <ko>애니메이션 시간 (밀리 초)</ko>\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   * @example\n   * ```\n   * // Change the yaw angle (absolute angle) to 30 degrees for one second.\n   * panoViewer.lookAt({yaw: 30}, 1000);\n   * ```\n   */\n  public lookAt(orientation: Partial<{\n    yaw: number;\n    pitch: number;\n    fov: number;\n  }>, duration: number = 0) {\n    if (!this._isReady) {\n      return this;\n    }\n\n    const yaw = orientation.yaw !== undefined ? orientation.yaw : this._yaw;\n    const pitch = orientation.pitch !== undefined ? orientation.pitch : this._pitch;\n    const pitchRange = this._yawPitchControl!.option(\"pitchRange\");\n    const verticalAngleOfImage = pitchRange[1] - pitchRange[0];\n    let fov = orientation.fov !== undefined ? orientation.fov : this._fov;\n\n    if (verticalAngleOfImage < fov) {\n      fov = verticalAngleOfImage;\n    }\n\n    this._yawPitchControl!.lookAt({yaw, pitch, fov}, duration);\n\n    if (duration === 0) {\n      this._photoSphereRenderer!.renderWithYawPitch(yaw, pitch, fov);\n    }\n    return this;\n  }\n\n  /**\n   * Set touch direction by which user can control.\n   * @ko 사용자가 조작가능한 터치 방향을 지정합니다.\n   * @param direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n   * @return PanoViewer instance\n   * @example\n   * ```\n   * panoViewer = new PanoViewer(el);\n   * // Limit the touch direction to the yaw direction only.\n   * panoViewer.setTouchDirection(eg.view360.PanoViewer.TOUCH_DIRECTION.YAW);\n   * ```\n   */\n  public setTouchDirection(direction: number): this {\n    if (PanoViewer._isValidTouchDirection(direction)) {\n      this._yawPitchControl!.option(\"touchDirection\", direction);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns touch direction by which user can control\n   * @ko 사용자가 조작가능한 터치 방향을 반환한다.\n   * @return direction of the touch. {@link eg.view360.PanoViewer.TOUCH_DIRECTION}<ko>컨트롤 가능한 방향 {@link eg.view360.PanoViewer.TOUCH_DIRECTION}</ko>\n   * @example\n   * ```\n   * panoViewer = new PanoViewer(el);\n   * // Returns the current touch direction.\n   * var dir = panoViewer.getTouchDirection();\n   * ```\n   */\n  public getTouchDirection(): number {\n    return this._yawPitchControl!.option(\"touchDirection\") as number;\n  }\n\n  /**\n   * Destroy viewer. Remove all registered event listeners and remove viewer canvas.\n   * @ko 뷰어 인스턴스를 해제합니다. 모든 등록된 이벤트리스너를 제거하고 뷰어 캔버스를 삭제합니다.\n   * @return PanoViewer instance<ko>PanoViewer 인스턴스</ko>\n   */\n  public destroy(): this {\n    this._deactivate();\n\n    if (this._yawPitchControl) {\n      this._yawPitchControl.destroy();\n      this._yawPitchControl = null;\n    }\n\n    return this;\n  }\n\n  // TODO: Remove parameters as they're just using private values\n  private _initRenderer(\n    yaw: number,\n    pitch: number,\n    fov: number,\n    projectionType: PanoViewer[\"_projectionType\"],\n    cubemapConfig: PanoViewer[\"_cubemapConfig\"]\n  ) {\n    this._photoSphereRenderer = new PanoImageRenderer(\n      this._image,\n      this._width,\n      this._height,\n      this._isVideo,\n      {\n        initialYaw: yaw,\n        initialPitch: pitch,\n        fieldOfView: fov,\n        imageType: projectionType,\n        cubemapConfig,\n        stereoFormat: this._stereoFormat\n      },\n    );\n    this._photoSphereRenderer.setYawPitchControl(this._yawPitchControl!);\n\n    this._bindRendererHandler();\n\n    this._photoSphereRenderer\n      .bindTexture()\n      .then(() => this._activate())\n      .catch(() => {\n        this.trigger(EVENTS.ERROR, {\n          type: ERROR_TYPE.FAIL_BIND_TEXTURE,\n          message: \"failed to bind texture\"\n        });\n      });\n  }\n\n  /**\n   * @private\n   * update values of YawPitchControl if needed.\n   * For example, In Panorama mode, initial fov and pitchRange is changed by aspect ratio of image.\n   *\n   * This function should be called after isReady status is true.\n   */\n  private _updateYawPitchIfNeeded() {\n    if (this._projectionType === PanoViewer.ProjectionType.PANORAMA) {\n      // update fov by aspect ratio\n      const image = this._photoSphereRenderer!.getContent()! as HTMLImageElement;\n      let imageAspectRatio = image.naturalWidth / image.naturalHeight;\n      let yawSize;\n      let maxFov;\n\n      // If height is larger than width, then we assume it's rotated by 90 degree.\n      if (imageAspectRatio < 1) {\n        // So inverse the aspect ratio.\n        imageAspectRatio = 1 / imageAspectRatio;\n      }\n\n      if (imageAspectRatio < 6) {\n        yawSize = mathUtil.toDegree(imageAspectRatio);\n        // 0.5 means ratio of half height of cylinder(0.5) and radius of cylider(1). 0.5/1 = 0.5\n        maxFov = mathUtil.toDegree(Math.atan(0.5)) * 2;\n      } else {\n        yawSize = 360;\n        maxFov = (360 / imageAspectRatio); // Make it 5 fixed as axes does.\n      }\n\n      // console.log(\"_updateYawPitchIfNeeded\", maxFov, \"aspectRatio\", image.naturalWidth, image.naturalHeight, \"yawSize\", yawSize);\n      const minFov = (this._yawPitchControl!.option(\"fovRange\"))[0];\n\n      // this option should be called after fov is set.\n      this._yawPitchControl!.option({\n        \"fov\": maxFov, /* parameter for internal validation for pitchrange */\n        \"yawRange\": [-yawSize / 2, yawSize / 2],\n        \"pitchRange\": [-maxFov / 2, maxFov / 2],\n        \"fovRange\": [minFov, maxFov]\n      });\n      this.lookAt({fov: maxFov});\n    }\n  }\n\n  private\t_bindRendererHandler() {\n    this._photoSphereRenderer!.on(PanoImageRenderer.EVENTS.ERROR, e => {\n      this.trigger(EVENTS.ERROR, e);\n    });\n\n    this._photoSphereRenderer!.on(PanoImageRenderer.EVENTS.RENDERING_CONTEXT_LOST, e => {\n      this._deactivate();\n      this.trigger(EVENTS.ERROR, {\n        type: ERROR_TYPE.RENDERING_CONTEXT_LOST,\n        message: \"webgl rendering context lost\"\n      });\n    });\n  }\n\n  private _initYawPitchControl(yawPitchConfig: Partial<YawPitchControlOptions>) {\n    this._yawPitchControl = new YawPitchControl(yawPitchConfig);\n\n    this._yawPitchControl.on(EVENTS.ANIMATION_END, e => {\n      this.trigger(EVENTS.ANIMATION_END, e);\n    });\n\n    this._yawPitchControl.on(\"change\", e => {\n      this._yaw = e.yaw;\n      this._pitch = e.pitch;\n      this._fov = e.fov;\n      this._quaternion = e.quaternion;\n\n      this.trigger(EVENTS.VIEW_CHANGE, e);\n    });\n  }\n\n  private _activate() {\n    this._photoSphereRenderer!.attachTo(this._container);\n    this._yawPitchControl!.enable();\n\n    this.updateViewportDimensions();\n\n    this._isReady = true;\n\n    // update yawPitchControl after isReady status is true.\n    this._updateYawPitchIfNeeded();\n\n    this.trigger(EVENTS.READY);\n    this._photoSphereRenderer!.startRender();\n  }\n\n  /**\n   * Destroy webgl context and block user interaction and stop rendering\n   */\n  private _deactivate() {\n    if (this._isReady) {\n      this._photoSphereRenderer!.stopRender();\n      this._yawPitchControl!.disable();\n      this._isReady = false;\n    }\n\n    if (this._photoSphereRenderer) {\n      this._photoSphereRenderer.destroy();\n      this._photoSphereRenderer = null;\n    }\n  }\n}\n\nexport default PanoViewer;\n\n","import Component from \"@egjs/component\";\nimport { TRANSFORM, SUPPORT_WILLCHANGE } from \"../utils/browserFeature\";\nimport { VERSION } from \"../version\";\n\nexport type SpriteImageEvent = {\n  /**\n   * Events that occur when component loading is complete\n   * @ko 컴포넌트 로딩이 완료되면 발생하는 이벤트\n   * @name eg.view360.SpriteImage#load\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {HTMLElement} param.target The target element for which to display the image <ko>이미지를 보여줄 대상 엘리먼트</ko>\n   * @param {HTMLElement} param.bgElement Generated background image element <ko>생성된 background 이미지 엘리먼트</ko>\n   *\n   * @example\n   *\n   * sprites.on({\n   *  \"load\" : function(evt) {\n   *    console.log(\"load event fired - e.target\", e.target, \"e.bgElement\", e.bgElement);\n   *  }\n   * });\n   */\n  load: {\n    target: HTMLElement;\n    bgElement: HTMLDivElement;\n  }\n  /**\n   * An event that occurs when the image index is changed by the user's left / right panning\n   * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n   * @name eg.view360.SpriteImage#imageError\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.imageUrl User-specified image URL <ko>사용자가 지정한 이미지 URL</ko>\n   *\n   * @example\n   *\n   * sprites.on({\n   *  \"imageError\" : function(evt) {\n   *    // Error handling\n   *    console.log(e.imageUrl);\n   *  }\n   * });\n   */\n  imageError: {\n    imageUrl?: string;\n  }\n}\n\n/**\n * @memberof eg.view360\n * @extends eg.Component\n * SpriteImage\n */\nclass SpriteImage extends Component<SpriteImageEvent> {\n  public static VERSION = VERSION;\n\n  private _el: HTMLElement;\n  private _rowCount: number;\n  private _colCount: number;\n  private _totalCount: number;\n  private _width: number | string;\n  private _height: number | string;\n  private _autoHeight: boolean;\n  private _colRow: number[];\n  private _image: HTMLImageElement;\n  private _bg: HTMLDivElement;\n  private _autoPlayReservedInfo: { interval: number; playCount: number; } | null;\n  private _autoPlayTimer: number;\n\n  /**\n   * @class eg.view360.SpriteImage\n   * @classdesc A module that displays a single or continuous image of any one of the \"sprite images\". SpinViewer internally uses SpriteImage to show each frame of the sprite image.\n   * @ko 스프라이트 이미지 중 임의의 한 프레임을 단발성 혹은 연속적으로 보여주는 컴포넌트입니다. SpinViewer 는 내부적으로 SpriteImage 를 사용하여 스프라이트 이미지의 각 프레임을 보여줍니다.\n   * @extends eg.Component\n   *\n   * @param {HTMLElement} element The element to show the image <ko>이미지를 보여줄 대상 요소</ko>\n   * @param {Object} options The option object<ko>파라미터 객체</ko>\n   * @param {String} options.imageUrl The url of the sprite image <ko>스프라이트 이미지의 url</ko>\n   * @param {Number} [options.rowCount=1] Number of horizontal frames in the sprite image <ko>스프라이트 이미지의 가로 프레임 갯수</ko>\n   * @param {Number} [options.colCount=1] Number of vertical frames in the sprite image <ko>스프라이트 이미지의 세로 프레임 갯수</ko>\n   * @param {Number|String} [options.width=\"auto\"] The width of the target element to show the image <ko>이미지를 보여줄 대상 요소의 너비</ko>\n   * @param {Number|String} [options.height=\"auto\"] The height of the target element to show the image <ko>이미지를 보여줄 대상 요소의 높이</ko>\n   * @param {Boolean} [options.autoHeight=true] Whether to automatically set the height of the image area to match the original image's proportion <ko>원본 이미지 비율에 맞게 이미지 영역의 높이를 자동으로 설정할지 여부</ko>\n   * @param {Number[]} [options.colRow=[0, 0]] The column, row coordinates of the first frame of the sprite image (based on 0 index) <ko> 스프라이트 이미지 중 처음 보여줄 프레임의 (column, row) 좌표 (0 index 기반)</ko>\n   * @param {Number} [options.frameIndex=0] frameIndex specifies the index of the frame to be displayed in the \"Sprite image\". The frameIndex order is zero-based and indexed in Z form (left-to-right, top-to-bottom, and newline again from left to right).<br>- colRow is equivalent to frameIndex. However, if colRow is specified at the same time, colRow takes precedence.<ko>스프라이트 이미지 중에서 보여질 프레임의 인덱스를 지정합니다. frameIndex 순서는 0부터 시작하며 Z 형태(왼쪽에서 오른쪽, 위에서 아래, 개행 시 다시 왼쪽 부터)로 인덱싱합니다.<br>- colRow 는 frameIndex 와 동일한 기능을 합니다. 단, colRow 가 동시에 지정된 경우 colRow 가 우선합니다.</ko>\n   * @param {Number} [options.scale=1] Spin scale (The larger the spin, the more).<ko>Spin 배율 (클 수록 더 많이 움직임)</ko>\n   *\n   * @support {\"ie\": \"9+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n   * @example\n   *\n   * // Initialize SpriteImage\n   *\n   * var el = document.getElementById(\"image-div\");\n   * var sprites = new eg.view360.SpriteImage(el, {\n   * \timageUrl: \"/img/bag360.jpg\", // required\n   * \trowCount: 24\n   * });\n   */\n  constructor(element: HTMLElement, options: Partial<{\n    imageUrl: string;\n    rowCount: number;\n    colCount: number;\n    width: number | string;\n    height: number | string;\n    autoHeight: boolean;\n    colRow: number[];\n    frameIndex: number;\n    scale: number;\n  }> = {}) {\n    super();\n    const opt = options || {};\n\n    this._el = element;\n    this._rowCount = opt.rowCount || 1;\n    this._colCount = opt.colCount || 1;\n    this._totalCount = this._rowCount * this._colCount; // total frames\n    this._width = opt.width || \"auto\";\n    this._height = opt.height || \"auto\";\n    this._autoHeight = opt.autoHeight != null ? opt.autoHeight : true; // If autoHeight is specified, _height will be overwritten.\n    this._colRow = [0, 0];\n\n    if (opt.colRow) {\n      this._colRow = opt.colRow;\n    } else if (opt.frameIndex) {\n      this.setFrameIndex(opt.frameIndex);\n    }\n\n    this._el.style.width = SpriteImage._getSizeString(this._width);\n    this._el.style.height = SpriteImage._getSizeString(this._height);\n\n    if (!opt.imageUrl) {\n      setTimeout(() => {\n        this.trigger(\"imageError\", {\n          imageUrl: opt.imageUrl\n        });\n      }, 0);\n      return;\n    }\n\n    this._image = new Image();\n    /**\n     * Event\n     */\n    this._image.onload = () => {\n      this._bg = SpriteImage._createBgDiv(\n        this._image, this._rowCount, this._colCount, this._autoHeight);\n      this._el.appendChild(this._bg);\n      this.setColRow(this._colRow[0], this._colRow[1]);\n\n      this.trigger(\"load\", {\n        target: this._el,\n        bgElement: this._bg\n      });\n\n      if (this._autoPlayReservedInfo) {\n        this.play(this._autoPlayReservedInfo);\n        this._autoPlayReservedInfo = null;\n      }\n    };\n\n    this._image.onerror = e => {\n      this.trigger(\"imageError\", {\n        imageUrl: opt.imageUrl\n      });\n    };\n\n    this._image.src = opt.imageUrl;\n  }\n\n  private static _createBgDiv(img: HTMLImageElement, rowCount: number, colCount: number, autoHeight: boolean) {\n    const el = document.createElement(\"div\");\n\n    el.style.position = \"relative\";\n    el.style.overflow = \"hidden\";\n\n    img.style.position = \"absolute\";\n    img.style.width = `${colCount * 100}%`;\n    img.style.height = `${rowCount * 100}%`;\n    /** Prevent image from being dragged on IE10, IE11, Safari especially */\n    img.ondragstart = () => (false); // img.style.pointerEvents = \"none\";\n    // Use hardware accelerator if available\n    if (SUPPORT_WILLCHANGE) {\n      (img.style.willChange = \"transform\");\n    }\n\n    el.appendChild(img);\n\n    const unitWidth = img.width / colCount;\n    const unitHeight = img.height / rowCount;\n\n    if (autoHeight) {\n      const r = unitHeight / unitWidth;\n\n      el.style.paddingBottom = `${r * 100}%`;\n    } else {\n      el.style.height = \"100%\";\n    }\n\n    return el;\n  }\n\n  private static _getSizeString(size) {\n    if (typeof size === \"number\") {\n      return `${size}px`;\n    }\n\n    return size;\n  }\n\n  /**\n   * Specifies the frameIndex of the frame to be shown in the sprite image.\n   * @ko 스프라이트 이미지 중 보여질 프레임의 frameIndex 값을 지정\n   * @method eg.view360.SpriteImage#setFrameIndex\n   * @param {Number} frameIndex frame index of a frame<ko>프레임의 인덱스</ko>\n   *\n   * @example\n   *\n   * sprites.setFrameIndex(0, 1);// col = 0, row = 1\n   */\n  public setFrameIndex(index: number) {\n    const colRow = this.toColRow(index);\n\n    this.setColRow(colRow[0], colRow[1]);\n  }\n\n  /**\n   * Returns the frameIndex of the frame to be shown in the sprite image.\n   * @ko 스프라이트 이미지 중 보여지는 프레임의 index 값을 반환\n   * @method eg.view360.SpriteImage#getFrameIndex\n   * @return {Number} frame index <ko>frame 인덱스</ko>\n   *\n   * @example\n   *\n   * var frameIndex = sprites.getFrameIndex(); // eg. frameIndex = 1\n   *\n   */\n  public getFrameIndex() {\n    return this._colRow[1] * this._colCount + this._colRow[0];\n  }\n\n  /**\n   * Specifies the col and row values of the frame to be shown in the sprite image.\n   * @ko 스프라이트 이미지 중 보여질 프레임의 col, row 값을 지정\n   * @method eg.view360.SpriteImage#setColRow\n   * @param {Number} col Column number of a frame<ko>프레임의 행값</ko>\n   * @param {Number} row Row number of a frame<ko>프레임의 열값</ko>\n   *\n   * @example\n   *\n   * sprites.setlColRow(1, 2); // col = 1, row = 2\n   */\n  public setColRow(col: number, row: number) {\n    if (row > this._rowCount - 1 || col > this._colCount - 1) {\n      return;\n    }\n\n    if (this._image && TRANSFORM) {\n      // NOTE: Currently, do not apply translate3D for using layer hack. Do we need layer hack for old browser?\n      this._image.style[TRANSFORM] = `translate(${-(col / this._colCount * 100)}%, ${-(row / this._rowCount * 100)}%)`;\n    }\n\n    this._colRow = [col, row];\n  }\n\n  /**\n   * Returns the col and row values of the frame to be shown in the sprite image.\n   * @ko 스프라이트 이미지 중 보여지는 프레임의 col, row 값을환반환\n   * @method eg.view360.SpriteImage#gelColRow\n   * @return {Number[]} Array containing col, row<ko>col, row 정보를 담는 배열</ko>\n   *\n   * @example\n   *\n   * var colRow = sprites.getlColRow();\n   * // colRow = [1, 2] - index of col is 1, index of row is 2\n   *\n   */\n  public getColRow() {\n    return this._colRow;\n  }\n\n  /**\n   * Stop playing\n   * @ko play 되고 있던 프레임 재생을 중지합니다.\n   * @method eg.view360.SpriteImage#stop\n   *\n   * @example\n   *\n   * viewer.stop();\n   *\n   */\n  public stop() {\n    if (this._autoPlayTimer) {\n      clearInterval(this._autoPlayTimer);\n      this._autoPlayTimer = -1;\n    }\n  }\n\n  /**\n   * Switches frames sequentially in the 'interval' starting from the currently displayed frame and plays all frames by 'playCount'.\n   * @ko 현재 보여지고 있는 프레임을 시작으로 'interval' 간격으로 순차적으로 프레임을 전환하며 모든 프레임을 'playCount' 만큼 재생한다.\n   * @method eg.view360.SpriteImage#play\n   * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n   * @param {Number} [param.interval=1000 / totalFrameCount] Interframe Interval - in milliseconds<ko>프레임간 간격 - 밀리세컨드 단위</ko>\n   * @param {Number} [param.playCount=0] PlayCount = 1 in which all frames are reproduced once, and playCount = n in which all frames are repeated n times. playCount = 0 in which all frames are repeated infinitely<ko>모든 프레임을 1회씩 재생한 것이 playCount = 1, 모든 프레임을 n 회 재상한 것이 playCount = n 이 된다. 0 dms 무한반복</ko>\n   *\n   * @example\n   *\n   * viewer.play({angle: 16, playCount: 1});\n   *\n   */\n  public play({ interval, playCount } = { interval: 1000 / this._totalCount, playCount: 0 }) {\n    if (!this._bg) {\n      this._autoPlayReservedInfo = {interval, playCount};\n      return;\n    }\n\n    if (this._autoPlayTimer) {\n      clearInterval(this._autoPlayTimer);\n      this._autoPlayTimer = -1;\n    }\n\n    let frameIndex = this.getFrameIndex();\n    let count = 0;\n    let frameCount = 0; // for checking 1 cycle\n\n    this._autoPlayTimer = window.setInterval(() => {\n      frameIndex %= this._totalCount;\n      const colRow = this.toColRow(frameIndex);\n\n      this.setColRow(colRow[0], colRow[1]);\n      frameIndex++;\n\n      // Done 1 Cycle?\n      if (++frameCount === this._totalCount) {\n        frameCount = 0;\n        count++;\n      }\n\n      if (playCount > 0 && count === playCount) {\n        clearInterval(this._autoPlayTimer);\n      }\n    }, interval);\n  }\n\n  public toColRow(frameIndex: number) {\n    const colCount = this._colCount;\n    const rowCount = this._rowCount;\n\n    if (frameIndex < 0) {\n      return [0, 0];\n    } else if (frameIndex >= this._totalCount) {\n      return [colCount - 1, rowCount - 1];\n    }\n\n    const col = frameIndex % colCount;\n    const row = Math.floor(frameIndex / colCount);\n\n    // console.log(frameIndex, col, row);\n    return [col, row];\n  }\n}\n\nexport default SpriteImage;\n","import Component from \"@egjs/component\";\nimport Axes, { PanInput } from \"@egjs/axes\";\nimport SpriteImage from \"./SpriteImage\";\nimport { VERSION } from \"../version\";\n\nconst DEFAULT_PAN_SCALE = 0.21;\n\nexport type SpinViewerEvent = {\n  /**\n   * Events that occur when component loading is complete\n   * @ko 컴포넌트 로딩이 완료되면 발생하는 이벤트\n   * @name eg.view360.SpinViewer#load\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {HTMLElement} param.target The target element for which to display the image <ko>이미지를 보여줄 대상 엘리먼트</ko>\n   * @param {HTMLElement} param.bgElement Generated background image element <ko>생성된 background 이미지 엘리먼트</ko>\n   *\n   * @example\n   *\n   * viwer.on({\n   *  \"load\" : function(evt) {\n   *    this.spinBy(360, {duration: 300});\n   *  }\n   * });\n   */\n  load: {\n    target: HTMLElement;\n    bgElement: HTMLDivElement;\n  }\n  /**\n   * An event that occurs when the image index is changed by the user's left / right panning\n   * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n   * @name eg.view360.SpinViewer#imageError\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.imageUrl User-specified image URL <ko>사용자가 지정한 이미지 URL</ko>\n   *\n   * @example\n   *\n   * viewer.on({\n   *  \"imageError\" : function(evt) {\n   *    // Error handling\n   *    console.log(e.imageUrl);\n   *  }\n   * });\n   */\n  imageError: {\n    imageUrl?: string;\n  };\n  /**\n   * An event that occurs when the image index is changed by the user's left / right panning\n   * @ko 사용자의 좌우 Panning 에 의해 이미지 인덱스가 변경되었을때 발생하는 이벤트\n   * @name eg.view360.SpinViewer#change\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {Number[]} param.colRow Column, row of the frame in the sprite image <ko>스프라이트 이미지 내 프레임의 column, row</ko>\n   * @param {Number} param.frameIndex Index value that is sequentially appended in Z direction based on col and row.<ko>col, row 를 기반으로 Z 방향으로 순차적으로 붙여지는 index 값</ko>\n   * @param {Number} param.angle The angle that is currently internally held at an angle between 0 and 359. (not a real product angle) <ko>0 ~ 359 범위의 각도로 현재 내부적으로 유지하고 있는 각도 (실제 이미지의 각도가 아님)</ko>\n   *\n   * @example\n   *\n   * viwer.on({\n   *  \"change\" : function(evt) {\n   *    console.log(event.frameIndex, event.colRow, event.angle);   // event.colRow = [0, 4] event.frameIndex = 4, event = 30\n   *  }\n   * });\n   */\n  change: {\n    colRow: number[];\n    frameIndex: number;\n    angle: number;\n  };\n  /**\n   * This event is fired when animation ends.\n   * @ko 에니메이션이 끝났을 때 발생하는 이벤트\n   * @name eg.view360.SpinViewer#animationEnd\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {Boolean} param.isTrusted true if an event was generated by the user action, or false if it was caused by a script or API call<ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   *\n   * viwer.on({\n   *  animationEnd\" : function(evt) {\n   *    // evt.isTrusted === true or false\n   *  }\n   * });\n   */\n  animationEnd: {\n    isTrusted: boolean;\n  }\n}\n\n/**\n * @memberof eg.view360\n * @extends eg.Component\n * SpinViewer\n */\nclass SpinViewer extends Component<SpinViewerEvent> {\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @static\n   * @example\n   * eg.view360.SpinViewer.VERSION;  // ex) 3.0.1\n   * @memberof eg.view360.SpinViewer\n   */\n  public static VERSION = VERSION;\n\n  private _el: HTMLElement;\n  private _sprites: SpriteImage;\n  private _axes: Axes;\n  private _panInput: PanInput;\n\n  private _scale: number;\n  private _panScale: number;\n  private _frameCount: number;\n\n  /**\n   * @classdesc A module used to displays each image sequentially according to the direction of the user's touch movement (left / right) of the sprite image that is collected by rotating the object.\n   * @ko 물체 주위를 회전하여 촬영한 이미지들을 모은 스프라이트 이미지를 사용자의 터치 이동 방향(좌 / 우) 에 따라 각 이미지들을 순차적으로 보여주는 컴포넌트입니다.\n   *\n   * @param {HTMLElement} element The element to show the image <ko>이미지를 보여줄 대상 요소</ko>\n   * @param {Object} options The option object<ko>파라미터 객체</ko>\n   * @param {String} options.imageUrl The url of the sprite image <ko>스프라이트 이미지의 url</ko>\n   * @param {Number} [options.rowCount=1] Number of horizontal frames in the sprite image <ko>스프라이트 이미지의 가로 프레임 갯수</ko>\n   * @param {Number} [options.colCount=1] Number of vertical frames in the sprite image <ko>스프라이트 이미지의 세로 프레임 갯수</ko>\n   * @param {Number|String} [options.width=\"auto\"] The width of the target element to show the image <ko>이미지를 보여줄 대상 요소의 너비</ko>\n   * @param {Number|String} [options.height=\"auto\"] The height of the target element to show the image <ko>이미지를 보여줄 대상 요소의 높이</ko>\n   * @param {Boolean} [options.autoHeight=true] Whether to automatically set the height of the image area to match the original image's proportion <ko>원본 이미지 비율에 맞게 이미지 영역의 높이를 자동으로 설정할지 여부</ko>\n   * @param {Number[]} [options.colRow=[0, 0]] The column, row coordinates of the first frame of the sprite image (based on 0 index) <ko> 스프라이트 이미지 중 처음 보여줄 프레임의 (column, row) 좌표 (0 index 기반)</ko>\n   * @param {Number} [options.scale=1] Spin scale (The larger the spin, the more).<ko>Spin 배율 (클 수록 더 많이 움직임)</ko>\n   * @support {\"ie\": \"9+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n   * @example\n   * ```\n   * // Initialize SpinViewer\n   * var el = document.getElementById(\"product-360\");\n   * var viewer = new eg.view360.SpinViewer(el, {\n   * \timageUrl: \"/img/bag360.jpg\", // required\n   * \trowCount: 24 //required\n   * });\n   * ```\n   */\n  constructor(element: HTMLElement, options: Partial<{\n    imageUrl: string;\n    rowCount: number;\n    colCount: number;\n    width: number | string;\n    height: number | string;\n    autoHeight: boolean;\n    colRow: number[];\n    scale: number;\n  }> = {}) {\n    super();\n\n    this._el = element;\n\n    const opt = {...options};\n    const colCount = opt.colCount || 1;\n    const rowCount = opt.rowCount || 1;\n\n    this._scale = (opt.scale || 1);\n    this._panScale = this._scale * DEFAULT_PAN_SCALE;\n\n    this._frameCount = colCount * rowCount;\n\n    // Init SpriteImage\n    this._sprites = new SpriteImage(element, opt).on({\n      \"load\": evt => {\n        this.trigger(\"load\", evt);\n      },\n      \"imageError\": evt => {\n        this.trigger(\"imageError\", {\n          imageUrl: evt.imageUrl\n        });\n      }\n    });\n\n    // Init Axes\n    this._panInput = new PanInput(this._el, {\n      scale: [this._panScale, this._panScale]\n    });\n    this._axes = new Axes({\n      angle: {\n        range: [0, 359],\n        circular: true\n      }\n    }).on({\n      \"change\": evt => {\n        const curr = Math.floor(evt.pos.angle / (360 / this._frameCount));\n        const frameIndex = this._frameCount - curr - 1;\n\n        this._sprites.setFrameIndex(frameIndex);\n\n        this.trigger(\"change\", {\n          frameIndex,\n          colRow: this._sprites.getColRow(),\n          angle: evt.pos.angle\n        });\n      },\n      \"animationEnd\": evt => {\n        this.trigger(\"animationEnd\", {\n          isTrusted: evt.isTrusted\n        });\n      }\n    });\n\n    this._axes.connect(\"angle\", this._panInput);\n  }\n\n  /**\n   * Set spin scale\n   * @ko scale 을 조정할 수 있는 함수\n   * @param {Number} scale Rotation multiples at spin, the larger the rotation<ko>Spin 시 회전 배수값, 커질 수록 더 많이 회전</ko>\n   *\n   * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n   *\n   * @example\n   * viewer.setScale(2);// It moves twice as much.\n   */\n  public setScale(scale: number) {\n    if (isNaN(scale) || scale < 0) {\n      return this;\n    }\n\n    this._scale = scale;\n    this._panScale = scale * DEFAULT_PAN_SCALE;\n    this._panInput.options.scale = [this._panScale, this._panScale];\n\n    return this;\n  }\n\n  /**\n   * Get spin scale\n   * @ko scale 값을 반환한다.\n   *\n   * @return {Number} Rotation multiples at spin, the larger the rotation<ko>Spin 시 회전 배수값, 커질 수록 더 많이 회전</ko>\n   *\n   * @example\n   * viewer.getScale();// It returns number\n   */\n  public getScale() {\n    return this._scale;\n  }\n\n  /**\n   * It gives the effect of rotating for a certain duration by the specified angle based on the current rotation angle.\n   * @ko 현재 회전 각도를 기준으로 지정된 각도(angle)만큼 일정 시간동안(duration) 회전하는 효과를 준다.\n   * @param {Number} [angle = 0] angle<ko>상대적 회전 각도</ko>\n   * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n   * @param {Number} [param.duration = 0] duration<ko>회전할 시간 - 밀리세컨드 단위</ko>\n   *\n   * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n   *\n   * @example\n   * viewer.spinBy(720, {duration: 500});\n   */\n  public spinBy(angle = 0, param = {duration: 0}) {\n    this._axes.setBy({angle}, param.duration);\n    return this;\n  }\n\n  /**\n   * It gives the effect of rotating for a certain duration (duration) by the specified angle (angle).\n   * @ko 지정된 각도(angle)만큼 일정 시간동안(duration) 회전하는 효과를 준다.\n   * @param {Number} [angle = 0] angle<ko>회전 각도</ko>\n   * @param {Object} param The parameter object<ko>파라미터 객체</ko>\n   * @param {Number} [param.duration = 0] duration<ko>회전할 시간 - 밀리세컨드 단위</ko>\n   *\n   * @return {Object} Instance of SpinViewer <ko>SpinViewer 인스턴스</ko>\n   *\n   * @example\n   * viewer.spinTo(30, {duration:100});\n   */\n  public spinTo(angle = 0, param = {duration: 0}) {\n    this._axes.setTo({angle}, param.duration);\n    return this;\n  }\n\n  /**\n   * Returns current angles\n   * @ko 현재 각도를 반환한다.\n   *\n   * @return {Number} Current angle <ko>현재 각도</ko>\n   */\n  public getAngle() {\n    return this._axes.get().angle || 0;\n  }\n}\n\nexport default SpinViewer;\n","import PanoViewer from \"./PanoViewer/PanoViewer\";\nimport { SpinViewer, SpriteImage } from \"./SpinViewer\";\nimport { VERSION } from \"./version\";\n\nexport default {\n  PanoViewer,\n  SpinViewer,\n  SpriteImage,\n  VERSION\n};\n"],"names":["win","window","Math","self","Function","doc","document","agent","getAgent","osName","os","name","browserName","browser","IS_IOS","IS_SAFARI_ON_DESKTOP","Float32Array","Array","getComputedStyle","userAgent","navigator","SUPPORT_TOUCH","SUPPORT_DEVICEMOTION","DeviceMotionEvent","devicePixelRatio","TRANSFORM","docStyle","documentElement","style","target","i","len","length","SUPPORT_WILLCHANGE","CSS","supports","WEBXR_SUPPORTED","checkXRSupport","xr","isSessionSupported","then","res","catch","supportsSession","quatToVec3","quaternion","baseV","vec3","fromValues","transformQuat","toDegree","a","PI","util","isPowerOfTwo","n","extractPitchFromQuat","atan2","sqrt","pow","hypot","x","y","ROTATE_CONSTANT","PITCH_DELTA","YAW_DELTA_BY_ROLL","YAW_DELTA_BY_YAW","targetAxis","meshPoint","getRotationDelta","prevQ","curQ","rotateKind","prevQuaternion","quat","clone","curQuaternion","normalize","prevPoint","curPoint","rotateDistance","dot","cross","create","rotateDirection","meshPoint2","meshPoint3","vecU","vecV","vecN","coefficientA","coefficientB","coefficientC","distance","abs","projectedPrevPoint","subtract","scale","trigonometricRatio","theta","acos","crossVec","thetaDirection","deltaRadian","angleBetweenVec2","v1","v2","det","vec2","yawOffsetBetween","viewDir","targetDir","viewDirXZ","targetDirXZ","toAxis","source","offset","reduce","acc","v","MathUtil","degToRad","radToDeg","Vector2","prototype","constructor","set","copy","subVectors","b","Vector3","z","scalar","invScalar","multiplyScalar","applyQuaternion","q","qx","qy","qz","qw","w","ix","iy","iz","iw","crossVectors","ax","ay","az","bx","by","bz","Quaternion","undefined","setFromEulerXYZ","c1","cos","c2","c3","s1","sin","s2","s3","setFromEulerYXZ","setFromAxisAngle","axis","angle","halfAngle","s","multiply","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","inverse","l","slerp","qb","t","cosHalfTheta","halfTheta","sinHalfTheta","ratioA","ratioB","setFromUnitVectors","r","EPS","vFrom","vTo","module","Util","MIN_TIMESTEP","MAX_TIMESTEP","base64","mimeType","clamp","value","min","max","lerp","isIOS","test","platform","isWebViewAndroid","indexOf","isSafari","isFirefoxAndroid","isR7","isLandscapeMode","rtn","orientation","isTimestampDeltaValid","timestampDeltaS","isNaN","getScreenWidth","screen","width","height","getScreenHeight","requestFullscreen","element","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","getFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","linkProgram","gl","vertexSource","fragmentSource","attribLocationMap","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","attribName","bindAttribLocation","deleteShader","getProgramUniforms","uniforms","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","uniformName","uniformInfo","getActiveUniform","replace","getUniformLocation","orthoMatrix","out","left","right","bottom","top","near","far","lr","bt","nf","copyArray","dest","isMobile","check","substr","vendor","opera","extend","src","key","hasOwnProperty","safariCssSizeWorkaround","canvas","parseInt","setTimeout","isDebug","getQueryParameter","regex","RegExp","results","exec","location","search","decodeURIComponent","frameDataFromPose","piOver180","rad45","mat4_perspectiveFromFieldOfView","fov","upTan","tan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","mat4_fromRotationTranslation","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","mat4_translate","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","mat4_invert","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","defaultOrientation","defaultPosition","updateEyeMatrices","projection","view","pose","parameters","vrDisplay","fieldOfView","depthNear","depthFar","position","frameData","timestamp","leftProjectionMatrix","leftViewMatrix","getEyeParameters","rightProjectionMatrix","rightViewMatrix","isInsideCrossDomainIFrame","isFramed","refDomain","getDomainFromUrl","referrer","thisDomain","href","url","domain","split","PosePredictor","predictionTimeS","previousQ","previousTimestampS","deltaQ","outQ","getPrediction","currentQ","gyro","timestampS","angularSpeed","console","log","toFixed","deltaT","predictAngle","version","branch","build","match","CHROME_VERSION","IS_CHROME_WITHOUT_DEVICE_MOTION","IS_ANDROID","CONTROL_MODE_VR","CONTROL_MODE_YAWPITCH","TOUCH_DIRECTION_NONE","TOUCH_DIRECTION_YAW","TOUCH_DIRECTION_PITCH","TOUCH_DIRECTION_ALL","MC_DECELERATION","MC_MAXIMUM_DURATION","MC_BIND_SCALE","MAX_FIELD_OF_VIEW","PAN_SCALE","YAW_RANGE_HALF","PITCH_RANGE_HALF","CIRCULAR_PITCH_RANGE_HALF","GYRO_MODE","NONE","YAWPITCH","VR","STILLNESS_THRESHOLD","__extends","_super","_this","_onDeviceMotion","bind","_onDeviceOrientation","_onChromeWithoutDeviceMotion","isWithoutDeviceMotion","isAndroid","stillGyroVec","rawGyroVec","adjustedGyroVec","_timer","lastDevicemotionTimestamp","_isEnabled","enable","addEventListener","removeEventListener","e","alpha","beta","gamma","trigger","inputEvent","deviceorientation","clearTimeout","Date","getTime","isGyroSensorAvailable","rotationRate","isGravitySensorAvailable","accelerationIncludingGravity","interval","devicemotionEvent","__assign","timeStamp","type","acceleration","adjustedRotationRate","Component","SensorSample","sample","__proto","sensorSample","ComplementaryFilter","kFilter","currentAccelMeasurement","currentGyroMeasurement","previousGyroMeasurement","filterQ","previousFilterQ","accelQ","isOrientationInitialized","estimatedGravity","measuredGravity","gyroIntegralQ","addAccelMeasurement","vector","addGyroMeasurement","run_","accelToQuaternion_","gyroDeltaQ","gyroToQuaternionDelta_","invFilterQ","getQuaternionAngle","targetQ","getOrientation","accel","normAccel","dt","isFilterQuaternionInitialized","K_FILTER","PREDICTION_TIME_S","deviceMotion","DeviceMotion","accelerometer","gyroscope","_onDeviceMotionChange","_onScreenOrientationChange","filter","posePredictor","filterToWorldQ","isChromeUsingDegrees","inverseWorldToScreenQ","worldToScreenQ","originalPoseAdjustQ","_setScreenTransform","resetQ","on","isEnabled","disable","_deviceOrientationQ","deviceOrientationFixQ","_alpha","out_","_convertFusionToPredicted","_prevOrientation","equals","predictedQ","_a","accGravity","rotRate","_triggerChange","getDeltaYaw","prvQ","yawDeltaByYaw","yawDeltaByRoll","getDeltaPitch","pitchDelta","el","options","_prevQuaternion","_quaternion","fusionPoseSensor","threshold","_onPoseChange","axes","observer","FusionPoseSensor","_attachEvent","_dettachEvent","destroy","disconnect","event","change","off","screenRotationAngleInst","refCount","_onOrientationChange","_spinR","_screenOrientationAngle","glMatrix","toRadian","betaR","gammaR","_useRotation","_screenRotationAngle","setUseRotation","useRotation","_userDirection","Axes","DIRECTION_ALL","unref","ScreenRotationAngle","_direction","DIRECTION_HORIZONTAL","connect","properties","useDirection","getOffset","newOffset","getRadian","cosTheta","sinTheta","DIRECTION_VERTICAL","PanInput","Y_AXIS_VECTOR","_fusionPoseSensor","isTrusted","yaw","yawQ","setAxisAngle","conj","conjugate","VERSION","DEFAULT_YAW_RANGE","DEFAULT_PITCH_RANGE","CIRCULAR_PITCH_RANGE","opt","pitch","showPolePoint","useZoom","useKeyboard","gyroMode","touchDirection","yawRange","pitchRange","fovRange","aspectRatio","_element","_initialFov","_enabled","_isAnimating","_deviceQuaternion","_initAxes","option","param","get","areaHeight","axesPanInput","deceleration","newValue","_getOptions","newOptions","changedKeyList","push","Object","keys","_setOptions","_getValidatedOptions","_applyOptions","updatePanScale","persistOrientation","_resetOrientation","duration","pos","p","f","maximumDuration","Infinity","setBy","yawPitch","getCombinedQuaternion","axesWheelInput","axesTiltMotionInput","axesPinchInput","axesMoveKeyInput","yRange","_updateYawRange","pRange","_updatePitchRange","RotationPanInput","WheelInput","PinchInput","MoveKeyInput","range","circular","_isCircular","bounce","hold","evt","delta","_updateControlScale","release","animationEnd","_getValidYawRange","_getValidPitchRange","arguments","isVR","isYawPitch","some","setTo","prevFov","nextFov","_initDeviceQuaternion","TiltMotionInput","_togglePinchInputByOption","_enableTouch","_inputs","direction","yawEnabled","pitchEnabled","DeviceQuaternion","newYawRange","newFov","newAspectRatio","ratio","_adjustAspectRatio","horizontalFov","isValid","newPitchRange","changeEvt","verticalAngle","halfFov","isPanorama","concat","horizontalAngle","halfHorizontalFov","mathUtil","targetElement","input","inputRange","outputRange","rangeIdx","inputA","inputB","outputA","outputB","_lerp","fraction","YawPitchControl","STATUS","EVENT","image","_image","_onceHandlers","_loadStatus","ImageLoader","images","map","img","_img","Image","crossOrigin","result","complete","naturalWidth","Promise","rej","LOADED","getElement","LOADING","isMaybeLoaded","READYSTATECHANGE","createElement","onceLoaded","ERROR","onload","onerror","targets","targetsNotLoaded","loadPromises","_once","all","reason","forEach","handler","fn","listener","READY_STATUS","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","LOADING_FAILED","READYSTATECHANGE_EVENT_NAME","video","_handlers","_sourceCount","_thresholdReadyState","_thresholdEventName","readyState","_onerror","_reset","HTMLVideoElement","_video","setAttribute","_appendSourceElement","querySelectorAll","load","_attachErrorHandler","rejector_1","_detachErrorHandler","_errorCount","videoUrl","videoSrc","videoType","sourceElement","appendChild","_sources","call","WEBGL_ERROR_CODE","webglAvailability","WebGLUtils","shader","success","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","detachShader","LINK_STATUS","deleteProgram","data","itemSize","attr","buffer","createBuffer","bindBuffer","bufferData","STATIC_DRAW","numItems","enableVertexAttribArray","vertexAttribPointer","FLOAT","userContextAttributes","webglIdentifiers","context","contextAttributes","preserveDrawingBuffer","antialias","xrCompatible","onWebglcontextcreationerror","statusMessage","webglIdentifiers_1","__values","identifier","getContext","textureTarget","texture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","webglContext","getWebglContext","loseContextExtension","getExtension","loseContext","agentInfo","isStableWebgl","parseFloat","code","pixels","texImage2D","RGBA","UNSIGNED_BYTE","getParameter","MAX_TEXTURE_SIZE","isIE11","majorVersion","EVENTS","_forceDimension","_pixelCanvas","_pixelContext","shaderProgram","indexBuffer","mvMatrix","pMatrix","uniformMatrix4fv","pMatrixUniform","mvMatrixUniform","drawElements","TRIANGLES","UNSIGNED_SHORT","pixelSource","videoWidth","naturalHeight","videoHeight","forceDimension","isIE11Video","getDimension","contentDimension","textureDimension","drawImage","imageConfig","tileConfig","isArray","config","flipHorizontal","rotation","message","Renderer","CubeRenderer","order","_VERTEX_POSITION_DATA","_INDEX_DATA","indexData","vertexPositionData","getVertexPositionData","vertexOrder","extractOrder","base","_extractTileConfig","elemSize","vertexPerTile","textureCoordData","face","floor","ordermap_","shift","unshift","pop","elemPerTile","tileVertex","slice","tileTemp","j","splice","join","baseOrder","orderMap","surfaceIdx","tileIdx","TEXTURE_CUBE_MAP_POSITIVE_X","maxCubeMapTextureSize","getMaxCubeMapTextureSize","tile","extractTileFromImage","_triggerError","TEXTURE_CUBE_MAP","updateTexture","inputTextureSize","outputTextureSize","getSourceTileSize","tilePerRow","MAX_CUBE_MAP_TEXTURE_SIZE","_imageWidth","_vertices","indices","cols","rows","coords","c","coord","tileConfigs","_shrinkCoord","_transformCoord","index","val","TEXTURE_2D","_getPixelSource","size","maxSize","getMaxTextureSize","_initPixelSource","activeTexture","TEXTURE0","pixelStorei","UNPACK_FLIP_Y_WEBGL","newCoord","_flipHorizontalCoord","_rotateCoord","SHRINK_Y","SHRINK_X","rotationAngle","SIZE","shiftCount","moved","rotatedCoord","ERROR_TYPE","INVALID_DEVICE","NO_WEBGL","FAIL_IMAGE_LOAD","FAIL_BIND_TEXTURE","INVALID_RESOURCE","RENDERING_CONTEXT_LOST","READY","VIEW_CHANGE","ANIMATION_END","PROJECTION_TYPE","EQUIRECTANGULAR","CUBEMAP","CUBESTRIP","PANORAMA","STEREOSCOPIC_EQUI","STEREO_FORMAT","TOP_BOTTOM","LEFT_RIGHT","latitudeBands","longitudeBands","radius","ANGLE_CORRECTION_FOR_CENTER_ALIGN","latIdx","lngIdx","phi","sinPhi","cosPhi","u","format","_stereoFormat","ctx","leftEyeScaleOffset","rightEyeScaleOffset","uTexScaleOffset","uniform4fv","render","SphereRenderer","_TEXTURE_COORD_DATA","MIN_ASPECT_RATIO_FOR_FULL_PANORAMA","CylinderRenderer","resizeDimension","_b","imageAspectRatio","cylinderMaxRadian","halfCylinderY","rotated","CYLIDER_Y","startAngleForCenterAlign","yIdx","yLength","VR_DISPLAY_PRESENT_CHANGE","DEFAULT_LEFT_BOUNDS","DEFAULT_RIGHT_BOUNDS","EYES","LEFT","RIGHT","_vrDisplay","removeEndCallback","isPresenting","exitPresent","_clear","_frameData","VRFrameData","Boolean","bindFramebuffer","FRAMEBUFFER","submitFrame","display","halfWidth","drawingBufferWidth","drawingBufferHeight","getFrameData","leftMVMatrix","rightMVMatrix","mat4","rotateY","_yawOffset","viewport","callback","getVRDisplays","displays","reject","Error","capabilities","canPresent","requestPresent","leftEye","rightEye","renderWidth","renderHeight","_setDisplay","layers","getLayers","layer","_leftBounds","leftBounds","_rightBounds","rightBounds","addEndCallback","merge","_i","srcs","XR_REFERENCE_SPACE","xrSession","_xrSession","end","_options","frame","getViewerPose","_xrRefSpace","session","baseLayer","renderState","framebuffer","glLayer","views","getViewport","transform","matrix","rotateX","projectionMatrix","_presenting","requiredFeatures","requestSession","xrLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","refSpace","_setSession","_xrLayer","args","_callback","_rafId","_context","requestAnimationFrame","_onLoop","before","performance","now","diff","_rafTimer","_onLoopNextTick","cancelAnimationFrame","ImageType","DEVICE_PIXEL_RATIO","BIND_TEXTURE","IMAGE_LOADED","RENDERING_CONTEXT_RESTORE","RENDERER_ERROR","isVideo","sphericalConfig","renderingContextAttributes","vr","_vr","animator","_animator","exitVR","_restoreStyle","updateViewportDimensions","_updateViewport","_bindBuffers","_shouldForceDraw","stop","setContext","setCallback","_render","start","time","eyeParams","getEyeParams","beforeRender","eyeIndex","eyeParam","uniform1f","uEye","_draw","afterRender","canRender","minusZDir","mat3","fromMat4","mvInv","invert","pInv","transformMat3","yawOffset","setYawOffset","_renderStereo","_lastQuaternion","_lastYaw","_lastPitch","_lastFieldOfView","perspective","textureCoordBuffer","vertexBuffer","_initCanvas","_setDefaultCanvasStyle","_wrapper","_wrapperOrigStyle","_renderingContextAttributes","_imageConfig","_imageIsReady","_keepUpdate","_onContentLoad","_onContentError","WebGLAnimator","setImage","imageType","cubemapConfig","yawPitchControl","_yawPitchControl","_isVideo","_setImageType","_contentLoader","VideoLoader","_bindTexture","parentElement","detach","hasRenderingContext","removeChild","forceContextLoss","_onWebglcontextlost","_onWebglcontextrestored","isContextLost","viewPortChanged","h","doUpdate","isImageLoaded","exactEquals","updateFieldOfView","fromQuat","identity","_renderer","resolve","_requestPresent","_imageType","_isCubeMap","CubeStripRenderer","stereoFormat","_initWebGL","margin","maxHeight","maxWidth","outline","content","projectionType","_triggerContentLoad","renderer","vsSource","getVertexShaderSource","fsSource","getFragmentShaderSource","getErrorNameFromWebGLErrorCode","getError","useProgram","vertexPositionAttribute","getAttribLocation","samplerUniform","textureCoordAttribute","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","uniform1i","preventDefault","_initRenderingContext","_initShaderProgram","clearColor","deleteTexture","CULL_FACE","WebGLRenderingContext","getIndexData","getTextureCoordData","initBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","Uint16Array","isEAC","updateShaderData","_initBuffers","getFov","shouldRenderWithQuaternion","getQuaternion","renderWithQuaternion","getYawPitch","renderWithYawPitch","_updateTexture","XRManager","VRManager","_onFirstVRFrame","_setWrapperFullscreen","wrapper","getAttribute","wrapperStyle","zIndex","removeAttribute","PanoImageRenderer","container","isWebGLAvailable","isStableWebGL","_container","_projectionType","_cubemapConfig","_width","_height","_yaw","_pitch","_fov","_gyroMode","_aspectRatio","PanoViewer","_isValidTouchDirection","yawPitchConfig","_isReady","_initYawPitchControl","_initRenderer","onDeviceMotionChange","checkGyro","timeout","race","fb","TOUCH_DIRECTION","YAW","PITCH","ALL","_photoSphereRenderer","getContent","warn","_deactivate","keepUpdate","requestPermission","permissionState","enableSensor","enterVR","containerSize","lookAt","verticalAngleOfImage","initialYaw","initialPitch","setYawPitchControl","_bindRendererHandler","_activate","ProjectionType","yawSize","maxFov","atan","minFov","attachTo","_updateYawPitchIfNeeded","startRender","stopRender","_el","_rowCount","rowCount","_colCount","colCount","_totalCount","_autoHeight","autoHeight","_colRow","colRow","frameIndex","setFrameIndex","SpriteImage","_getSizeString","imageUrl","_bg","_createBgDiv","setColRow","bgElement","_autoPlayReservedInfo","play","overflow","ondragstart","willChange","unitWidth","unitHeight","paddingBottom","toColRow","col","row","_autoPlayTimer","clearInterval","playCount","getFrameIndex","count","frameCount","setInterval","DEFAULT_PAN_SCALE","_scale","_panScale","_frameCount","_sprites","_panInput","_axes","curr","getColRow","SpinViewer"],"mappings":"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"}